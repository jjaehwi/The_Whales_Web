{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/examples/Cards/InfoCards/DefaultInfoCard/index.js\";\n\n/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is library for typechecking of props\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DefaultInfoCard(_ref) {\n  let {\n    color,\n    icon,\n    title,\n    description,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      p: 2,\n      mx: 3,\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"grid\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        bgColor: color,\n        color: \"white\",\n        width: \"4rem\",\n        height: \"4rem\",\n        shadow: \"md\",\n        borderRadius: \"lg\",\n        variant: \"gradient\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"default\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      pb: 2,\n      px: 2,\n      textAlign: \"center\",\n      lineHeight: 1.25,\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"h6\",\n        fontWeight: \"medium\",\n        textTransform: \"capitalize\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), description && /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"caption\",\n        color: \"text\",\n        fontWeight: \"regular\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), description && !value ? null : /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }, this), value && /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"h5\",\n        fontWeight: \"medium\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DefaultInfoCard\n\n\n_c = DefaultInfoCard;\nDefaultInfoCard.defaultProps = {\n  color: \"info\",\n  value: \"\",\n  description: \"\"\n}; // Typechecking props for the DefaultInfoCard\n\nDefaultInfoCard.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default DefaultInfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultInfoCard\");","map":{"version":3,"names":["PropTypes","Card","Divider","Icon","MDBox","MDTypography","DefaultInfoCard","color","icon","title","description","value","defaultProps","propTypes","oneOf","node","isRequired","string","oneOfType","number"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/examples/Cards/InfoCards/DefaultInfoCard/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\nfunction DefaultInfoCard({ color, icon, title, description, value }) {\n  return (\n    <Card>\n      <MDBox p={2} mx={3} display=\"flex\" justifyContent=\"center\">\n        <MDBox\n          display=\"grid\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          bgColor={color}\n          color=\"white\"\n          width=\"4rem\"\n          height=\"4rem\"\n          shadow=\"md\"\n          borderRadius=\"lg\"\n          variant=\"gradient\"\n        >\n          <Icon fontSize=\"default\">{icon}</Icon>\n        </MDBox>\n      </MDBox>\n      <MDBox pb={2} px={2} textAlign=\"center\" lineHeight={1.25}>\n        <MDTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n          {title}\n        </MDTypography>\n        {description && (\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"regular\">\n            {description}\n          </MDTypography>\n        )}\n        {description && !value ? null : <Divider />}\n        {value && (\n          <MDTypography variant=\"h5\" fontWeight=\"medium\">\n            {value}\n          </MDTypography>\n        )}\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of DefaultInfoCard\nDefaultInfoCard.defaultProps = {\n  color: \"info\",\n  value: \"\",\n  description: \"\",\n};\n\n// Typechecking props for the DefaultInfoCard\nDefaultInfoCard.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default DefaultInfoCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}