{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport MDBox from \"components/MDBox\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  _s();\n\n  const [lat, setLat] = useState(\"Loading...\");\n  const [long, setLong] = useState(\"Loading...\"); // const [data, setData] = useState(\"\");\n\n  const [temp, setTemp] = useState(\"Loading...\");\n  const [weather, setWeather] = useState(\"Loading...\"); // const [loading, setLoading] = useState(false);\n\n  async function onGeoOk(position) {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude); // fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`)\n    //   .then((response) => response.json())\n    //   .then(\n    //     (data) => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`),\n    //     (data) => setTemp(${data.main.temp - 273.15}),\n    //     (data) => setWeather(data.weather[0].main)\n    //   );\n\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`).then(res => {\n      console.log(`You live in ${lat} and ${long}`);\n      console.log(`온도 : ${Math.round(res.data.main.temp - 273.15)}, 날씨 : ${res.data.weather[0].main}`);\n      setTemp(Math.round(res.data.main.temp - 273.15));\n      setWeather(res.data.weather[0].main);\n    });\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError); // useEffect(async () => {\n  //   const result = await axios(\n  //     `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n  //   );\n  //   await setTemp(Math.round(result.data.main.temp - 273.15));\n  //   setWeather(result.data.weather[0].main);\n  //   console.log(`You live in ${lat} and ${long}`);\n  //   console.log(`온도 : ${result.data.main.temp - 273.15}, 날씨 : ${result.data.weather[0].main}`);\n  //   // console.log(`${temp} and ${weather}`);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    lang: \"ko\",\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charset: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"KAKAO \\uC9C0\\uB3C4 \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: \"width:500px;height:400px;\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        type: \"text/javascript\",\n        src: \"//dapi.kakao.com/v2/maps/sdk.js?appkey=c04445c5595e03c76c0d0ea29e5f6fc7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DashboardLayout, {\n        children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [\" \\uC704\\uB3C4 : \", lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [\" \\uACBD\\uB3C4 : \", long]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [\" \\uC628\\uB3C4 : \", temp, \"\\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          children: [\" \\uB0A0\\uC528 : \", weather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"Nx9UKa4z3Nbypg2DqLBYkaUBDUE=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["axios","MDBox","Footer","DashboardLayout","DashboardNavbar","useState","API_KEY","Weather","lat","setLat","long","setLong","temp","setTemp","weather","setWeather","onGeoOk","position","coords","latitude","longitude","get","then","res","console","log","Math","round","data","main","onGeoError","alert","navigator","geolocation","getCurrentPosition"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import axios from \"axios\";\nimport MDBox from \"components/MDBox\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\n\nimport { useState } from \"react\";\n\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  const [lat, setLat] = useState(\"Loading...\");\n  const [long, setLong] = useState(\"Loading...\");\n  // const [data, setData] = useState(\"\");\n  const [temp, setTemp] = useState(\"Loading...\");\n  const [weather, setWeather] = useState(\"Loading...\");\n  // const [loading, setLoading] = useState(false);\n\n  async function onGeoOk(position) {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n    // fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`)\n    //   .then((response) => response.json())\n    //   .then(\n    //     (data) => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`),\n    //     (data) => setTemp(${data.main.temp - 273.15}),\n    //     (data) => setWeather(data.weather[0].main)\n    //   );\n\n    await axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n      )\n      .then((res) => {\n        console.log(`You live in ${lat} and ${long}`);\n        console.log(\n          `온도 : ${Math.round(res.data.main.temp - 273.15)}, 날씨 : ${res.data.weather[0].main}`\n        );\n        setTemp(Math.round(res.data.main.temp - 273.15));\n        setWeather(res.data.weather[0].main);\n      });\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n\n  // useEffect(async () => {\n  //   const result = await axios(\n  //     `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n  //   );\n  //   await setTemp(Math.round(result.data.main.temp - 273.15));\n  //   setWeather(result.data.weather[0].main);\n  //   console.log(`You live in ${lat} and ${long}`);\n  //   console.log(`온도 : ${result.data.main.temp - 273.15}, 날씨 : ${result.data.weather[0].main}`);\n\n  //   // console.log(`${temp} and ${weather}`);\n  // }, []);\n\n  return (\n    <html lang=\"ko\">\n      <head>\n        <meta charset=\"utf-8\" />\n        <title>KAKAO 지도 시작</title>\n        <div id=\"map\" style=\"width:500px;height:400px;\"></div>\n      </head>\n      <body>\n        <script\n          type=\"text/javascript\"\n          src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=c04445c5595e03c76c0d0ea29e5f6fc7\"\n        />\n        <DashboardLayout>\n          <DashboardNavbar />\n\n          <MDBox> 위도 : {lat}</MDBox>\n          <MDBox> 경도 : {long}</MDBox>\n          <MDBox> 온도 : {temp}℃</MDBox>\n          <MDBox> 날씨 : {weather}</MDBox>\n          <Footer />\n        </DashboardLayout>\n      </body>\n    </html>\n  );\n}\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}