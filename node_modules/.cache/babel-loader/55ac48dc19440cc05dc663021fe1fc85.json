{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js\";\nimport axios from \"axios\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  function Success(position) {\n    const lat = position.coords.latitude; //위도\n\n    const log = position.coords.longitude; //경도\n\n    const API_KEY = \"11f51a135860cbff7041b080fabf611f\"; // 각자 개인의 API KEY를 발급받아 사용해주세요.\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${log}&appid=${API_KEY}&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data.weather[0].main);\n      console.log(data.main.temp);\n    });\n  }\n\n  function Error() {\n    console.log(\"위치를 찾지 못했습니다.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(Success, Error);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppWrap, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appContentWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: location,\n          onChange: e => setLocation(e.target.value),\n          type: \"text\",\n          onKeyDown: searchWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), Object.keys(result).length !== 0 && /*#__PURE__*/_jsxDEV(ResultWrap, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"city\",\n            children: result.data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature\",\n            children: [Math.round((result.data.main.temp - 273.15) * 10) / 10, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sky\",\n            children: result.data.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Weather;\nexport default Weather;\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    padding: 20px;\n  }\n  input {\n    padding: 16px;\n    border: 2px black solid;\n    border-radius: 16px;\n  }\n`;\n_c2 = AppWrap;\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  border: 1px black solid;\n  padding: 10px;\n  border-radius: 8px;\n  .city {\n    font-size: 24px;\n  }\n  .temperature {\n    font-size: 60px;\n    margin-top: 8px;\n  }\n  .sky {\n    font-size: 20px;\n    text-align: right;\n    margin-top: 8px;\n  }\n`;\n_c3 = ResultWrap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"AppWrap\");\n$RefreshReg$(_c3, \"ResultWrap\");","map":{"version":3,"names":["axios","Footer","DashboardLayout","DashboardNavbar","useState","styled","Weather","Success","position","lat","coords","latitude","log","longitude","API_KEY","url","fetch","then","response","json","data","console","weather","main","temp","Error","navigator","geolocation","getCurrentPosition","location","e","setLocation","target","value","searchWeather","Object","keys","result","length","name","Math","round","AppWrap","div","ResultWrap"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import axios from \"axios\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction Weather() {\n  function Success(position) {\n    const lat = position.coords.latitude; //위도\n    const log = position.coords.longitude; //경도\n\n    const API_KEY = \"11f51a135860cbff7041b080fabf611f\"; // 각자 개인의 API KEY를 발급받아 사용해주세요.\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${log}&appid=${API_KEY}&units=metric`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.weather[0].main);\n        console.log(data.main.temp);\n      });\n  }\n  function Error() {\n    console.log(\"위치를 찾지 못했습니다.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(Success, Error);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <AppWrap>\n        <div className=\"appContentWrap\">\n          <input\n            placeholder=\"도시를 입력하세요\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            type=\"text\"\n            onKeyDown={searchWeather}\n          />\n          {Object.keys(result).length !== 0 && (\n            <ResultWrap>\n              <div className=\"city\">{result.data.name}</div>\n              <div className=\"temperature\">\n                {Math.round((result.data.main.temp - 273.15) * 10) / 10}°C\n              </div>\n              <div className=\"sky\">{result.data.weather[0].main}</div>\n            </ResultWrap>\n          )}\n        </div>\n      </AppWrap>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Weather;\n\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    padding: 20px;\n  }\n  input {\n    padding: 16px;\n    border: 2px black solid;\n    border-radius: 16px;\n  }\n`;\n\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  border: 1px black solid;\n  padding: 10px;\n  border-radius: 8px;\n  .city {\n    font-size: 24px;\n  }\n  .temperature {\n    font-size: 60px;\n    margin-top: 8px;\n  }\n  .sky {\n    font-size: 20px;\n    text-align: right;\n    margin-top: 8px;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}