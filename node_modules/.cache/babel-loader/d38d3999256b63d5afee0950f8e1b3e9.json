{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport MDBox from \"components/MDBox\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  _s();\n\n  const [lat, setLat] = useState(\"Loading...\");\n  const [long, setLong] = useState(\"Loading...\");\n  const [data, setData] = useState(\"\");\n  const [temp, setTemp] = useState(\"Loading...\");\n  const [weather, setWeather] = useState(\"Loading...\");\n  useEffect(async () => {\n    const result = await axios(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`);\n    setData(result.data);\n  }, []);\n  setLat(position.coords.latitude);\n  setLong(position.coords.longitude);\n  setTemp(data.main.temp);\n  setWeather(data.weather[0].main);\n\n  function onGeoOk(position) {// fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`)\n    //   .then((response) => response.json())\n    //   .then(\n    //     (data) => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`),\n    //     (data) => setTemp(${data.main.temp - 273.15}),\n    //     (data) => setWeather(data.weather[0].main)\n    //   );\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  console.log(`You live in ${lat} and ${long}`);\n  console.log(`${temp} and ${weather}`);\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uC704\\uB3C4 : \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uACBD\\uB3C4 : \", long]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uC628\\uB3C4 : \", temp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uB0A0\\uC528 : \", weather]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"mXVxfjaaYkNCK54zTsD7/rhYBjo=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["axios","MDBox","Footer","DashboardLayout","DashboardNavbar","useEffect","useState","API_KEY","Weather","lat","setLat","long","setLong","data","setData","temp","setTemp","weather","setWeather","result","position","coords","latitude","longitude","main","onGeoOk","onGeoError","alert","console","log","navigator","geolocation","getCurrentPosition"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import axios from \"axios\";\nimport MDBox from \"components/MDBox\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useEffect, useState } from \"react\";\n\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  const [lat, setLat] = useState(\"Loading...\");\n  const [long, setLong] = useState(\"Loading...\");\n  const [data, setData] = useState(\"\");\n  const [temp, setTemp] = useState(\"Loading...\");\n  const [weather, setWeather] = useState(\"Loading...\");\n\n  useEffect(async () => {\n    const result = await axios(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n    );\n    setData(result.data);\n  }, []);\n\n  setLat(position.coords.latitude);\n  setLong(position.coords.longitude);\n  setTemp(data.main.temp);\n  setWeather(data.weather[0].main);\n\n  function onGeoOk(position) {\n    // fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`)\n    //   .then((response) => response.json())\n    //   .then(\n    //     (data) => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`),\n    //     (data) => setTemp(${data.main.temp - 273.15}),\n    //     (data) => setWeather(data.weather[0].main)\n    //   );\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n  console.log(`You live in ${lat} and ${long}`);\n  console.log(`${temp} and ${weather}`);\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <MDBox> 위도 : {lat}</MDBox>\n      <MDBox> 경도 : {long}</MDBox>\n      <MDBox> 온도 : {temp}</MDBox>\n      <MDBox> 날씨 : {weather}</MDBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Weather;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,YAAD,CAA9B;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,YAAD,CAAhC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,YAAD,CAAhC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,YAAD,CAAtC;EAEAD,SAAS,CAAC,YAAY;IACpB,MAAMc,MAAM,GAAG,MAAMnB,KAAK,CACvB,uDAAsDS,GAAI,QAAOE,IAAK,UAASJ,OAAQ,EADhE,CAA1B;IAGAO,OAAO,CAACK,MAAM,CAACN,IAAR,CAAP;EACD,CALQ,EAKN,EALM,CAAT;EAOAH,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;EACAV,OAAO,CAACQ,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAP;EACAP,OAAO,CAACH,IAAI,CAACW,IAAL,CAAUT,IAAX,CAAP;EACAG,UAAU,CAACL,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBO,IAAjB,CAAV;;EAEA,SAASC,OAAT,CAAiBL,QAAjB,EAA2B,CACzB;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;EAED,SAASM,UAAT,GAAsB;IACpBC,KAAK,CAAC,qCAAD,CAAL;EACD;;EACDC,OAAO,CAACC,GAAR,CAAa,eAAcpB,GAAI,QAAOE,IAAK,EAA3C;EACAiB,OAAO,CAACC,GAAR,CAAa,GAAEd,IAAK,QAAOE,OAAQ,EAAnC;EAEAa,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCP,OAAzC,EAAkDC,UAAlD;EAEA,oBACE,QAAC,eAAD;IAAA,wBACE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAA,+BAAcjB,GAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAA,+BAAcE,IAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,KAAD;MAAA,+BAAcI,IAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,KAAD;MAAA,+BAAcE,OAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA/CQT,O;;KAAAA,O;AAiDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}