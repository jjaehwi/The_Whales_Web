{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js\";\nimport { Grid } from \"@mui/material\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  var _s = $RefreshSig$();\n\n  function onGeoOk(position) {\n    _s();\n\n    const [lat, setLat] = useState(\"\");\n    const [long, setLong] = useState(\"\");\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    console.log(`You live in ${latitude} and ${longitude}`);\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`).then(response => response.json()).then(data => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`));\n  }\n\n  _s(onGeoOk, \"zj1eMSDwiuF8/IYBIiNviAdxmU0=\");\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appContentWrap\",\n        children: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["Grid","Footer","DashboardLayout","DashboardNavbar","useState","API_KEY","Weather","onGeoOk","position","lat","setLat","long","setLong","latitude","longitude","coords","console","log","fetch","then","response","json","data","main","temp","weather","onGeoError","alert","navigator","geolocation","getCurrentPosition"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import { Grid } from \"@mui/material\";\n\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\n\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  function onGeoOk(position) {\n    const [lat, setLat] = useState(\"\");\n    const [long, setLong] = useState(\"\");\n    const { latitude, longitude } = position.coords;\n\n    console.log(`You live in ${latitude} and ${longitude}`);\n\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`)\n      );\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <Grid>\n        <div className=\"appContentWrap\">12</div>\n      </Grid>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Weather;\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,eAArB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;IAAA;;IACzB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;IACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;IACA,MAAM;MAAES,QAAF;MAAYC;IAAZ,IAA0BN,QAAQ,CAACO,MAAzC;IAEAC,OAAO,CAACC,GAAR,CAAa,eAAcJ,QAAS,QAAOC,SAAU,EAArD;IAEAI,KAAK,CACF,uDAAsDL,QAAS,QAAOC,SAAU,UAAST,OAAQ,EAD/F,CAAL,CAGGc,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IACJN,OAAO,CAACC,GAAR,CAAa,QAAOK,IAAI,CAACC,IAAL,CAAUC,IAAV,GAAiB,MAAO,UAASF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBF,IAAK,EAA1E,CALJ;EAOD;;EAfgB,GACRhB,OADQ;;EAiBjB,SAASmB,UAAT,GAAsB;IACpBC,KAAK,CAAC,qCAAD,CAAL;EACD;;EAEDC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCvB,OAAzC,EAAkDmB,UAAlD;EAEA,oBACE,QAAC,eAAD;IAAA,wBACE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAA,uBACE;QAAK,SAAS,EAAC,gBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAhCQpB,O;AAkCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}