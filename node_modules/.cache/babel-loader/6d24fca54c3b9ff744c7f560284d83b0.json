{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [result, setResult] = useState({});\n  const API_KEY = \"11f51a135860cbff7041b080fabf611f\"; // 각자 개인의 API KEY를 발급받아 사용해주세요.\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\n\n  const searchWeather = async e => {\n    if (e.key === \"Enter\") {\n      try {\n        const data = await axios({\n          method: \"get\",\n          url\n        });\n        setResult(data);\n        console.log(data);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        type: \"text\",\n        onKeyDown: searchWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), Object.keys(result).length !== 0 && /*#__PURE__*/_jsxDEV(ResultWrap, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city\",\n          children: result.data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature\",\n          children: [Math.round((result.data.main.temp - 273.15) * 10) / 10, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sky\",\n          children: result.data.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"yeaP3NI/Cx7uoyLDb3V7dZWqRHI=\");\n\n_c = Weather;\nexport default Weather;\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    padding: 20px;\n  }\n  input {\n    padding: 16px;\n    border: 2px black solid;\n    border-radius: 16px;\n  }\n`;\n_c2 = AppWrap;\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  border: 1px black solid;\n  padding: 10px;\n  border-radius: 8px;\n  .city {\n    font-size: 24px;\n  }\n  .temperature {\n    font-size: 60px;\n    margin-top: 8px;\n  }\n  .sky {\n    font-size: 20px;\n    text-align: right;\n    margin-top: 8px;\n  }\n`;\n_c3 = ResultWrap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"AppWrap\");\n$RefreshReg$(_c3, \"ResultWrap\");","map":{"version":3,"names":["axios","useState","styled","Weather","location","setLocation","result","setResult","API_KEY","url","searchWeather","e","key","data","method","console","log","err","alert","target","value","Object","keys","length","name","Math","round","main","temp","weather","AppWrap","div","ResultWrap"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction Weather() {\n  const [location, setLocation] = useState(\"\");\n  const [result, setResult] = useState({});\n  const API_KEY = \"11f51a135860cbff7041b080fabf611f\"; // 각자 개인의 API KEY를 발급받아 사용해주세요.\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\n  const searchWeather = async (e) => {\n    if (e.key === \"Enter\") {\n      try {\n        const data = await axios({\n          method: \"get\",\n          url,\n        });\n        setResult(data);\n        console.log(data);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n\n  return (\n    <AppWrap>\n      <div className=\"appContentWrap\">\n        <input\n          placeholder=\"도시를 입력하세요\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          type=\"text\"\n          onKeyDown={searchWeather}\n        />\n        {Object.keys(result).length !== 0 && (\n          <ResultWrap>\n            <div className=\"city\">{result.data.name}</div>\n            <div className=\"temperature\">\n              {Math.round((result.data.main.temp - 273.15) * 10) / 10}°C\n            </div>\n            <div className=\"sky\">{result.data.weather[0].main}</div>\n          </ResultWrap>\n        )}\n      </div>\n    </AppWrap>\n  );\n}\n\nexport default Weather;\n\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    padding: 20px;\n  }\n  input {\n    padding: 16px;\n    border: 2px black solid;\n    border-radius: 16px;\n  }\n`;\n\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  border: 1px black solid;\n  padding: 10px;\n  border-radius: 8px;\n  .city {\n    font-size: 24px;\n  }\n  .temperature {\n    font-size: 60px;\n    margin-top: 8px;\n  }\n  .sky {\n    font-size: 20px;\n    text-align: right;\n    margin-top: 8px;\n  }\n`;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAMO,OAAO,GAAG,kCAAhB,CAHiB,CAGmC;;EAEpD,MAAMC,GAAG,GAAI,qDAAoDL,QAAS,UAASI,OAAQ,EAA3F;;EACA,MAAME,aAAa,GAAG,MAAOC,CAAP,IAAa;IACjC,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;MACrB,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMb,KAAK,CAAC;UACvBc,MAAM,EAAE,KADe;UAEvBL;QAFuB,CAAD,CAAxB;QAIAF,SAAS,CAACM,IAAD,CAAT;QACAE,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACD,CAPD,CAOE,OAAOI,GAAP,EAAY;QACZC,KAAK,CAACD,GAAD,CAAL;MACD;IACF;EACF,CAbD;;EAeA,oBACE,QAAC,OAAD;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QACE,WAAW,EAAC,mDADd;QAEE,KAAK,EAAEb,QAFT;QAGE,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV,CAH9B;QAIE,IAAI,EAAC,MAJP;QAKE,SAAS,EAAEV;MALb;QAAA;QAAA;QAAA;MAAA,QADF,EAQGW,MAAM,CAACC,IAAP,CAAYhB,MAAZ,EAAoBiB,MAApB,KAA+B,CAA/B,iBACC,QAAC,UAAD;QAAA,wBACE;UAAK,SAAS,EAAC,MAAf;UAAA,UAAuBjB,MAAM,CAACO,IAAP,CAAYW;QAAnC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,aAAf;UAAA,WACGC,IAAI,CAACC,KAAL,CAAW,CAACpB,MAAM,CAACO,IAAP,CAAYc,IAAZ,CAAiBC,IAAjB,GAAwB,MAAzB,IAAmC,EAA9C,IAAoD,EADvD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UAAK,SAAS,EAAC,KAAf;UAAA,UAAsBtB,MAAM,CAACO,IAAP,CAAYgB,OAAZ,CAAoB,CAApB,EAAuBF;QAA7C;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA3CQxB,O;;KAAAA,O;AA6CT,eAAeA,OAAf;AAEA,MAAM2B,OAAO,GAAG5B,MAAM,CAAC6B,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMD,O;AAiBN,MAAME,UAAU,GAAG9B,MAAM,CAAC6B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMC,U"},"metadata":{},"sourceType":"module"}