{"ast":null,"code":"import _objectSpread from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"color\",\"variant\",\"size\",\"circular\",\"iconOnly\",\"children\"];/**\n=========================================================\n* Material Dashboard 2 PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/import{forwardRef}from\"react\";// prop-types is a library for typechecking of props\n// Custom styles for MDButton\nimport MDButtonRoot from\"components/MDButton/MDButtonRoot\";// Material Dashboard 2 React contexts\nimport{useMaterialUIController}from\"context\";import{jsx as _jsx}from\"react/jsx-runtime\";var MDButton=/*#__PURE__*/forwardRef(function(_ref,ref){var color=_ref.color,variant=_ref.variant,size=_ref.size,circular=_ref.circular,iconOnly=_ref.iconOnly,children=_ref.children,rest=_objectWithoutProperties(_ref,_excluded);var _useMaterialUIControl=useMaterialUIController(),_useMaterialUIControl2=_slicedToArray(_useMaterialUIControl,1),controller=_useMaterialUIControl2[0];var darkMode=controller.darkMode;return/*#__PURE__*/_jsx(MDButtonRoot,_objectSpread(_objectSpread({},rest),{},{ref:ref,color:\"primary\",variant:variant===\"gradient\"?\"contained\":variant,size:size,ownerState:{color:color,variant:variant,size:size,circular:circular,iconOnly:iconOnly,darkMode:darkMode},children:children}));});// Setting default values for the props of MDButton\nMDButton.defaultProps={size:\"medium\",variant:\"contained\",color:\"white\",circular:false,iconOnly:false};// Typechecking props for the MDButton\nexport default MDButton;","map":{"version":3,"names":["forwardRef","MDButtonRoot","useMaterialUIController","MDButton","ref","color","variant","size","circular","iconOnly","children","rest","controller","darkMode","defaultProps"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/components/MDButton/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-pro-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDButton\nimport MDButtonRoot from \"components/MDButton/MDButtonRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDButton = forwardRef(\n  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDButtonRoot\n        {...rest}\n        ref={ref}\n        color=\"primary\"\n        variant={variant === \"gradient\" ? \"contained\" : variant}\n        size={size}\n        ownerState={{ color, variant, size, circular, iconOnly, darkMode }}\n      >\n        {children}\n      </MDButtonRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDButton\nMDButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false,\n};\n\n// Typechecking props for the MDButton\nMDButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MDButton;\n"],"mappings":"qfAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,OAASA,UAAT,KAA2B,OAA3B,CAEA;AAGA;AACA,MAAOC,aAAP,KAAyB,kCAAzB,CAEA;AACA,OAASC,uBAAT,KAAwC,SAAxC,C,2CAEA,GAAMC,SAAQ,cAAGH,UAAU,CACzB,cAAkEI,GAAlE,CAA0E,IAAvEC,MAAuE,MAAvEA,KAAuE,CAAhEC,OAAgE,MAAhEA,OAAgE,CAAvDC,IAAuD,MAAvDA,IAAuD,CAAjDC,QAAiD,MAAjDA,QAAiD,CAAvCC,QAAuC,MAAvCA,QAAuC,CAA7BC,QAA6B,MAA7BA,QAA6B,CAAhBC,IAAgB,0CACxE,0BAAqBT,uBAAuB,EAA5C,gEAAOU,UAAP,2BACA,GAAQC,SAAR,CAAqBD,UAArB,CAAQC,QAAR,CAEA,mBACE,KAAC,YAAD,gCACMF,IADN,MAEE,GAAG,CAAEP,GAFP,CAGE,KAAK,CAAC,SAHR,CAIE,OAAO,CAAEE,OAAO,GAAK,UAAZ,CAAyB,WAAzB,CAAuCA,OAJlD,CAKE,IAAI,CAAEC,IALR,CAME,UAAU,CAAE,CAAEF,KAAK,CAALA,KAAF,CAASC,OAAO,CAAPA,OAAT,CAAkBC,IAAI,CAAJA,IAAlB,CAAwBC,QAAQ,CAARA,QAAxB,CAAkCC,QAAQ,CAARA,QAAlC,CAA4CI,QAAQ,CAARA,QAA5C,CANd,UAQGH,QARH,GADF,CAYD,CAjBwB,CAA3B,CAoBA;AACAP,QAAQ,CAACW,YAAT,CAAwB,CACtBP,IAAI,CAAE,QADgB,CAEtBD,OAAO,CAAE,WAFa,CAGtBD,KAAK,CAAE,OAHe,CAItBG,QAAQ,CAAE,KAJY,CAKtBC,QAAQ,CAAE,KALY,CAAxB,CAQA;AAoBA,cAAeN,SAAf"},"metadata":{},"sourceType":"module"}