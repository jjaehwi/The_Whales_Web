{"ast":null,"code":"/*!\n * CSSJanus. https://github.com/cssjanus/cssjanus\n *\n * Copyright 2014 Trevor Parscal\n * Copyright 2010 Roan Kattouw\n * Copyright 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar cssjanus;\n/**\n * Create a tokenizer object.\n *\n * This utility class is used by CSSJanus to protect strings by replacing them temporarily with\n * tokens and later transforming them back.\n *\n * @class\n * @constructor\n * @param {RegExp} regex Regular expression whose matches to replace by a token\n * @param {string} token Placeholder text\n */\n\nfunction Tokenizer(regex, token) {\n  var matches = [],\n      index = 0;\n  /**\n   * Add a match.\n   *\n   * @private\n   * @param {string} match Matched string\n   * @return {string} Token to leave in the matched string's place\n   */\n\n  function tokenizeCallback(match) {\n    matches.push(match);\n    return token;\n  }\n  /**\n   * Get a match.\n   *\n   * @private\n   * @return {string} Original matched string to restore\n   */\n\n\n  function detokenizeCallback() {\n    return matches[index++];\n  }\n\n  return {\n    /**\n     * Replace matching strings with tokens.\n     *\n     * @param {string} str String to tokenize\n     * @return {string} Tokenized string\n     */\n    tokenize: function (str) {\n      return str.replace(regex, tokenizeCallback);\n    },\n\n    /**\n     * Restores tokens to their original values.\n     *\n     * @param {string} str String previously run through tokenize()\n     * @return {string} Original string\n     */\n    detokenize: function (str) {\n      return str.replace(new RegExp('(' + token + ')', 'g'), detokenizeCallback);\n    }\n  };\n}\n/**\n * Create a CSSJanus object.\n *\n * CSSJanus transforms CSS rules with horizontal relevance so that a left-to-right stylesheet can\n * become a right-to-left stylesheet automatically. Processing can be bypassed for an entire rule\n * or a single property by adding a / * @noflip * / comment above the rule or property.\n *\n * @class\n * @constructor\n */\n\n\nfunction CSSJanus() {\n  var // Tokens\n  temporaryToken = '`TMP`',\n      noFlipSingleToken = '`NOFLIP_SINGLE`',\n      noFlipClassToken = '`NOFLIP_CLASS`',\n      commentToken = '`COMMENT`',\n      // Patterns\n  nonAsciiPattern = '[^\\\\u0020-\\\\u007e]',\n      unicodePattern = '(?:(?:\\\\\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)',\n      numPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)',\n      unitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)',\n      directionPattern = 'direction\\\\s*:\\\\s*',\n      urlSpecialCharsPattern = '[!#$%&*-~]',\n      validAfterUriCharsPattern = '[\\'\"]?\\\\s*',\n      nonLetterPattern = '(^|[^a-zA-Z])',\n      charsWithinSelectorPattern = '[^\\\\}]*?',\n      noFlipPattern = '\\\\/\\\\*\\\\!?\\\\s*@noflip\\\\s*\\\\*\\\\/',\n      commentPattern = '\\\\/\\\\*[^*]*\\\\*+([^\\\\/*][^*]*\\\\*+)*\\\\/',\n      escapePattern = '(?:' + unicodePattern + '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])',\n      nmstartPattern = '(?:[_a-z]|' + nonAsciiPattern + '|' + escapePattern + ')',\n      nmcharPattern = '(?:[_a-z0-9-]|' + nonAsciiPattern + '|' + escapePattern + ')',\n      identPattern = '-?' + nmstartPattern + nmcharPattern + '*',\n      quantPattern = numPattern + '(?:\\\\s*' + unitPattern + '|' + identPattern + ')?',\n      signedQuantPattern = '((?:-?' + quantPattern + ')|(?:inherit|auto))',\n      fourNotationQuantPropsPattern = '((?:margin|padding|border-width)\\\\s*:\\\\s*)',\n      fourNotationColorPropsPattern = '((?:-color|border-style)\\\\s*:\\\\s*)',\n      colorPattern = '(#?' + nmcharPattern + '+|(?:rgba?|hsla?)\\\\([ \\\\d.,%-]+\\\\))',\n      // The use of a lazy match (\"*?\") may cause a backtrack limit to be exceeded before finding\n  // the intended match. This affects 'urlCharsPattern' and 'lookAheadNotOpenBracePattern'.\n  // We have not yet found this problem on Node.js, but we have on PHP 7, where it was\n  // mitigated by using a possessive quantifier (\"*+\"), which are not supported in JS.\n  // See <https://github.com/cssjanus/php-cssjanus/issues/14> and <https://phabricator.wikimedia.org/T215746#4944830>.\n  urlCharsPattern = '(?:' + urlSpecialCharsPattern + '|' + nonAsciiPattern + '|' + escapePattern + ')*?',\n      lookAheadNotLetterPattern = '(?![a-zA-Z])',\n      lookAheadNotOpenBracePattern = '(?!(' + nmcharPattern + '|\\\\r?\\\\n|\\\\s|#|\\\\:|\\\\.|\\\\,|\\\\+|>|~|\\\\(|\\\\)|\\\\[|\\\\]|=|\\\\*=|~=|\\\\^=|\\'[^\\']*\\'|\"[^\"]*\"|' + commentToken + ')*?{)',\n      lookAheadNotClosingParenPattern = '(?!' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n      lookAheadForClosingParenPattern = '(?=' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n      suffixPattern = '(\\\\s*(?:!important\\\\s*)?[;}])',\n      // Regular expressions\n  temporaryTokenRegExp = /`TMP`/g,\n      commentRegExp = new RegExp(commentPattern, 'gi'),\n      noFlipSingleRegExp = new RegExp('(' + noFlipPattern + lookAheadNotOpenBracePattern + '[^;}]+;?)', 'gi'),\n      noFlipClassRegExp = new RegExp('(' + noFlipPattern + charsWithinSelectorPattern + '})', 'gi'),\n      directionLtrRegExp = new RegExp('(' + directionPattern + ')ltr', 'gi'),\n      directionRtlRegExp = new RegExp('(' + directionPattern + ')rtl', 'gi'),\n      leftRegExp = new RegExp(nonLetterPattern + '(left)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi'),\n      rightRegExp = new RegExp(nonLetterPattern + '(right)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi'),\n      leftInUrlRegExp = new RegExp(nonLetterPattern + '(left)' + lookAheadForClosingParenPattern, 'gi'),\n      rightInUrlRegExp = new RegExp(nonLetterPattern + '(right)' + lookAheadForClosingParenPattern, 'gi'),\n      ltrInUrlRegExp = new RegExp(nonLetterPattern + '(ltr)' + lookAheadForClosingParenPattern, 'gi'),\n      rtlInUrlRegExp = new RegExp(nonLetterPattern + '(rtl)' + lookAheadForClosingParenPattern, 'gi'),\n      cursorEastRegExp = new RegExp(nonLetterPattern + '([ns]?)e-resize', 'gi'),\n      cursorWestRegExp = new RegExp(nonLetterPattern + '([ns]?)w-resize', 'gi'),\n      fourNotationQuantRegExp = new RegExp(fourNotationQuantPropsPattern + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + suffixPattern, 'gi'),\n      fourNotationColorRegExp = new RegExp(fourNotationColorPropsPattern + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + suffixPattern, 'gi'),\n      bgHorizontalPercentageRegExp = new RegExp('(background(?:-position)?\\\\s*:\\\\s*(?:[^:;}\\\\s]+\\\\s+)*?)(' + quantPattern + ')', 'gi'),\n      bgHorizontalPercentageXRegExp = new RegExp('(background-position-x\\\\s*:\\\\s*)(-?' + numPattern + '%)', 'gi'),\n      // border-radius: <length or percentage>{1,4} [optional: / <length or percentage>{1,4} ]\n  borderRadiusRegExp = new RegExp('(border-radius\\\\s*:\\\\s*)' + signedQuantPattern + '(?:(?:\\\\s+' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + '(?:(?:(?:\\\\s*\\\\/\\\\s*)' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + suffixPattern, 'gi'),\n      boxShadowRegExp = new RegExp('(box-shadow\\\\s*:\\\\s*(?:inset\\\\s*)?)' + signedQuantPattern, 'gi'),\n      textShadow1RegExp = new RegExp('(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern + '(\\\\s*)' + colorPattern, 'gi'),\n      textShadow2RegExp = new RegExp('(text-shadow\\\\s*:\\\\s*)' + colorPattern + '(\\\\s*)' + signedQuantPattern, 'gi'),\n      textShadow3RegExp = new RegExp('(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern, 'gi'),\n      translateXRegExp = new RegExp('(transform\\\\s*:[^;}]*)(translateX\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '(\\\\s*\\\\))', 'gi'),\n      translateRegExp = new RegExp('(transform\\\\s*:[^;}]*)(translate\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '((?:\\\\s*,\\\\s*' + signedQuantPattern + '){0,2}\\\\s*\\\\))', 'gi');\n  /**\n   * Invert the horizontal value of a background position property.\n   *\n   * @private\n   * @param {string} match Matched property\n   * @param {string} pre Text before value\n   * @param {string} value Horizontal value\n   * @return {string} Inverted property\n   */\n\n  function calculateNewBackgroundPosition(match, pre, value) {\n    var idx, len;\n\n    if (value.slice(-1) === '%') {\n      idx = value.indexOf('.');\n\n      if (idx !== -1) {\n        // Two off, one for the \"%\" at the end, one for the dot itself\n        len = value.length - idx - 2;\n        value = 100 - parseFloat(value);\n        value = value.toFixed(len) + '%';\n      } else {\n        value = 100 - parseFloat(value) + '%';\n      }\n    }\n\n    return pre + value;\n  }\n  /**\n   * Invert a set of border radius values.\n   *\n   * @private\n   * @param {Array} values Matched values\n   * @return {string} Inverted values\n   */\n\n\n  function flipBorderRadiusValues(values) {\n    switch (values.length) {\n      case 4:\n        values = [values[1], values[0], values[3], values[2]];\n        break;\n\n      case 3:\n        values = [values[1], values[0], values[1], values[2]];\n        break;\n\n      case 2:\n        values = [values[1], values[0]];\n        break;\n\n      case 1:\n        values = [values[0]];\n        break;\n    }\n\n    return values.join(' ');\n  }\n  /**\n   * Invert a set of border radius values.\n   *\n   * @private\n   * @param {string} match Matched property\n   * @param {string} pre Text before value\n   * @param {string} [firstGroup1]\n   * @param {string} [firstGroup2]\n   * @param {string} [firstGroup3]\n   * @param {string} [firstGroup4]\n   * @param {string} [secondGroup1]\n   * @param {string} [secondGroup2]\n   * @param {string} [secondGroup3]\n   * @param {string} [secondGroup4]\n   * @param {string} [post] Text after value\n   * @return {string} Inverted property\n   */\n\n\n  function calculateNewBorderRadius(match, pre) {\n    var values,\n        args = [].slice.call(arguments),\n        firstGroup = args.slice(2, 6).filter(function (val) {\n      return val;\n    }),\n        secondGroup = args.slice(6, 10).filter(function (val) {\n      return val;\n    }),\n        post = args[10] || '';\n\n    if (secondGroup.length) {\n      values = flipBorderRadiusValues(firstGroup) + ' / ' + flipBorderRadiusValues(secondGroup);\n    } else {\n      values = flipBorderRadiusValues(firstGroup);\n    }\n\n    return pre + values + post;\n  }\n  /**\n   * Flip the sign of a CSS value, possibly with a unit.\n   *\n   * We can't just negate the value with unary minus due to the units.\n   *\n   * @private\n   * @param {string} value\n   * @return {string}\n   */\n\n\n  function flipSign(value) {\n    if (parseFloat(value) === 0) {\n      // Don't mangle zeroes\n      return value;\n    }\n\n    if (value[0] === '-') {\n      return value.slice(1);\n    }\n\n    return '-' + value;\n  }\n  /**\n   * @private\n   * @param {string} match\n   * @param {string} property\n   * @param {string} offset\n   * @return {string}\n   */\n\n\n  function calculateNewShadow(match, property, offset) {\n    return property + flipSign(offset);\n  }\n  /**\n   * @private\n   * @param {string} match\n   * @param {string} property\n   * @param {string} prefix\n   * @param {string} offset\n   * @param {string} suffix\n   * @return {string}\n   */\n\n\n  function calculateNewTranslate(match, property, prefix, offset, suffix) {\n    return property + prefix + flipSign(offset) + suffix;\n  }\n  /**\n   * @private\n   * @param {string} match\n   * @param {string} property\n   * @param {string} color\n   * @param {string} space\n   * @param {string} offset\n   * @return {string}\n   */\n\n\n  function calculateNewFourTextShadow(match, property, color, space, offset) {\n    return property + color + space + flipSign(offset);\n  }\n\n  return {\n    /**\n     * Transform a left-to-right stylesheet to right-to-left.\n     *\n     * @param {string} css Stylesheet to transform\n     * @param {Object} options Options\n     * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n     * (e.g. 'ltr', 'rtl')\n     * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n     * (e.g. 'left', 'right')\n     * @return {string} Transformed stylesheet\n     */\n    'transform': function (css, options) {\n      // eslint-disable-line quote-props\n      // Use single quotes in this object literal key for closure compiler.\n      // Tokenizers\n      var noFlipSingleTokenizer = new Tokenizer(noFlipSingleRegExp, noFlipSingleToken),\n          noFlipClassTokenizer = new Tokenizer(noFlipClassRegExp, noFlipClassToken),\n          commentTokenizer = new Tokenizer(commentRegExp, commentToken); // Tokenize\n\n      css = commentTokenizer.tokenize(noFlipClassTokenizer.tokenize(noFlipSingleTokenizer.tokenize( // We wrap tokens in ` , not ~ like the original implementation does.\n      // This was done because ` is not a legal character in CSS and can only\n      // occur in URLs, where we escape it to %60 before inserting our tokens.\n      css.replace('`', '%60')))); // Transform URLs\n\n      if (options.transformDirInUrl) {\n        // Replace 'ltr' with 'rtl' and vice versa in background URLs\n        css = css.replace(ltrInUrlRegExp, '$1' + temporaryToken).replace(rtlInUrlRegExp, '$1ltr').replace(temporaryTokenRegExp, 'rtl');\n      }\n\n      if (options.transformEdgeInUrl) {\n        // Replace 'left' with 'right' and vice versa in background URLs\n        css = css.replace(leftInUrlRegExp, '$1' + temporaryToken).replace(rightInUrlRegExp, '$1left').replace(temporaryTokenRegExp, 'right');\n      } // Transform rules\n\n\n      css = css // Replace direction: ltr; with direction: rtl; and vice versa.\n      .replace(directionLtrRegExp, '$1' + temporaryToken).replace(directionRtlRegExp, '$1ltr').replace(temporaryTokenRegExp, 'rtl') // Flip rules like left: , padding-right: , etc.\n      .replace(leftRegExp, '$1' + temporaryToken).replace(rightRegExp, '$1left').replace(temporaryTokenRegExp, 'right') // Flip East and West in rules like cursor: nw-resize;\n      .replace(cursorEastRegExp, '$1$2' + temporaryToken).replace(cursorWestRegExp, '$1$2e-resize').replace(temporaryTokenRegExp, 'w-resize') // Border radius\n      .replace(borderRadiusRegExp, calculateNewBorderRadius) // Shadows\n      .replace(boxShadowRegExp, calculateNewShadow).replace(textShadow1RegExp, calculateNewFourTextShadow).replace(textShadow2RegExp, calculateNewFourTextShadow).replace(textShadow3RegExp, calculateNewShadow) // Translate\n      .replace(translateXRegExp, calculateNewTranslate).replace(translateRegExp, calculateNewTranslate) // Swap the second and fourth parts in four-part notation rules\n      // like padding: 1px 2px 3px 4px;\n      .replace(fourNotationQuantRegExp, '$1$2$3$8$5$6$7$4$9').replace(fourNotationColorRegExp, '$1$2$3$8$5$6$7$4$9') // Flip horizontal background percentages\n      .replace(bgHorizontalPercentageRegExp, calculateNewBackgroundPosition).replace(bgHorizontalPercentageXRegExp, calculateNewBackgroundPosition); // Detokenize\n\n      css = noFlipSingleTokenizer.detokenize(noFlipClassTokenizer.detokenize(commentTokenizer.detokenize(css)));\n      return css;\n    }\n  };\n}\n/* Initialization */\n\n\ncssjanus = new CSSJanus();\n/* Exports */\n\nif (typeof module !== 'undefined' && module.exports) {\n  /**\n   * Transform a left-to-right stylesheet to right-to-left.\n   *\n   * This function is a static wrapper around the transform method of an instance of CSSJanus.\n   *\n   * @param {string} css Stylesheet to transform\n   * @param {Object|boolean} [options] Options object, or transformDirInUrl option (back-compat)\n   * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n   * (e.g. 'ltr', 'rtl')\n   * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n   * (e.g. 'left', 'right')\n   * @param {boolean} [transformEdgeInUrl] Back-compat parameter\n   * @return {string} Transformed stylesheet\n   */\n  exports.transform = function (css, options, transformEdgeInUrl) {\n    var norm;\n\n    if (typeof options === 'object') {\n      norm = options;\n    } else {\n      norm = {};\n\n      if (typeof options === 'boolean') {\n        norm.transformDirInUrl = options;\n      }\n\n      if (typeof transformEdgeInUrl === 'boolean') {\n        norm.transformEdgeInUrl = transformEdgeInUrl;\n      }\n    }\n\n    return cssjanus.transform(css, norm);\n  };\n} else if (typeof window !== 'undefined') {\n  /* global window */\n  // Allow cssjanus to be used in a browser.\n  // eslint-disable-next-line dot-notation\n  window['cssjanus'] = cssjanus;\n}","map":{"version":3,"names":["cssjanus","Tokenizer","regex","token","matches","index","tokenizeCallback","match","push","detokenizeCallback","tokenize","str","replace","detokenize","RegExp","CSSJanus","temporaryToken","noFlipSingleToken","noFlipClassToken","commentToken","nonAsciiPattern","unicodePattern","numPattern","unitPattern","directionPattern","urlSpecialCharsPattern","validAfterUriCharsPattern","nonLetterPattern","charsWithinSelectorPattern","noFlipPattern","commentPattern","escapePattern","nmstartPattern","nmcharPattern","identPattern","quantPattern","signedQuantPattern","fourNotationQuantPropsPattern","fourNotationColorPropsPattern","colorPattern","urlCharsPattern","lookAheadNotLetterPattern","lookAheadNotOpenBracePattern","lookAheadNotClosingParenPattern","lookAheadForClosingParenPattern","suffixPattern","temporaryTokenRegExp","commentRegExp","noFlipSingleRegExp","noFlipClassRegExp","directionLtrRegExp","directionRtlRegExp","leftRegExp","rightRegExp","leftInUrlRegExp","rightInUrlRegExp","ltrInUrlRegExp","rtlInUrlRegExp","cursorEastRegExp","cursorWestRegExp","fourNotationQuantRegExp","fourNotationColorRegExp","bgHorizontalPercentageRegExp","bgHorizontalPercentageXRegExp","borderRadiusRegExp","boxShadowRegExp","textShadow1RegExp","textShadow2RegExp","textShadow3RegExp","translateXRegExp","translateRegExp","calculateNewBackgroundPosition","pre","value","idx","len","slice","indexOf","length","parseFloat","toFixed","flipBorderRadiusValues","values","join","calculateNewBorderRadius","args","call","arguments","firstGroup","filter","val","secondGroup","post","flipSign","calculateNewShadow","property","offset","calculateNewTranslate","prefix","suffix","calculateNewFourTextShadow","color","space","css","options","noFlipSingleTokenizer","noFlipClassTokenizer","commentTokenizer","transformDirInUrl","transformEdgeInUrl","module","exports","transform","norm","window"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/node_modules/cssjanus/src/cssjanus.js"],"sourcesContent":["/*!\n * CSSJanus. https://github.com/cssjanus/cssjanus\n *\n * Copyright 2014 Trevor Parscal\n * Copyright 2010 Roan Kattouw\n * Copyright 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar cssjanus;\n\n/**\n * Create a tokenizer object.\n *\n * This utility class is used by CSSJanus to protect strings by replacing them temporarily with\n * tokens and later transforming them back.\n *\n * @class\n * @constructor\n * @param {RegExp} regex Regular expression whose matches to replace by a token\n * @param {string} token Placeholder text\n */\nfunction Tokenizer( regex, token ) {\n\n\tvar matches = [],\n\t\tindex = 0;\n\n\t/**\n\t * Add a match.\n\t *\n\t * @private\n\t * @param {string} match Matched string\n\t * @return {string} Token to leave in the matched string's place\n\t */\n\tfunction tokenizeCallback( match ) {\n\t\tmatches.push( match );\n\t\treturn token;\n\t}\n\n\t/**\n\t * Get a match.\n\t *\n\t * @private\n\t * @return {string} Original matched string to restore\n\t */\n\tfunction detokenizeCallback() {\n\t\treturn matches[ index++ ];\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Replace matching strings with tokens.\n\t\t *\n\t\t * @param {string} str String to tokenize\n\t\t * @return {string} Tokenized string\n\t\t */\n\t\ttokenize: function ( str ) {\n\t\t\treturn str.replace( regex, tokenizeCallback );\n\t\t},\n\n\t\t/**\n\t\t * Restores tokens to their original values.\n\t\t *\n\t\t * @param {string} str String previously run through tokenize()\n\t\t * @return {string} Original string\n\t\t */\n\t\tdetokenize: function ( str ) {\n\t\t\treturn str.replace( new RegExp( '(' + token + ')', 'g' ), detokenizeCallback );\n\t\t}\n\t};\n}\n\n/**\n * Create a CSSJanus object.\n *\n * CSSJanus transforms CSS rules with horizontal relevance so that a left-to-right stylesheet can\n * become a right-to-left stylesheet automatically. Processing can be bypassed for an entire rule\n * or a single property by adding a / * @noflip * / comment above the rule or property.\n *\n * @class\n * @constructor\n */\nfunction CSSJanus() {\n\n\tvar\n\t\t// Tokens\n\t\ttemporaryToken = '`TMP`',\n\t\tnoFlipSingleToken = '`NOFLIP_SINGLE`',\n\t\tnoFlipClassToken = '`NOFLIP_CLASS`',\n\t\tcommentToken = '`COMMENT`',\n\t\t// Patterns\n\t\tnonAsciiPattern = '[^\\\\u0020-\\\\u007e]',\n\t\tunicodePattern = '(?:(?:\\\\\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)',\n\t\tnumPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)',\n\t\tunitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)',\n\t\tdirectionPattern = 'direction\\\\s*:\\\\s*',\n\t\turlSpecialCharsPattern = '[!#$%&*-~]',\n\t\tvalidAfterUriCharsPattern = '[\\'\"]?\\\\s*',\n\t\tnonLetterPattern = '(^|[^a-zA-Z])',\n\t\tcharsWithinSelectorPattern = '[^\\\\}]*?',\n\t\tnoFlipPattern = '\\\\/\\\\*\\\\!?\\\\s*@noflip\\\\s*\\\\*\\\\/',\n\t\tcommentPattern = '\\\\/\\\\*[^*]*\\\\*+([^\\\\/*][^*]*\\\\*+)*\\\\/',\n\t\tescapePattern = '(?:' + unicodePattern + '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])',\n\t\tnmstartPattern = '(?:[_a-z]|' + nonAsciiPattern + '|' + escapePattern + ')',\n\t\tnmcharPattern = '(?:[_a-z0-9-]|' + nonAsciiPattern + '|' + escapePattern + ')',\n\t\tidentPattern = '-?' + nmstartPattern + nmcharPattern + '*',\n\t\tquantPattern = numPattern + '(?:\\\\s*' + unitPattern + '|' + identPattern + ')?',\n\t\tsignedQuantPattern = '((?:-?' + quantPattern + ')|(?:inherit|auto))',\n\t\tfourNotationQuantPropsPattern = '((?:margin|padding|border-width)\\\\s*:\\\\s*)',\n\t\tfourNotationColorPropsPattern = '((?:-color|border-style)\\\\s*:\\\\s*)',\n\t\tcolorPattern = '(#?' + nmcharPattern + '+|(?:rgba?|hsla?)\\\\([ \\\\d.,%-]+\\\\))',\n\t\t// The use of a lazy match (\"*?\") may cause a backtrack limit to be exceeded before finding\n\t\t// the intended match. This affects 'urlCharsPattern' and 'lookAheadNotOpenBracePattern'.\n\t\t// We have not yet found this problem on Node.js, but we have on PHP 7, where it was\n\t\t// mitigated by using a possessive quantifier (\"*+\"), which are not supported in JS.\n\t\t// See <https://github.com/cssjanus/php-cssjanus/issues/14> and <https://phabricator.wikimedia.org/T215746#4944830>.\n\t\turlCharsPattern = '(?:' + urlSpecialCharsPattern + '|' + nonAsciiPattern + '|' + escapePattern + ')*?',\n\t\tlookAheadNotLetterPattern = '(?![a-zA-Z])',\n\t\tlookAheadNotOpenBracePattern = '(?!(' + nmcharPattern + '|\\\\r?\\\\n|\\\\s|#|\\\\:|\\\\.|\\\\,|\\\\+|>|~|\\\\(|\\\\)|\\\\[|\\\\]|=|\\\\*=|~=|\\\\^=|\\'[^\\']*\\'|\"[^\"]*\"|' + commentToken + ')*?{)',\n\t\tlookAheadNotClosingParenPattern = '(?!' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n\t\tlookAheadForClosingParenPattern = '(?=' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n\t\tsuffixPattern = '(\\\\s*(?:!important\\\\s*)?[;}])',\n\t\t// Regular expressions\n\t\ttemporaryTokenRegExp = /`TMP`/g,\n\t\tcommentRegExp = new RegExp( commentPattern, 'gi' ),\n\t\tnoFlipSingleRegExp = new RegExp( '(' + noFlipPattern + lookAheadNotOpenBracePattern + '[^;}]+;?)', 'gi' ),\n\t\tnoFlipClassRegExp = new RegExp( '(' + noFlipPattern + charsWithinSelectorPattern + '})', 'gi' ),\n\t\tdirectionLtrRegExp = new RegExp( '(' + directionPattern + ')ltr', 'gi' ),\n\t\tdirectionRtlRegExp = new RegExp( '(' + directionPattern + ')rtl', 'gi' ),\n\t\tleftRegExp = new RegExp( nonLetterPattern + '(left)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi' ),\n\t\trightRegExp = new RegExp( nonLetterPattern + '(right)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi' ),\n\t\tleftInUrlRegExp = new RegExp( nonLetterPattern + '(left)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\trightInUrlRegExp = new RegExp( nonLetterPattern + '(right)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\tltrInUrlRegExp = new RegExp( nonLetterPattern + '(ltr)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\trtlInUrlRegExp = new RegExp( nonLetterPattern + '(rtl)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\tcursorEastRegExp = new RegExp( nonLetterPattern + '([ns]?)e-resize', 'gi' ),\n\t\tcursorWestRegExp = new RegExp( nonLetterPattern + '([ns]?)w-resize', 'gi' ),\n\t\tfourNotationQuantRegExp = new RegExp( fourNotationQuantPropsPattern + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + suffixPattern, 'gi' ),\n\t\tfourNotationColorRegExp = new RegExp( fourNotationColorPropsPattern + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + suffixPattern, 'gi' ),\n\t\tbgHorizontalPercentageRegExp = new RegExp( '(background(?:-position)?\\\\s*:\\\\s*(?:[^:;}\\\\s]+\\\\s+)*?)(' + quantPattern + ')', 'gi' ),\n\t\tbgHorizontalPercentageXRegExp = new RegExp( '(background-position-x\\\\s*:\\\\s*)(-?' + numPattern + '%)', 'gi' ),\n\t\t// border-radius: <length or percentage>{1,4} [optional: / <length or percentage>{1,4} ]\n\t\tborderRadiusRegExp = new RegExp( '(border-radius\\\\s*:\\\\s*)' + signedQuantPattern + '(?:(?:\\\\s+' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' +\n\t\t\t'(?:(?:(?:\\\\s*\\\\/\\\\s*)' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + suffixPattern, 'gi' ),\n\t\tboxShadowRegExp = new RegExp( '(box-shadow\\\\s*:\\\\s*(?:inset\\\\s*)?)' + signedQuantPattern, 'gi' ),\n\t\ttextShadow1RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern + '(\\\\s*)' + colorPattern, 'gi' ),\n\t\ttextShadow2RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + colorPattern + '(\\\\s*)' + signedQuantPattern, 'gi' ),\n\t\ttextShadow3RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern, 'gi' ),\n\t\ttranslateXRegExp = new RegExp( '(transform\\\\s*:[^;}]*)(translateX\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '(\\\\s*\\\\))', 'gi' ),\n\t\ttranslateRegExp = new RegExp( '(transform\\\\s*:[^;}]*)(translate\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '((?:\\\\s*,\\\\s*' + signedQuantPattern + '){0,2}\\\\s*\\\\))', 'gi' );\n\n\t/**\n\t * Invert the horizontal value of a background position property.\n\t *\n\t * @private\n\t * @param {string} match Matched property\n\t * @param {string} pre Text before value\n\t * @param {string} value Horizontal value\n\t * @return {string} Inverted property\n\t */\n\tfunction calculateNewBackgroundPosition( match, pre, value ) {\n\t\tvar idx, len;\n\t\tif ( value.slice( -1 ) === '%' ) {\n\t\t\tidx = value.indexOf( '.' );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\t// Two off, one for the \"%\" at the end, one for the dot itself\n\t\t\t\tlen = value.length - idx - 2;\n\t\t\t\tvalue = 100 - parseFloat( value );\n\t\t\t\tvalue = value.toFixed( len ) + '%';\n\t\t\t} else {\n\t\t\t\tvalue = 100 - parseFloat( value ) + '%';\n\t\t\t}\n\t\t}\n\t\treturn pre + value;\n\t}\n\n\t/**\n\t * Invert a set of border radius values.\n\t *\n\t * @private\n\t * @param {Array} values Matched values\n\t * @return {string} Inverted values\n\t */\n\tfunction flipBorderRadiusValues( values ) {\n\t\tswitch ( values.length ) {\n\t\t\tcase 4:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ], values[ 3 ], values[ 2 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ], values[ 1 ], values[ 2 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvalues = [ values[ 0 ] ];\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn values.join( ' ' );\n\t}\n\n\t/**\n\t * Invert a set of border radius values.\n\t *\n\t * @private\n\t * @param {string} match Matched property\n\t * @param {string} pre Text before value\n\t * @param {string} [firstGroup1]\n\t * @param {string} [firstGroup2]\n\t * @param {string} [firstGroup3]\n\t * @param {string} [firstGroup4]\n\t * @param {string} [secondGroup1]\n\t * @param {string} [secondGroup2]\n\t * @param {string} [secondGroup3]\n\t * @param {string} [secondGroup4]\n\t * @param {string} [post] Text after value\n\t * @return {string} Inverted property\n\t */\n\tfunction calculateNewBorderRadius( match, pre ) {\n\t\tvar values,\n\t\t\targs = [].slice.call( arguments ),\n\t\t\tfirstGroup = args.slice( 2, 6 ).filter( function ( val ) { return val; } ),\n\t\t\tsecondGroup = args.slice( 6, 10 ).filter( function ( val ) { return val; } ),\n\t\t\tpost = args[ 10 ] || '';\n\n\t\tif ( secondGroup.length ) {\n\t\t\tvalues = flipBorderRadiusValues( firstGroup ) + ' / ' + flipBorderRadiusValues( secondGroup );\n\t\t} else {\n\t\t\tvalues = flipBorderRadiusValues( firstGroup );\n\t\t}\n\n\t\treturn pre + values + post;\n\t}\n\n\t/**\n\t * Flip the sign of a CSS value, possibly with a unit.\n\t *\n\t * We can't just negate the value with unary minus due to the units.\n\t *\n\t * @private\n\t * @param {string} value\n\t * @return {string}\n\t */\n\tfunction flipSign( value ) {\n\t\tif ( parseFloat( value ) === 0 ) {\n\t\t\t// Don't mangle zeroes\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( value[ 0 ] === '-' ) {\n\t\t\treturn value.slice( 1 );\n\t\t}\n\n\t\treturn '-' + value;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} offset\n\t * @return {string}\n\t */\n\tfunction calculateNewShadow( match, property, offset ) {\n\t\treturn property + flipSign( offset );\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} prefix\n\t * @param {string} offset\n\t * @param {string} suffix\n\t * @return {string}\n\t */\n\tfunction calculateNewTranslate( match, property, prefix, offset, suffix ) {\n\t\treturn property + prefix + flipSign( offset ) + suffix;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} color\n\t * @param {string} space\n\t * @param {string} offset\n\t * @return {string}\n\t */\n\tfunction calculateNewFourTextShadow( match, property, color, space, offset ) {\n\t\treturn property + color + space + flipSign( offset );\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Transform a left-to-right stylesheet to right-to-left.\n\t\t *\n\t\t * @param {string} css Stylesheet to transform\n\t\t * @param {Object} options Options\n\t\t * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n\t\t * (e.g. 'ltr', 'rtl')\n\t\t * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n\t\t * (e.g. 'left', 'right')\n\t\t * @return {string} Transformed stylesheet\n\t\t */\n\t\t'transform': function ( css, options ) { // eslint-disable-line quote-props\n\t\t\t// Use single quotes in this object literal key for closure compiler.\n\t\t\t// Tokenizers\n\t\t\tvar noFlipSingleTokenizer = new Tokenizer( noFlipSingleRegExp, noFlipSingleToken ),\n\t\t\t\tnoFlipClassTokenizer = new Tokenizer( noFlipClassRegExp, noFlipClassToken ),\n\t\t\t\tcommentTokenizer = new Tokenizer( commentRegExp, commentToken );\n\n\t\t\t// Tokenize\n\t\t\tcss = commentTokenizer.tokenize(\n\t\t\t\tnoFlipClassTokenizer.tokenize(\n\t\t\t\t\tnoFlipSingleTokenizer.tokenize(\n\t\t\t\t\t\t// We wrap tokens in ` , not ~ like the original implementation does.\n\t\t\t\t\t\t// This was done because ` is not a legal character in CSS and can only\n\t\t\t\t\t\t// occur in URLs, where we escape it to %60 before inserting our tokens.\n\t\t\t\t\t\tcss.replace( '`', '%60' )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// Transform URLs\n\t\t\tif ( options.transformDirInUrl ) {\n\t\t\t\t// Replace 'ltr' with 'rtl' and vice versa in background URLs\n\t\t\t\tcss = css\n\t\t\t\t\t.replace( ltrInUrlRegExp, '$1' + temporaryToken )\n\t\t\t\t\t.replace( rtlInUrlRegExp, '$1ltr' )\n\t\t\t\t\t.replace( temporaryTokenRegExp, 'rtl' );\n\t\t\t}\n\t\t\tif ( options.transformEdgeInUrl ) {\n\t\t\t\t// Replace 'left' with 'right' and vice versa in background URLs\n\t\t\t\tcss = css\n\t\t\t\t\t.replace( leftInUrlRegExp, '$1' + temporaryToken )\n\t\t\t\t\t.replace( rightInUrlRegExp, '$1left' )\n\t\t\t\t\t.replace( temporaryTokenRegExp, 'right' );\n\t\t\t}\n\n\t\t\t// Transform rules\n\t\t\tcss = css\n\t\t\t\t// Replace direction: ltr; with direction: rtl; and vice versa.\n\t\t\t\t.replace( directionLtrRegExp, '$1' + temporaryToken )\n\t\t\t\t.replace( directionRtlRegExp, '$1ltr' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'rtl' )\n\t\t\t\t// Flip rules like left: , padding-right: , etc.\n\t\t\t\t.replace( leftRegExp, '$1' + temporaryToken )\n\t\t\t\t.replace( rightRegExp, '$1left' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'right' )\n\t\t\t\t// Flip East and West in rules like cursor: nw-resize;\n\t\t\t\t.replace( cursorEastRegExp, '$1$2' + temporaryToken )\n\t\t\t\t.replace( cursorWestRegExp, '$1$2e-resize' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'w-resize' )\n\t\t\t\t// Border radius\n\t\t\t\t.replace( borderRadiusRegExp, calculateNewBorderRadius )\n\t\t\t\t// Shadows\n\t\t\t\t.replace( boxShadowRegExp, calculateNewShadow )\n\t\t\t\t.replace( textShadow1RegExp, calculateNewFourTextShadow )\n\t\t\t\t.replace( textShadow2RegExp, calculateNewFourTextShadow )\n\t\t\t\t.replace( textShadow3RegExp, calculateNewShadow )\n\t\t\t\t// Translate\n\t\t\t\t.replace( translateXRegExp, calculateNewTranslate )\n\t\t\t\t.replace( translateRegExp, calculateNewTranslate )\n\t\t\t\t// Swap the second and fourth parts in four-part notation rules\n\t\t\t\t// like padding: 1px 2px 3px 4px;\n\t\t\t\t.replace( fourNotationQuantRegExp, '$1$2$3$8$5$6$7$4$9' )\n\t\t\t\t.replace( fourNotationColorRegExp, '$1$2$3$8$5$6$7$4$9' )\n\t\t\t\t// Flip horizontal background percentages\n\t\t\t\t.replace( bgHorizontalPercentageRegExp, calculateNewBackgroundPosition )\n\t\t\t\t.replace( bgHorizontalPercentageXRegExp, calculateNewBackgroundPosition );\n\n\t\t\t// Detokenize\n\t\t\tcss = noFlipSingleTokenizer.detokenize(\n\t\t\t\tnoFlipClassTokenizer.detokenize(\n\t\t\t\t\tcommentTokenizer.detokenize( css )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\treturn css;\n\t\t}\n\t};\n}\n\n/* Initialization */\n\ncssjanus = new CSSJanus();\n\n/* Exports */\n\nif ( typeof module !== 'undefined' && module.exports ) {\n\t/**\n\t * Transform a left-to-right stylesheet to right-to-left.\n\t *\n\t * This function is a static wrapper around the transform method of an instance of CSSJanus.\n\t *\n\t * @param {string} css Stylesheet to transform\n\t * @param {Object|boolean} [options] Options object, or transformDirInUrl option (back-compat)\n\t * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n\t * (e.g. 'ltr', 'rtl')\n\t * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n\t * (e.g. 'left', 'right')\n\t * @param {boolean} [transformEdgeInUrl] Back-compat parameter\n\t * @return {string} Transformed stylesheet\n\t */\n\texports.transform = function ( css, options, transformEdgeInUrl ) {\n\t\tvar norm;\n\t\tif ( typeof options === 'object' ) {\n\t\t\tnorm = options;\n\t\t} else {\n\t\t\tnorm = {};\n\t\t\tif ( typeof options === 'boolean' ) {\n\t\t\t\tnorm.transformDirInUrl = options;\n\t\t\t}\n\t\t\tif ( typeof transformEdgeInUrl === 'boolean' ) {\n\t\t\t\tnorm.transformEdgeInUrl = transformEdgeInUrl;\n\t\t\t}\n\t\t}\n\t\treturn cssjanus.transform( css, norm );\n\t};\n} else if ( typeof window !== 'undefined' ) {\n\t/* global window */\n\t// Allow cssjanus to be used in a browser.\n\t// eslint-disable-next-line dot-notation\n\twindow[ 'cssjanus' ] = cssjanus;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}