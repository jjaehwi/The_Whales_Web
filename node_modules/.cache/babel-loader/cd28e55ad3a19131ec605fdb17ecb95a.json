{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      highlighted = ownerState.highlighted,\n      selected = ownerState.selected;\n  var slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nvar OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n\n  var children = props.children,\n      className = props.className,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      disabled = props.disabled,\n      value = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  var Root = component || components.Root || 'li';\n  var selectOption = {\n    value: value,\n    label: children,\n    disabled: disabled\n  };\n  var optionState = selectContext.getOptionState(selectOption);\n  var optionProps = selectContext.getOptionProps(selectOption);\n\n  var ownerState = _extends({}, props, optionState);\n\n  var optionRef = React.useRef(null);\n  var handleRef = useForkRef(ref, optionRef);\n  React.useEffect(function () {\n    if (optionState.highlighted) {\n      var _optionRef$current, _optionRef$current$sc;\n\n      (_optionRef$current = optionRef.current) == null ? void 0 : (_optionRef$current$sc = _optionRef$current.scrollIntoView) == null ? void 0 : _optionRef$current$sc.call(_optionRef$current, {\n        block: 'nearest'\n      });\n    }\n  }, [optionState.highlighted]);\n  var classes = useUtilityClasses(ownerState);\n  var rootProps = appendOwnerState(Root, _extends({}, other, {\n    ref: handleRef\n  }, optionProps, componentsProps.root, {\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to components.Root.\n   * If both are provided, the component is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Selects](https://mui.com/components/selects/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","unstable_useForkRef","useForkRef","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","appendOwnerState","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","_componentsProps$root","children","className","component","components","componentsProps","value","other","selectContext","useContext","Error","Root","selectOption","label","optionState","getOptionState","optionProps","getOptionProps","optionRef","useRef","handleRef","useEffect","_optionRef$current","_optionRef$current$sc","current","scrollIntoView","call","block","classes","rootProps","process","env","NODE_ENV","propTypes","node","string","elementType","shape","object","bool","any","isRequired","memo"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n\n  const {\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || components.Root || 'li';\n  const selectOption = {\n    value,\n    label: children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    if (optionState.highlighted) {\n      var _optionRef$current, _optionRef$current$sc;\n\n      (_optionRef$current = optionRef.current) == null ? void 0 : (_optionRef$current$sc = _optionRef$current.scrollIntoView) == null ? void 0 : _optionRef$current$sc.call(_optionRef$current, {\n        block: 'nearest'\n      });\n    }\n  }, [optionState.highlighted]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = appendOwnerState(Root, _extends({}, other, {\n    ref: handleRef\n  }, optionProps, componentsProps.root, {\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to components.Root.\n   * If both are provided, the component is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Selects](https://mui.com/components/selects/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"],"mappings":"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"},"metadata":{},"sourceType":"module"}