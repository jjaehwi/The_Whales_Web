{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _regeneratorRuntime from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/hwi/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2;import axios from\"axios\";import Footer from\"examples/Footer\";import DashboardLayout from\"examples/LayoutContainers/DashboardLayout\";import DashboardNavbar from\"examples/Navbars/DashboardNavbar\";import{useState}from\"react\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Weather(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),location=_useState2[0],setLocation=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var API_KEY=\"11f51a135860cbff7041b080fabf611f\";// 각자 개인의 API KEY를 발급받아 사용해주세요.\nvar url=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(location,\"&appid=\").concat(API_KEY);var searchWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.key===\"Enter\")){_context.next=11;break;}_context.prev=1;_context.next=4;return axios({method:\"get\",url:url});case 4:data=_context.sent;setResult(data);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);alert(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function searchWeather(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(DashboardLayout,{children:[/*#__PURE__*/_jsx(DashboardNavbar,{}),/*#__PURE__*/_jsx(AppWrap,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"appContentWrap\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:location,onChange:function onChange(e){return setLocation(e.target.value);},type:\"text\",onKeyDown:searchWeather}),Object.keys(result).length!==0&&/*#__PURE__*/_jsxs(ResultWrap,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"city\",children:result.data.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"temperature\",children:[Math.round((result.data.main.temp-273.15)*10)/10,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"sky\",children:result.data.weather[0].main})]})]})}),/*#__PURE__*/_jsx(Footer,{})]});}export default Weather;var AppWrap=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  .appContentWrap {\\n    left: 50%;\\n    top: 50%;\\n    transform: translate(-50%, -50%);\\n    position: absolute;\\n    padding: 20px;\\n  }\\n  input {\\n    padding: 16px;\\n    border: 2px black solid;\\n    border-radius: 16px;\\n  }\\n\"])));var ResultWrap=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-top: 60px;\\n  border: 1px black solid;\\n  padding: 10px;\\n  border-radius: 8px;\\n  .city {\\n    font-size: 24px;\\n  }\\n  .temperature {\\n    font-size: 60px;\\n    margin-top: 8px;\\n  }\\n  .sky {\\n    font-size: 20px;\\n    text-align: right;\\n    margin-top: 8px;\\n  }\\n\"])));","map":{"version":3,"names":["axios","Footer","DashboardLayout","DashboardNavbar","useState","styled","Weather","location","setLocation","result","setResult","API_KEY","url","searchWeather","e","key","method","data","alert","target","value","Object","keys","length","name","Math","round","main","temp","weather","AppWrap","div","ResultWrap"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import axios from \"axios\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction Weather() {\n  const [location, setLocation] = useState(\"\");\n  const [result, setResult] = useState({});\n  const API_KEY = \"11f51a135860cbff7041b080fabf611f\"; // 각자 개인의 API KEY를 발급받아 사용해주세요.\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\n  const searchWeather = async (e) => {\n    if (e.key === \"Enter\") {\n      try {\n        const data = await axios({\n          method: \"get\",\n          url,\n        });\n        setResult(data);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  };\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <AppWrap>\n        <div className=\"appContentWrap\">\n          <input\n            placeholder=\"도시를 입력하세요\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            type=\"text\"\n            onKeyDown={searchWeather}\n          />\n          {Object.keys(result).length !== 0 && (\n            <ResultWrap>\n              <div className=\"city\">{result.data.name}</div>\n              <div className=\"temperature\">\n                {Math.round((result.data.main.temp - 273.15) * 10) / 10}°C\n              </div>\n              <div className=\"sky\">{result.data.weather[0].main}</div>\n            </ResultWrap>\n          )}\n        </div>\n      </AppWrap>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Weather;\n\nconst AppWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  .appContentWrap {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    padding: 20px;\n  }\n  input {\n    padding: 16px;\n    border: 2px black solid;\n    border-radius: 16px;\n  }\n`;\n\nconst ResultWrap = styled.div`\n  margin-top: 60px;\n  border: 1px black solid;\n  padding: 10px;\n  border-radius: 8px;\n  .city {\n    font-size: 24px;\n  }\n  .temperature {\n    font-size: 60px;\n    margin-top: 8px;\n  }\n  .sky {\n    font-size: 20px;\n    text-align: right;\n    margin-top: 8px;\n  }\n`;\n"],"mappings":"qmBAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,OAAP,KAAmB,iBAAnB,CACA,MAAOC,gBAAP,KAA4B,2CAA5B,CACA,MAAOC,gBAAP,KAA4B,kCAA5B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,OAAP,KAAmB,mBAAnB,C,wFAEA,QAASC,QAAT,EAAmB,CACjB,cAAgCF,QAAQ,CAAC,EAAD,CAAxC,wCAAOG,QAAP,eAAiBC,WAAjB,eACA,eAA4BJ,QAAQ,CAAC,EAAD,CAApC,yCAAOK,MAAP,eAAeC,SAAf,eACA,GAAMC,QAAO,CAAG,kCAAhB,CAAoD;AAEpD,GAAMC,IAAG,6DAAwDL,QAAxD,mBAA0EI,OAA1E,CAAT,CACA,GAAME,cAAa,4FAAG,iBAAOC,CAAP,kIAChBA,CAAC,CAACC,GAAF,GAAU,OADM,iEAGGf,MAAK,CAAC,CACvBgB,MAAM,CAAE,KADe,CAEvBJ,GAAG,CAAHA,GAFuB,CAAD,CAHR,QAGVK,IAHU,eAOhBP,SAAS,CAACO,IAAD,CAAT,CAPgB,+EAShBC,KAAK,aAAL,CATgB,oEAAH,kBAAbL,cAAa,4CAAnB,CAcA,mBACE,MAAC,eAAD,yBACE,KAAC,eAAD,IADF,cAEE,KAAC,OAAD,wBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,cACE,WAAW,CAAC,mDADd,CAEE,KAAK,CAAEN,QAFT,CAGE,QAAQ,CAAE,kBAACO,CAAD,QAAON,YAAW,CAACM,CAAC,CAACK,MAAF,CAASC,KAAV,CAAlB,EAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,SAAS,CAAEP,aALb,EADF,CAQGQ,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBc,MAApB,GAA+B,CAA/B,eACC,MAAC,UAAD,yBACE,YAAK,SAAS,CAAC,MAAf,UAAuBd,MAAM,CAACQ,IAAP,CAAYO,IAAnC,EADF,cAEE,aAAK,SAAS,CAAC,aAAf,WACGC,IAAI,CAACC,KAAL,CAAW,CAACjB,MAAM,CAACQ,IAAP,CAAYU,IAAZ,CAAiBC,IAAjB,CAAwB,MAAzB,EAAmC,EAA9C,EAAoD,EADvD,WAFF,cAKE,YAAK,SAAS,CAAC,KAAf,UAAsBnB,MAAM,CAACQ,IAAP,CAAYY,OAAZ,CAAoB,CAApB,EAAuBF,IAA7C,EALF,GATJ,GADF,EAFF,cAsBE,KAAC,MAAD,IAtBF,GADF,CA0BD,CAED,cAAerB,QAAf,CAEA,GAAMwB,QAAO,CAAGzB,MAAM,CAAC0B,GAAV,+UAAb,CAiBA,GAAMC,WAAU,CAAG3B,MAAM,CAAC0B,GAAV,2VAAhB"},"metadata":{},"sourceType":"module"}