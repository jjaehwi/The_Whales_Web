{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport MDBox from \"components/MDBox\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  _s();\n\n  const [lat, setLat] = useState(\"Loading...\");\n  const [long, setLong] = useState(\"Loading...\"); // const [data, setData] = useState(\"\");\n\n  const [temp, setTemp] = useState(\"Loading...\");\n  const [weather, setWeather] = useState(\"Loading...\"); // const [loading, setLoading] = useState(false);\n\n  const [imageSize, setImageSize] = useState(\"\");\n\n  function displayMarker(locPostion, message) {\n    setImageSize(new window.kakao.maps.Size(24, 35));\n    const markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize);\n    const marker = new window.kakao.maps.Marker({\n      map: map,\n      position: locPosition,\n      image: markerImage\n    });\n    const iwContent = message,\n          // 인포윈도우에 표시할 내용\n    iwRemoveable = true; // 인포윈도우를 생성합니다\n\n    const infowindow = new window.kakao.maps.InfoWindow({\n      content: iwContent,\n      removable: iwRemoveable\n    }); // 인포윈도우를 마커위에 표시합니다\n\n    infowindow.open(map, marker); // 지도 중심좌표를 접속위치로 변경합니다\n\n    map.setCenter(locPosition);\n  }\n\n  async function onGeoOk(position) {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n    const locPostion = new window.kakao.maps.LatLng(latitude, longitude); // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n\n    const message = '<div style=\"padding:5px;\">현위치</div>'; // 인포윈도우에 표시될 내용입니다\n\n    displayMarker(locPostion, message); // fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`)\n    //   .then((response) => response.json())\n    //   .then(\n    //     (data) => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`),\n    //     (data) => setTemp(${data.main.temp - 273.15}),\n    //     (data) => setWeather(data.weather[0].main)\n    //   );\n\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`).then(res => {\n      console.log(`You live in ${lat} and ${long}`);\n      console.log(`온도 : ${Math.round(res.data.main.temp - 273.15)}, 날씨 : ${res.data.weather[0].main}`);\n      setTemp(Math.round(res.data.main.temp - 273.15));\n      setWeather(res.data.weather[0].main);\n    });\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError); // useEffect(async () => {\n  //   const result = await axios(\n  //     `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n  //   );\n  //   await setTemp(Math.round(result.data.main.temp - 273.15));\n  //   setWeather(result.data.weather[0].main);\n  //   console.log(`You live in ${lat} and ${long}`);\n  //   console.log(`온도 : ${result.data.main.temp - 273.15}, 날씨 : ${result.data.weather[0].main}`);\n  //   // console.log(`${temp} and ${weather}`);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uC704\\uB3C4 : \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uACBD\\uB3C4 : \", long]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uC628\\uB3C4 : \", temp, \"\\u2103\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uB0A0\\uC528 : \", weather]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"mEshadlsLGl+vwaiReYnqCVa0j0=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["axios","MDBox","Footer","DashboardLayout","DashboardNavbar","useState","API_KEY","Weather","lat","setLat","long","setLong","temp","setTemp","weather","setWeather","imageSize","setImageSize","displayMarker","locPostion","message","window","kakao","maps","Size","markerImage","MarkerImage","imageSrc","marker","Marker","map","position","locPosition","image","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","open","setCenter","onGeoOk","coords","latitude","longitude","LatLng","get","then","res","console","log","Math","round","data","main","onGeoError","alert","navigator","geolocation","getCurrentPosition"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/weather/index.js"],"sourcesContent":["import axios from \"axios\";\nimport MDBox from \"components/MDBox\";\nimport Footer from \"examples/Footer\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\n\nimport { useState } from \"react\";\n\nconst API_KEY = \"11f51a135860cbff7041b080fabf611f\";\n\nfunction Weather() {\n  const [lat, setLat] = useState(\"Loading...\");\n  const [long, setLong] = useState(\"Loading...\");\n  // const [data, setData] = useState(\"\");\n  const [temp, setTemp] = useState(\"Loading...\");\n  const [weather, setWeather] = useState(\"Loading...\");\n  // const [loading, setLoading] = useState(false);\n  const [imageSize, setImageSize] = useState(\"\");\n\n  function displayMarker(locPostion, message) {\n    setImageSize(new window.kakao.maps.Size(24, 35));\n    const markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize);\n    const marker = new window.kakao.maps.Marker({\n      map: map,\n      position: locPosition,\n      image: markerImage,\n    });\n    const iwContent = message, // 인포윈도우에 표시할 내용\n      iwRemoveable = true;\n\n    // 인포윈도우를 생성합니다\n    const infowindow = new window.kakao.maps.InfoWindow({\n      content: iwContent,\n      removable: iwRemoveable,\n    });\n\n    // 인포윈도우를 마커위에 표시합니다\n    infowindow.open(map, marker);\n\n    // 지도 중심좌표를 접속위치로 변경합니다\n    map.setCenter(locPosition);\n  }\n\n  async function onGeoOk(position) {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n    const locPostion = new window.kakao.maps.LatLng(latitude, longitude); // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n    const message = '<div style=\"padding:5px;\">현위치</div>'; // 인포윈도우에 표시될 내용입니다\n    displayMarker(locPostion, message);\n    // fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`)\n    //   .then((response) => response.json())\n    //   .then(\n    //     (data) => console.log(`온도 : ${data.main.temp - 273.15}, 날씨 : ${data.weather[0].main}`),\n    //     (data) => setTemp(${data.main.temp - 273.15}),\n    //     (data) => setWeather(data.weather[0].main)\n    //   );\n\n    await axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n      )\n      .then((res) => {\n        console.log(`You live in ${lat} and ${long}`);\n        console.log(\n          `온도 : ${Math.round(res.data.main.temp - 273.15)}, 날씨 : ${res.data.weather[0].main}`\n        );\n        setTemp(Math.round(res.data.main.temp - 273.15));\n        setWeather(res.data.weather[0].main);\n      });\n  }\n\n  function onGeoError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError);\n\n  // useEffect(async () => {\n  //   const result = await axios(\n  //     `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}`\n  //   );\n  //   await setTemp(Math.round(result.data.main.temp - 273.15));\n  //   setWeather(result.data.weather[0].main);\n  //   console.log(`You live in ${lat} and ${long}`);\n  //   console.log(`온도 : ${result.data.main.temp - 273.15}, 날씨 : ${result.data.weather[0].main}`);\n\n  //   // console.log(`${temp} and ${weather}`);\n  // }, []);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <MDBox> 위도 : {lat}</MDBox>\n      <MDBox> 경도 : {long}</MDBox>\n      <MDBox> 온도 : {temp}℃</MDBox>\n      <MDBox> 날씨 : {weather}</MDBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}