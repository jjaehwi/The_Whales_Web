{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/context/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\nimport { createContext, useContext, useReducer, useMemo } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Material Dashboard 2 React main context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaterialUI = /*#__PURE__*/createContext(); // Setting custom name for the context which is visible on react dev tools\n\nMaterialUI.displayName = \"MaterialUIContext\"; // Material Dashboard 2 React reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\":\n      {\n        return { ...state,\n          miniSidenav: action.value\n        };\n      }\n\n    case \"TRANSPARENT_SIDENAV\":\n      {\n        return { ...state,\n          transparentSidenav: action.value\n        };\n      }\n\n    case \"WHITE_SIDENAV\":\n      {\n        return { ...state,\n          whiteSidenav: action.value\n        };\n      }\n\n    case \"SIDENAV_COLOR\":\n      {\n        return { ...state,\n          sidenavColor: action.value\n        };\n      }\n\n    case \"TRANSPARENT_NAVBAR\":\n      {\n        return { ...state,\n          transparentNavbar: action.value\n        };\n      }\n\n    case \"FIXED_NAVBAR\":\n      {\n        return { ...state,\n          fixedNavbar: action.value\n        };\n      }\n\n    case \"OPEN_CONFIGURATOR\":\n      {\n        return { ...state,\n          openConfigurator: action.value\n        };\n      }\n\n    case \"DIRECTION\":\n      {\n        return { ...state,\n          direction: action.value\n        };\n      }\n\n    case \"LAYOUT\":\n      {\n        return { ...state,\n          layout: action.value\n        };\n      }\n\n    case \"DARKMODE\":\n      {\n        return { ...state,\n          darkMode: action.value\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n} // Material Dashboard 2 React context provider\n\n\nfunction MaterialUIControllerProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: false\n  };\n  const [controller, dispatch] = useReducer(reducer, initialState);\n  const value = useMemo(() => [controller, dispatch], [controller, dispatch]);\n  return /*#__PURE__*/_jsxDEV(MaterialUI.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n} // Material Dashboard 2 React custom hook for using context\n\n\n_s(MaterialUIControllerProvider, \"81RFlW77D3yJWSxAra/wFN4HnBU=\");\n\n_c = MaterialUIControllerProvider;\n\nfunction useMaterialUIController() {\n  _s2();\n\n  const context = useContext(MaterialUI);\n\n  if (!context) {\n    throw new Error(\"useMaterialUIController should be used inside the MaterialUIControllerProvider.\");\n  }\n\n  return context;\n} // Typechecking props for the MaterialUIControllerProvider\n\n\n_s2(useMaterialUIController, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired\n}; // Context module functions\n\nconst setMiniSidenav = (dispatch, value) => dispatch({\n  type: \"MINI_SIDENAV\",\n  value\n});\n\nconst setTransparentSidenav = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_SIDENAV\",\n  value\n});\n\nconst setWhiteSidenav = (dispatch, value) => dispatch({\n  type: \"WHITE_SIDENAV\",\n  value\n});\n\nconst setSidenavColor = (dispatch, value) => dispatch({\n  type: \"SIDENAV_COLOR\",\n  value\n});\n\nconst setTransparentNavbar = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_NAVBAR\",\n  value\n});\n\nconst setFixedNavbar = (dispatch, value) => dispatch({\n  type: \"FIXED_NAVBAR\",\n  value\n});\n\nconst setOpenConfigurator = (dispatch, value) => dispatch({\n  type: \"OPEN_CONFIGURATOR\",\n  value\n});\n\nconst setDirection = (dispatch, value) => dispatch({\n  type: \"DIRECTION\",\n  value\n});\n\nconst setLayout = (dispatch, value) => dispatch({\n  type: \"LAYOUT\",\n  value\n});\n\nconst setDarkMode = (dispatch, value) => dispatch({\n  type: \"DARKMODE\",\n  value\n});\n\nexport { MaterialUIControllerProvider, useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav, setSidenavColor, setTransparentNavbar, setFixedNavbar, setOpenConfigurator, setDirection, setLayout, setDarkMode };\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIControllerProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useMemo","PropTypes","MaterialUI","displayName","reducer","state","action","type","miniSidenav","value","transparentSidenav","whiteSidenav","sidenavColor","transparentNavbar","fixedNavbar","openConfigurator","direction","layout","darkMode","Error","MaterialUIControllerProvider","children","initialState","controller","dispatch","useMaterialUIController","context","propTypes","node","isRequired","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","setSidenavColor","setTransparentNavbar","setFixedNavbar","setOpenConfigurator","setDirection","setLayout","setDarkMode"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/context/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\n\nimport { createContext, useContext, useReducer, useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React main context\nconst MaterialUI = createContext();\n\n// Setting custom name for the context which is visible on react dev tools\nMaterialUI.displayName = \"MaterialUIContext\";\n\n// Material Dashboard 2 React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\": {\n      return { ...state, miniSidenav: action.value };\n    }\n    case \"TRANSPARENT_SIDENAV\": {\n      return { ...state, transparentSidenav: action.value };\n    }\n    case \"WHITE_SIDENAV\": {\n      return { ...state, whiteSidenav: action.value };\n    }\n    case \"SIDENAV_COLOR\": {\n      return { ...state, sidenavColor: action.value };\n    }\n    case \"TRANSPARENT_NAVBAR\": {\n      return { ...state, transparentNavbar: action.value };\n    }\n    case \"FIXED_NAVBAR\": {\n      return { ...state, fixedNavbar: action.value };\n    }\n    case \"OPEN_CONFIGURATOR\": {\n      return { ...state, openConfigurator: action.value };\n    }\n    case \"DIRECTION\": {\n      return { ...state, direction: action.value };\n    }\n    case \"LAYOUT\": {\n      return { ...state, layout: action.value };\n    }\n    case \"DARKMODE\": {\n      return { ...state, darkMode: action.value };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n// Material Dashboard 2 React context provider\nfunction MaterialUIControllerProvider({ children }) {\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: false,\n  };\n\n  const [controller, dispatch] = useReducer(reducer, initialState);\n\n  const value = useMemo(() => [controller, dispatch], [controller, dispatch]);\n\n  return <MaterialUI.Provider value={value}>{children}</MaterialUI.Provider>;\n}\n\n// Material Dashboard 2 React custom hook for using context\nfunction useMaterialUIController() {\n  const context = useContext(MaterialUI);\n\n  if (!context) {\n    throw new Error(\n      \"useMaterialUIController should be used inside the MaterialUIControllerProvider.\"\n    );\n  }\n\n  return context;\n}\n\n// Typechecking props for the MaterialUIControllerProvider\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n// Context module functions\nconst setMiniSidenav = (dispatch, value) => dispatch({ type: \"MINI_SIDENAV\", value });\nconst setTransparentSidenav = (dispatch, value) => dispatch({ type: \"TRANSPARENT_SIDENAV\", value });\nconst setWhiteSidenav = (dispatch, value) => dispatch({ type: \"WHITE_SIDENAV\", value });\nconst setSidenavColor = (dispatch, value) => dispatch({ type: \"SIDENAV_COLOR\", value });\nconst setTransparentNavbar = (dispatch, value) => dispatch({ type: \"TRANSPARENT_NAVBAR\", value });\nconst setFixedNavbar = (dispatch, value) => dispatch({ type: \"FIXED_NAVBAR\", value });\nconst setOpenConfigurator = (dispatch, value) => dispatch({ type: \"OPEN_CONFIGURATOR\", value });\nconst setDirection = (dispatch, value) => dispatch({ type: \"DIRECTION\", value });\nconst setLayout = (dispatch, value) => dispatch({ type: \"LAYOUT\", value });\nconst setDarkMode = (dispatch, value) => dispatch({ type: \"DARKMODE\", value });\n\nexport {\n  MaterialUIControllerProvider,\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n  setSidenavColor,\n  setTransparentNavbar,\n  setFixedNavbar,\n  setOpenConfigurator,\n  setDirection,\n  setLayout,\n  setDarkMode,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}