{"ast":null,"code":"/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][meta.index];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n\n      if (value === 0) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    const actualBase = baseValue || 0;\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && _getParentNode(container));\n  }\n\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom') {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: gz + 1,\n\n      draw() {\n        me.drawBorder();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const me = this;\n\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.4.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n\n    return new DomPlatform();\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    const me = this;\n\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      me.attached = true;\n      me.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      me.attached = false;\n\n      _remove('resize', listener);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(_ref => {\n      let {\n        datasetIndex,\n        index\n      } = _ref;\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref2 => {\n    let {\n      start,\n      end\n    } = _ref2;\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = me;\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n\n      if (rtl) {\n        const boxMap = hitboxes.reduce((map, box) => {\n          map[box.row] = map[box.row] || [];\n          map[box.row].push(box);\n          return map;\n        }, {});\n        const newBoxes = [];\n        Object.keys(boxMap).forEach(key => {\n          boxMap[key].reverse();\n          newBoxes.push(...boxMap[key]);\n        });\n        me.legendHitBoxes = newBoxes;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(_ref3 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref3;\n\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref4) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref4;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      setMax(max + 1);\n\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","log10","J","_factorize","K","finiteOrDefault","L","callback","M","_addGrace","N","toDegrees","O","_measureText","Q","_int16Range","R","_alignPixel","S","clipArea","U","renderText","V","unclipArea","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","hitbox","boxMap","newBoxes","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n      if (rtl) {\n        const boxMap = hitboxes.reduce((map, box) => {\n          map[box.row] = map[box.row] || [];\n          map[box.row].push(box);\n          return map;\n        }, {});\n        const newBoxes = [];\n        Object.keys(boxMap).forEach(key => {\n          boxMap[key].reverse();\n          newBoxes.push(...boxMap[key]);\n        });\n        me.legendHitBoxes = newBoxes;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}