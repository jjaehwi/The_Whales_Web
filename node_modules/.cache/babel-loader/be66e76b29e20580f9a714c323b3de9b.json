{"ast":null,"code":"import e, { useLayoutEffect as o, useEffect as t, useState as n, useRef as a, useImperativeHandle as r, useContext as i, useMemo as s } from \"react\";\nimport l from \"react-dom\";\n\nfunction d() {\n  return d = Object.assign || function (e) {\n    for (var o = 1; o < arguments.length; o++) {\n      var t = arguments[o];\n\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n\n    return e;\n  }, d.apply(this, arguments);\n}\n\nfunction c(e, o) {\n  if (null == e) return {};\n  var t,\n      n,\n      a = {},\n      r = Object.keys(e);\n\n  for (n = 0; n < r.length; n++) o.indexOf(t = r[n]) >= 0 || (a[t] = e[t]);\n\n  return a;\n}\n\nconst p = \"undefined\" != typeof window && \"undefined\" != typeof document ? o : t,\n      u = (e, o, t) => {\n  p(() => {\n    if (!e || !t) return;\n\n    const n = function () {\n      for (var _len = arguments.length, o = new Array(_len), _key = 0; _key < _len; _key++) {\n        o[_key] = arguments[_key];\n      }\n\n      return void 0 === o ? t(e) : t(e, ...o);\n    };\n\n    return kakao.maps.event.addListener(e, o, n), () => {\n      kakao.maps.event.removeListener(e, o, n);\n    };\n  }, [e, o, t]);\n};\n\nvar k;\n!function (e) {\n  e[e.INITIALIZED = 0] = \"INITIALIZED\", e[e.LOADING = 1] = \"LOADING\", e[e.SUCCESS = 2] = \"SUCCESS\", e[e.FAILURE = 3] = \"FAILURE\";\n}(k || (k = {}));\n\nclass m {\n  constructor(_ref) {\n    let {\n      appkey: e,\n      id: o = \"__reactKakaoMapsSdkloaderId\",\n      libraries: t = [],\n      nonce: n,\n      retries: a = 3,\n      url: r = \"//dapi.kakao.com/v2/maps/sdk.js\"\n    } = _ref;\n\n    if (this.id = void 0, this.appkey = void 0, this.url = void 0, this.libraries = void 0, this.nonce = void 0, this.retries = void 0, this.callbacks = [], this.done = !1, this.loading = !1, this.errors = [], this.onerrorEvent = void 0, this.id = o, this.appkey = e, this.libraries = t, this.nonce = n, this.retries = a, this.url = r, m.instance) {\n      if (!m.equalOptions(this.options, m.instance.options)) throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(m.instance.options)}`);\n      return m.instance;\n    }\n\n    m.instance = this;\n  }\n\n  get options() {\n    return {\n      appkey: this.appkey,\n      id: this.id,\n      libraries: this.libraries,\n      nonce: this.nonce,\n      retries: this.retries,\n      url: this.url\n    };\n  }\n\n  static isLoaded() {\n    return new Promise(e => m.instance ? m.instance.status === k.FAILURE || m.instance.status === k.INITIALIZED ? e(!1) : (m.instance.status === k.LOADING && m.loadcheckcallbacks.push(o => e(!o)), e(!0)) : window.kakao && window.kakao.maps ? 0 !== window.kakao.maps.readyState ? e(!0) : window.kakao.maps.load(() => {\n      e(!0);\n    }) : m.loadcheckcallbacks.push(o => {\n      e(!o);\n    }));\n  }\n\n  load() {\n    return new Promise((e, o) => {\n      this.loadCallback(t => {\n        t ? o(t.error) : e(window.kakao);\n      });\n    });\n  }\n\n  get status() {\n    return this.onerrorEvent ? k.FAILURE : this.done ? k.SUCCESS : this.loading ? k.LOADING : k.INITIALIZED;\n  }\n\n  get failed() {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n\n  loadCallback(e) {\n    this.callbacks.push(e), this.execute();\n  }\n\n  resetIfRetryingFailed() {\n    this.failed && this.reset();\n  }\n\n  reset() {\n    this.deleteScript(), this.done = !1, this.loading = !1, this.errors = [], this.onerrorEvent = void 0;\n  }\n\n  execute() {\n    if (this.resetIfRetryingFailed(), this.done) this.callback();else {\n      if (window.kakao && window.kakao.maps) return console.warn(\"Kakao Maps이 이미 외부 요소에 의해 로딩되어 있습니다.설정한 옵션과 일치 하지 않을 수 있으며, 이에 따른 예상치 동작이 발생할 수 있습니다.\"), void this.callback();\n      this.loading || (this.loading = !0, this.setScript());\n    }\n  }\n\n  setScript() {\n    document.getElementById(this.id) && this.callback();\n    const e = this.createUrl(),\n          o = document.createElement(\"script\");\n    o.id = this.id, o.type = \"text/javascript\", o.src = e, o.onerror = this.loadErrorCallback.bind(this), o.onload = this.callback.bind(this), o.defer = !0, o.async = !0, this.nonce && (o.nonce = this.nonce), document.head.appendChild(o);\n  }\n\n  loadErrorCallback(e, o, t, n, a) {\n    if (this.errors.push({\n      event: e,\n      source: o,\n      lineno: t,\n      colno: n,\n      error: a\n    }), this.errors.length <= this.retries) {\n      const e = this.errors.length * 2 ** this.errors.length;\n      console.log(`Failed to load Kakao Maps script, retrying in ${e} ms.`), setTimeout(() => {\n        this.deleteScript(), this.setScript();\n      }, e);\n    } else this.onerrorEvent = this.errors[this.errors.length - 1], this.callback();\n  }\n\n  createUrl() {\n    let e = this.url;\n    return e += `?appkey=${this.appkey}`, this.libraries.length && (e += `&libraries=${this.libraries.join(\",\")}`), e += \"&autoload=false\", e;\n  }\n\n  deleteScript() {\n    const e = document.getElementById(this.id);\n    e && e.remove();\n  }\n\n  callback() {\n    kakao.maps.load(() => {\n      this.done = !0, this.loading = !1, this.callbacks.forEach(e => {\n        e(this.onerrorEvent);\n      }), this.callbacks = [], m.loadcheckcallbacks.forEach(e => {\n        e(this.onerrorEvent);\n      }), m.loadcheckcallbacks = [];\n    });\n  }\n\n  static equalOptions(e, o) {\n    if (e.appkey !== o.appkey) return !1;\n    if (e.id !== o.id) return !1;\n    if (e.libraries.length !== o.libraries.length) return !1;\n\n    for (let t = 0; t < e.libraries.length; ++t) if (e.libraries[t] !== o.libraries[t]) return !1;\n\n    return e.nonce === o.nonce && e.retries === o.retries && e.url === o.url;\n  }\n\n}\n\nm.instance = void 0, m.loadcheckcallbacks = [];\n\nconst g = [\"as\", \"children\", \"center\", \"isPanto\", \"padding\", \"disableDoubleClick\", \"disableDoubleClickZoom\", \"draggable\", \"zoomable\", \"keyboardShortcuts\", \"level\", \"maxLevel\", \"minLevel\", \"mapTypeId\", \"projectionId\", \"scrollwheel\", \"tileAnimation\", \"onBoundsChanged\", \"onCenterChanged\", \"onClick\", \"onDoubleClick\", \"onDrag\", \"onDragEnd\", \"onDragStart\", \"onIdle\", \"onMaptypeidChanged\", \"onMouseMove\", \"onRightClick\", \"onTileLoaded\", \"onZoomChanged\", \"onZoomStart\", \"onCreate\"],\n      h = e.createContext(void 0),\n      w = e.forwardRef((o, t) => {\n  let {\n    as: i,\n    children: s,\n    center: l,\n    isPanto: k = !1,\n    padding: w = 32,\n    disableDoubleClick: v,\n    disableDoubleClickZoom: f,\n    draggable: C,\n    zoomable: y,\n    keyboardShortcuts: b,\n    level: I,\n    maxLevel: M,\n    minLevel: L,\n    mapTypeId: O,\n    projectionId: x,\n    scrollwheel: S,\n    tileAnimation: z,\n    onBoundsChanged: E,\n    onCenterChanged: P,\n    onClick: R,\n    onDoubleClick: A,\n    onDrag: D,\n    onDragEnd: T,\n    onDragStart: Z,\n    onIdle: W,\n    onMaptypeidChanged: N,\n    onMouseMove: j,\n    onRightClick: _,\n    onTileLoaded: F,\n    onZoomChanged: G,\n    onZoomStart: U,\n    onCreate: V\n  } = o,\n      B = c(o, g);\n  const $ = i || \"div\",\n        [q, H] = n(!1),\n        [J, K] = n(),\n        X = a(null);\n  return p(() => {\n    m.isLoaded().then(H);\n  }, []), p(() => {\n    if (!q) return;\n    const e = X.current;\n    if (!e) return;\n    const o = \"lat\" in l ? new kakao.maps.LatLng(l.lat, l.lng) : new kakao.maps.Coords(l.x, l.y),\n          t = new kakao.maps.Map(e, {\n      center: o,\n      disableDoubleClick: v,\n      disableDoubleClickZoom: f,\n      draggable: C,\n      keyboardShortcuts: b,\n      level: I,\n      mapTypeId: O,\n      projectionId: x,\n      scrollwheel: S,\n      tileAnimation: z\n    });\n    return K(t), () => {\n      e.innerHTML = \"\";\n    };\n  }, [q, v, f, O, z]), r(t, () => J, [J]), p(() => {\n    J && V && V(J);\n  }, [J, V]), p(() => {\n    if (!J) return;\n    let e = J.getCenter();\n    e instanceof kakao.maps.Coords && (e = e.toLatLng());\n    const o = \"lat\" in l ? new kakao.maps.LatLng(l.lat, l.lng) : new kakao.maps.Coords(l.x, l.y);\n    o instanceof kakao.maps.LatLng && o.equals(e) || o instanceof kakao.maps.Coords && o.toLatLng().equals(e) || (k ? J.panTo(o, w) : J.setCenter(o));\n  }, [J, l.lat, l.lng, l.x, l.y]), p(() => {\n    J && void 0 !== C && J.setDraggable(C);\n  }, [J, C]), p(() => {\n    J && void 0 !== y && J.setZoomable(y);\n  }, [J, y]), p(() => {\n    J && b && \"boolean\" == typeof b && J.setKeyboardShortcuts(b);\n  }, [J, b]), p(() => {\n    J && I && J.setLevel(I);\n  }, [J, I]), p(() => {\n    J && O && J.setMapTypeId(O);\n  }, [J, O]), p(() => {\n    J && x && J.setProjectionId(x);\n  }, [J, x]), p(() => {\n    J && M && J.setMaxLevel(M);\n  }, [J, M]), p(() => {\n    J && L && J.setMinLevel(L);\n  }, [J, L]), u(J, \"bounds_changed\", E), u(J, \"center_changed\", P), u(J, \"click\", R), u(J, \"dblclick\", A), u(J, \"drag\", D), u(J, \"dragstart\", Z), u(J, \"dragend\", T), u(J, \"idle\", W), u(J, \"maptypeid_changed\", N), u(J, \"mousemove\", j), u(J, \"rightclick\", _), u(J, \"tilesloaded\", F), u(J, \"zoom_changed\", G), u(J, \"zoom_start\", U), e.createElement(e.Fragment, null, e.createElement($, d({}, B, {\n    ref: X\n  })), J && e.createElement(h.Provider, {\n    value: J\n  }, s));\n}),\n      v = e => {\n  const o = i(h);\n  if (!o) throw new Error((e ? e + \" Component\" : \"useMap\") + \" must exist inside Map Component!\");\n  return o;\n},\n      f = e.forwardRef((_ref2, g) => {\n  let {\n    map: e,\n    position: t,\n    marker: n,\n    children: i,\n    altitude: d,\n    disableAutoPan: c,\n    range: p,\n    removable: u,\n    zIndex: k,\n    onCreate: m\n  } = _ref2;\n  const h = a(document.createElement(\"div\")),\n        w = s(() => {\n    const e = new kakao.maps.InfoWindow({\n      altitude: d,\n      disableAutoPan: c,\n      range: p,\n      removable: u,\n      zIndex: k,\n      content: h.current,\n      position: t\n    });\n    return h.current.style.display = \"none\", e;\n  }, [c, u]);\n  return r(g, () => w, [w]), o(() => (w.open(e, n), () => {\n    w.close();\n  }), [e, n]), o(() => {\n    m && m(w);\n  }, [w, m]), o(() => {\n    w && w.setPosition(t);\n  }, [w, t]), o(() => {\n    w && d && w.setAltitude(d);\n  }, [w, d]), o(() => {\n    w && p && w.setRange(p);\n  }, [w, p]), o(() => {\n    w && k && w.setZIndex(k);\n  }, [w, k]), h.current.parentElement && l.createPortal(i, h.current.parentElement);\n}),\n      C = e.createContext(void 0),\n      y = e.forwardRef((_ref3, L) => {\n  let {\n    children: t,\n    averageCenter: n,\n    calculator: a,\n    clickable: i,\n    disableClickZoom: l,\n    gridSize: d,\n    hoverable: c,\n    minClusterSize: p,\n    minLevel: k,\n    styles: m,\n    texts: g,\n    onClusterclick: h,\n    onClusterdblclick: w,\n    onClustered: f,\n    onClusterout: y,\n    onClusterover: b,\n    onClusterrightclick: I,\n    onCreate: M\n  } = _ref3;\n  const O = v(\"MarkerClusterer\"),\n        x = s(() => {\n    if (window.kakao.maps.MarkerClusterer) return new kakao.maps.MarkerClusterer({\n      averageCenter: n,\n      calculator: a,\n      clickable: i,\n      disableClickZoom: l,\n      gridSize: d,\n      hoverable: c,\n      minClusterSize: p,\n      minLevel: k,\n      styles: m,\n      texts: g\n    });\n    console.warn(\"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n  }, []);\n  return r(L, () => x, [x]), o(() => {\n    null == x || x.setMap(O);\n  }, [O, x]), o(() => {\n    x && M && M(x);\n  }, [x, M]), o(() => {\n    x && d && (x.setGridSize(d), x.redraw());\n  }, [x, d]), o(() => {\n    x && p && (x.setMinClusterSize(p), x.redraw());\n  }, [x, p]), o(() => {\n    x && void 0 !== n && (x.setAverageCenter(n), x.redraw());\n  }, [x, n]), o(() => {\n    x && k && (x.setMinLevel(k), x.redraw());\n  }, [x, k]), o(() => {\n    x && g && (x.setTexts(g), x.redraw());\n  }, [x, g]), o(() => {\n    x && a && (x.setCalculator(a), x.redraw());\n  }, [x, a]), o(() => {\n    x && m && (x.setStyles(m), x.redraw());\n  }, [x, m]), u(x, \"clusterclick\", h), u(x, \"clusterover\", b), u(x, \"clusterout\", y), u(x, \"clusterdblclick\", w), u(x, \"clusterrightclick\", I), u(x, \"clustered\", f), x ? e.createElement(C.Provider, {\n    value: x\n  }, t) : null;\n}),\n      b = e.forwardRef((_ref4, O) => {\n  let {\n    map: t,\n    position: n,\n    children: a,\n    altitude: l,\n    clickable: d,\n    draggable: c,\n    image: p,\n    infoWindowOptions: k,\n    onCreate: m,\n    onClick: g,\n    onDragEnd: h,\n    onDragStart: w,\n    onMouseOut: v,\n    onMouseOver: y,\n    opacity: b,\n    range: I,\n    title: M,\n    zIndex: L\n  } = _ref4;\n  const x = i(C),\n        S = s(() => new kakao.maps.Marker({\n    altitude: l,\n    clickable: d,\n    draggable: c,\n    image: p,\n    opacity: b,\n    range: I,\n    title: M,\n    zIndex: L,\n    position: n\n  }), []);\n  return r(O, () => S, [S]), o(() => (x ? x.addMarker(S) : S.setMap(t), () => {\n    x ? x.removeMarker(S) : S.setMap(null);\n  }), [t, x, S]), o(() => {\n    m && m(S);\n  }, [S, m]), u(S, \"click\", g), u(S, \"dragstart\", w), u(S, \"dragend\", h), u(S, \"mouseout\", v), u(S, \"mouseover\", y), o(() => {\n    t && S && n && S.setPosition(n);\n  }, [t, S, n]), o(() => {\n    t && S && p && S.setImage(p);\n  }, [t, S, p]), o(() => {\n    t && S && l && S.setAltitude(l);\n  }, [t, S, l]), o(() => {\n    t && S && void 0 !== d && S.setClickable(d);\n  }, [t, S, d]), o(() => {\n    t && S && void 0 !== c && S.setDraggable(c);\n  }, [t, S, c]), o(() => {\n    t && S && b && S.setOpacity(b);\n  }, [t, S, b]), o(() => {\n    t && S && I && S.setRange(I);\n  }, [t, S, I]), o(() => {\n    t && S && M && S.setTitle(M);\n  }, [t, S, M]), o(() => {\n    t && S && L && S.setZIndex(L);\n  }, [t, S, L]), a ? e.createElement(f, {\n    position: n,\n    map: t,\n    marker: S,\n    altitude: null == k ? void 0 : k.altitude,\n    disableAutoPan: null == k ? void 0 : k.disableAutoPan,\n    range: null == k ? void 0 : k.range,\n    removable: null == k ? void 0 : k.removable,\n    zIndex: null == k ? void 0 : k.zIndex\n  }, a) : null;\n}),\n      I = e.forwardRef((_ref5, w) => {\n  let {\n    image: o,\n    position: t,\n    children: n,\n    clickable: a,\n    draggable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: u,\n    onCreate: k,\n    opacity: m,\n    title: g,\n    zIndex: h\n  } = _ref5;\n  const f = v(\"MapMarker\"),\n        C = s(() => {\n    var e, t, n, a, r, i, s, l, d, c, p, u;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (e = o.options) ? void 0 : e.alt,\n      coords: null == (t = o.options) ? void 0 : t.coords,\n      offset: (null == (n = o.options) ? void 0 : n.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (r = o.options) ? void 0 : r.offset.y),\n      shape: null == (i = o.options) ? void 0 : i.shape,\n      spriteOrigin: (null == (s = o.options) ? void 0 : s.spriteOrigin) && new kakao.maps.Point(null == (l = o.options) ? void 0 : l.spriteOrigin.x, null == (d = o.options) ? void 0 : d.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (p = o.options) ? void 0 : p.spriteSize.width, null == (u = o.options) ? void 0 : u.spriteSize.height)\n    });\n  }, [o]),\n        y = s(() => \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : new kakao.maps.Coords(t.x, t.y).toLatLng(), [t.lat, t.lng, t.x, t.y]);\n  return e.createElement(b, {\n    map: f,\n    position: y,\n    image: C,\n    clickable: a,\n    draggable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: u,\n    onCreate: k,\n    opacity: m,\n    title: g,\n    zIndex: h,\n    ref: w\n  }, n);\n}),\n      M = e.forwardRef((_ref6, l) => {\n  let {\n    position: o,\n    children: t,\n    disableAutoPan: n,\n    removable: a,\n    zIndex: r,\n    onCreate: i\n  } = _ref6;\n  const d = v(\"MapInfoWindow\"),\n        c = s(() => new kakao.maps.LatLng(o.lat, o.lng), [o.lat, o.lng]);\n  return e.createElement(f, {\n    disableAutoPan: n,\n    removable: a,\n    zIndex: r,\n    map: d,\n    position: c,\n    onCreate: i,\n    ref: l\n  }, t);\n}),\n      L = e.forwardRef((_ref7, k) => {\n  let {\n    position: e,\n    children: t,\n    clickable: n,\n    xAnchor: d,\n    yAnchor: c,\n    zIndex: p,\n    onCreate: u\n  } = _ref7;\n  const m = i(C),\n        g = v(\"CustomOverlayMap\"),\n        h = a(document.createElement(\"div\")),\n        w = s(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        f = s(() => {\n    const e = new kakao.maps.CustomOverlay({\n      clickable: n,\n      xAnchor: d,\n      yAnchor: c,\n      zIndex: p,\n      position: w,\n      content: h.current\n    });\n    return h.current.style.display = \"none\", e;\n  }, [n, d, c]);\n  return r(k, () => f, [f]), o(() => {\n    if (g) return m ? m.addMarker(f) : f.setMap(g), () => {\n      m ? m.removeMarker(f) : f.setMap(null);\n    };\n  }, [g, m, f]), o(() => {\n    u && u(f);\n  }, [f, u]), o(() => {\n    f.setPosition(w);\n  }, [f, w]), o(() => {\n    p && f.setZIndex(p);\n  }, [f, p]), h.current.parentElement && l.createPortal(t, h.current.parentElement);\n}),\n      O = e.forwardRef((_ref8, t) => {\n  let {\n    position: e = kakao.maps.ControlPosition.TOPRIGHT\n  } = _ref8;\n  const n = v(\"MapTypeControl\"),\n        a = s(() => new kakao.maps.MapTypeControl(), []);\n  return r(t, () => a, [a]), o(() => (n.addControl(a, e), () => {\n    n.removeControl(a);\n  }), [n, a, e]), null;\n}),\n      x = e.forwardRef((_ref9, o) => {\n  let {\n    position: e = kakao.maps.ControlPosition.RIGHT\n  } = _ref9;\n  const n = v(\"ZoomControl\"),\n        a = s(() => new kakao.maps.ZoomControl(), []);\n  return r(o, () => a, [a]), t(() => (n.addControl(a, e), () => {\n    n.removeControl(a);\n  }), [n, e]), null;\n}),\n      S = _ref10 => {\n  let {\n    type: e\n  } = _ref10;\n  const o = v(\"MapTypeId\");\n  return t(() => (o.addOverlayMapTypeId(e), () => {\n    o.removeOverlayMapTypeId(e);\n  }), [o, e]), null;\n},\n      z = e.forwardRef((_ref11, C) => {\n  let {\n    center: e,\n    radius: t,\n    fillColor: n,\n    fillOpacity: a,\n    strokeColor: i,\n    strokeOpacity: l,\n    strokeStyle: d,\n    strokeWeight: c,\n    zIndex: p,\n    onMouseover: k,\n    onMouseout: m,\n    onMousemove: g,\n    onMousedown: h,\n    onClick: w,\n    onCreate: f\n  } = _ref11;\n  const y = v(\"Circle\"),\n        b = s(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        I = s(() => new kakao.maps.Circle({\n    center: b,\n    radius: t,\n    fillColor: n,\n    fillOpacity: a,\n    strokeColor: i,\n    strokeOpacity: l,\n    strokeStyle: d,\n    strokeWeight: c,\n    zIndex: p\n  }), []);\n  return r(C, () => I, [I]), o(() => (I.setMap(y), () => {\n    I.setMap(null);\n  }), [y, I]), o(() => {\n    f && f(I);\n  }, [I, f]), o(() => {\n    I && I.setPosition(b);\n  }, [I, b]), o(() => {\n    I.setRadius(t);\n  }, [I, t]), o(() => {\n    p && I.setZIndex(p);\n  }, [I, p]), o(() => {\n    I.setOptions({\n      fillColor: n,\n      fillOpacity: a,\n      strokeColor: i,\n      strokeOpacity: l,\n      strokeStyle: d,\n      strokeWeight: c\n    });\n  }, [I, n, a, i, l, d, c]), u(I, \"mouseover\", k), u(I, \"mouseout\", m), u(I, \"mousemove\", g), u(I, \"mousedown\", h), u(I, \"click\", w), null;\n}),\n      E = e.forwardRef((_ref12, w) => {\n  let {\n    path: e,\n    endArrow: t,\n    onClick: n,\n    onMousedown: a,\n    onMousemove: i,\n    onMouseout: l,\n    onMouseover: d,\n    onCreate: c,\n    strokeColor: p,\n    strokeOpacity: k,\n    strokeStyle: m,\n    strokeWeight: g,\n    zIndex: h\n  } = _ref12;\n  const f = v(\"Polyline\"),\n        C = s(() => e.every(e => e instanceof Array) ? e.map(e => e.map(e => new kakao.maps.LatLng(e.lat, e.lng))) : e.map(e => new kakao.maps.LatLng(e.lat, e.lng)), [e]),\n        y = s(() => new kakao.maps.Polyline({\n    path: C,\n    endArrow: t,\n    strokeColor: p,\n    strokeOpacity: k,\n    strokeStyle: m,\n    strokeWeight: g,\n    zIndex: h\n  }), []);\n  return r(w, () => y, [y]), o(() => (y.setMap(f), () => y.setMap(null)), [f, y]), o(() => {\n    c && c(y);\n  }, [y, c]), o(() => {\n    y.setOptions({\n      endArrow: t,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: m,\n      strokeWeight: g\n    });\n  }, [y, t, p, k, m, g]), o(() => {\n    y.setPath(C);\n  }, [y, C]), o(() => {\n    h && y.setZIndex(h);\n  }, [y, h]), u(y, \"mouseover\", d), u(y, \"mouseout\", l), u(y, \"mousemove\", i), u(y, \"mousedown\", a), u(y, \"click\", n), null;\n}),\n      P = e.forwardRef((_ref13, f) => {\n  let {\n    path: e,\n    onClick: t,\n    onMousedown: n,\n    onMousemove: a,\n    onMouseout: i,\n    onMouseover: l,\n    onCreate: d,\n    strokeColor: c,\n    strokeOpacity: p,\n    strokeStyle: k,\n    strokeWeight: m,\n    fillColor: g,\n    fillOpacity: h,\n    zIndex: w\n  } = _ref13;\n  const C = v(\"Polygon\"),\n        y = s(() => e.every(e => e instanceof Array) ? e.map(e => e.map(e => new kakao.maps.LatLng(e.lat, e.lng))) : e.map(e => new kakao.maps.LatLng(e.lat, e.lng)), [e]),\n        b = s(() => new kakao.maps.Polygon({\n    path: y,\n    fillColor: g,\n    fillOpacity: h,\n    strokeColor: c,\n    strokeOpacity: p,\n    strokeStyle: k,\n    strokeWeight: m,\n    zIndex: w\n  }), []);\n  return r(f, () => b, [b]), o(() => (b.setMap(C), () => b.setMap(null)), [C, b]), o(() => {\n    d && d(b);\n  }, [b, d]), o(() => {\n    b.setOptions({\n      fillColor: g,\n      fillOpacity: h,\n      strokeColor: c,\n      strokeOpacity: p,\n      strokeStyle: k,\n      strokeWeight: m\n    });\n  }, [b, g, h, c, p, k, m]), o(() => {\n    b.setPath(y);\n  }, [b, y]), o(() => {\n    w && b.setZIndex(w);\n  }, [b, w]), u(b, \"mouseover\", l), u(b, \"mouseout\", i), u(b, \"mousemove\", a), u(b, \"mousedown\", n), u(b, \"click\", t), null;\n}),\n      R = e.forwardRef((_ref14, f) => {\n  let {\n    bounds: e,\n    onClick: t,\n    onMousedown: n,\n    onMousemove: a,\n    onMouseout: i,\n    onMouseover: l,\n    onCreate: d,\n    strokeColor: c,\n    strokeOpacity: p,\n    strokeStyle: k,\n    strokeWeight: m,\n    fillColor: g,\n    fillOpacity: h,\n    zIndex: w\n  } = _ref14;\n  const C = v(\"Rectangle\"),\n        y = s(() => new kakao.maps.LatLngBounds(new kakao.maps.LatLng(e.sw.lat, e.sw.lng), new kakao.maps.LatLng(e.ne.lat, e.ne.lng)), [e]),\n        b = s(() => new kakao.maps.Rectangle({\n    bounds: y,\n    fillColor: g,\n    fillOpacity: h,\n    strokeColor: c,\n    strokeOpacity: p,\n    strokeStyle: k,\n    strokeWeight: m,\n    zIndex: w\n  }), []);\n  return r(f, () => b, [b]), o(() => (b.setMap(C), () => b.setMap(null)), [C, b]), o(() => {\n    d && d(b);\n  }, [b, d]), o(() => {\n    b.setOptions({\n      fillColor: g,\n      fillOpacity: h,\n      strokeColor: c,\n      strokeOpacity: p,\n      strokeStyle: k,\n      strokeWeight: m\n    });\n  }, [b, g, h, c, p, k, m]), o(() => {\n    b.setBounds(y);\n  }, [b, y]), o(() => {\n    w && b.setZIndex(w);\n  }, [b, w]), u(b, \"mouseover\", l), u(b, \"mouseout\", i), u(b, \"mousemove\", a), u(b, \"mousedown\", n), u(b, \"click\", t), null;\n}),\n      A = e.forwardRef((_ref15, y) => {\n  let {\n    center: e,\n    rx: t,\n    ry: n,\n    fillColor: a,\n    fillOpacity: i,\n    strokeColor: l,\n    strokeOpacity: d,\n    strokeStyle: c,\n    strokeWeight: p,\n    zIndex: k,\n    onMouseover: m,\n    onMouseout: g,\n    onMousemove: h,\n    onMousedown: w,\n    onClick: f,\n    onCreate: C\n  } = _ref15;\n  const b = v(\"Ellipse\"),\n        I = s(() => new kakao.maps.LatLng(e.lat, e.lng), [e.lat, e.lng]),\n        M = s(() => new kakao.maps.Ellipse({\n    center: I,\n    rx: t,\n    ry: n,\n    fillColor: a,\n    fillOpacity: i,\n    strokeColor: l,\n    strokeOpacity: d,\n    strokeStyle: c,\n    strokeWeight: p,\n    zIndex: k\n  }), []);\n  return r(y, () => M, [M]), o(() => (M.setMap(b), () => {\n    M.setMap(null);\n  }), [b, M]), o(() => {\n    C && C(M);\n  }, [M, C]), o(() => {\n    M && M.setPosition(I);\n  }, [M, I]), o(() => {\n    M.setRadius(t, n);\n  }, [M, t, n]), o(() => {\n    k && M.setZIndex(k);\n  }, [M, k]), o(() => {\n    M.setOptions({\n      fillColor: a,\n      fillOpacity: i,\n      strokeColor: l,\n      strokeOpacity: d,\n      strokeStyle: c,\n      strokeWeight: p\n    });\n  }, [M, a, i, l, d, c, p]), u(M, \"mouseover\", m), u(M, \"mouseout\", g), u(M, \"mousemove\", h), u(M, \"mousedown\", w), u(M, \"click\", f), null;\n}),\n      D = e.forwardRef((_ref16, i) => {\n  let {\n    draw: e,\n    onAdd: t,\n    onRemove: n,\n    onCreate: a\n  } = _ref16;\n  const l = v(),\n        d = s(() => {\n    class o extends kakao.maps.AbstractOverlay {\n      constructor(e, o, t) {\n        super(), this.draw = e, this.onAdd = o, this.onRemove = t;\n      }\n\n    }\n\n    return new o(e, t, n);\n  }, [e, t, n]);\n  return r(i, () => d, [d]), o(() => (d.setMap(l), () => {\n    d.setMap(null);\n  }), [l, d]), o(() => {\n    a && a(d);\n  }, [d, a]), null;\n}),\n      T = [\"as\", \"children\", \"position\", \"pan\", \"panoId\", \"panoX\", \"panoY\", \"tilt\", \"zoom\", \"onCreate\", \"onInit\", \"onPanoidChange\", \"onPositionChanged\", \"onViewpointChange\", \"onErrorGetNearestPanoId\"],\n      Z = e.createContext(void 0),\n      W = e.forwardRef((o, t) => {\n  let {\n    as: i,\n    children: s,\n    position: l,\n    pan: k,\n    panoId: g,\n    panoX: h,\n    panoY: w,\n    tilt: v,\n    zoom: f,\n    onCreate: C,\n    onInit: y,\n    onPanoidChange: b,\n    onPositionChanged: I,\n    onViewpointChange: M,\n    onErrorGetNearestPanoId: L\n  } = o,\n      O = c(o, T);\n  const x = i || \"div\",\n        [S, z] = n(!1),\n        [E, P] = n(!0),\n        [R, A] = n(),\n        D = a(null);\n  return p(() => {\n    m.isLoaded().then(z);\n  }, []), p(() => {\n    if (!S) return;\n    const e = D.current;\n    if (!e) return;\n    const o = new kakao.maps.Roadview(e, {\n      pan: k,\n      panoId: g,\n      panoX: h,\n      panoY: w,\n      tilt: v,\n      zoom: f\n    });\n    return A(o), () => {\n      e.innerHTML = \"\";\n    };\n  }, [S, h, w, f]), r(t, () => R, [R]), p(() => {\n    R && C && C(R);\n  }, [R, C]), p(() => {\n    if (!R || g || R.getPosition().getLat() === l.lat && R.getPosition().getLng() === l.lng) return;\n    const e = new kakao.maps.LatLng(l.lat, l.lng);\n    new kakao.maps.RoadviewClient().getNearestPanoId(e, l.radius, o => {\n      null === o && L ? L(R) : R.setPanoId(o, e);\n    });\n  }, [R, g, l.lat, l.lng, l.radius, L]), p(() => {\n    if (!R || !g || g === R.getPanoId() || R.getPosition().getLat() === l.lat && R.getPosition().getLng() === l.lng) return;\n    const e = new kakao.maps.LatLng(l.lat, l.lng);\n    R.setPanoId(g, e);\n  }, [R, g, l.lat, l.lng]), p(() => {\n    if (!R) return;\n    const e = R.getViewpoint();\n    e.pan === k && e.tilt === v || (k && (e.pan = k), v && (e.tilt = v), R.setViewpoint(e));\n  }, [R, k, v]), u(R, \"init\", e => {\n    P(!1), y && y(e);\n  }), u(R, \"panoid_changed\", b), u(R, \"viewpoint_changed\", M), u(R, \"position_changed\", I), e.createElement(e.Fragment, null, e.createElement(x, d({\n    ref: D\n  }, O)), R && !E && e.createElement(Z.Provider, {\n    value: R\n  }, s));\n}),\n      N = e => {\n  const o = i(Z);\n  if (!o) throw new Error((e ? e + \" Component\" : \"useRoadview\") + \" must exist inside Roadview Component!\");\n  return o;\n},\n      j = e.forwardRef((_ref17, m) => {\n  let {\n    position: e,\n    children: t,\n    clickable: n,\n    xAnchor: i,\n    yAnchor: d,\n    zIndex: c,\n    altitude: p,\n    range: u,\n    onCreate: k\n  } = _ref17;\n  const g = N(\"CustomOverlayRoadview\"),\n        h = a(document.createElement(\"div\")),\n        w = s(() => \"lat\" in e ? new kakao.maps.LatLng(e.lat, e.lng) : new kakao.maps.Viewpoint(e.pan, e.tilt, e.zoom, e.panoId), [e.lat, e.lng, e.pan, e.tilt, e.zoom, e.panoId]),\n        v = s(() => {\n    const e = new kakao.maps.CustomOverlay({\n      clickable: n,\n      xAnchor: i,\n      yAnchor: d,\n      zIndex: c,\n      position: w,\n      content: h.current\n    });\n    return h.current.style.display = \"none\", e;\n  }, [n, i, d]);\n  return r(m, () => v, [v]), o(() => {\n    if (g) return v.setMap(g), () => {\n      v.setMap(null);\n    };\n  }, [v, g]), o(() => {\n    k && k(v);\n  }, [v, k]), o(() => {\n    v.setPosition(w);\n  }, [v, w]), o(() => {\n    c && v.setZIndex(c);\n  }, [v, c]), o(() => {\n    p && v.setAltitude(p);\n  }, [v, p]), o(() => {\n    u && v.setRange(u);\n  }, [v, u]), h.current.parentElement && l.createPortal(t, h.current.parentElement);\n}),\n      _ = e.forwardRef((_ref18, v) => {\n  let {\n    image: o,\n    position: t,\n    children: n,\n    altitude: a,\n    clickable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: u,\n    onCreate: k,\n    opacity: m,\n    range: g,\n    title: h,\n    zIndex: w\n  } = _ref18;\n  const f = N(\"RoadviewMarker\"),\n        C = s(() => {\n    var e, t, n, a, r, i, s, l, d, c, p, u;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (e = o.options) ? void 0 : e.alt,\n      coords: null == (t = o.options) ? void 0 : t.coords,\n      offset: (null == (n = o.options) ? void 0 : n.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (r = o.options) ? void 0 : r.offset.y),\n      shape: null == (i = o.options) ? void 0 : i.shape,\n      spriteOrigin: (null == (s = o.options) ? void 0 : s.spriteOrigin) && new kakao.maps.Point(null == (l = o.options) ? void 0 : l.spriteOrigin.x, null == (d = o.options) ? void 0 : d.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (p = o.options) ? void 0 : p.spriteSize.width, null == (u = o.options) ? void 0 : u.spriteSize.height)\n    });\n  }, [o]),\n        y = s(() => \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : \"x\" in t ? new kakao.maps.Coords(t.x, t.y).toLatLng() : new kakao.maps.Viewpoint(t.pan, t.tilt, t.zoom, t.panoId), [t.lat, t.lng, t.x, t.y, t.pan, t.tilt, t.zoom, null == t ? void 0 : t.panoId]);\n  return e.createElement(b, {\n    map: f,\n    position: y,\n    image: C,\n    altitude: a,\n    clickable: r,\n    infoWindowOptions: i,\n    onClick: l,\n    onDragEnd: d,\n    onDragStart: c,\n    onMouseOut: p,\n    onMouseOver: u,\n    onCreate: k,\n    opacity: m,\n    range: g,\n    title: h,\n    zIndex: w,\n    ref: v\n  }, n);\n}),\n      F = e.forwardRef((_ref19, c) => {\n  let {\n    position: o,\n    children: t,\n    altitude: n,\n    disableAutoPan: a,\n    range: r,\n    removable: i,\n    zIndex: l,\n    onCreate: d\n  } = _ref19;\n  const p = N(\"RoadviewInfoWindow\"),\n        u = s(() => \"lat\" in o ? new kakao.maps.LatLng(o.lat, o.lng) : new kakao.maps.Viewpoint(o.pan, o.tilt, o.zoom, o.panoId), [o.lat, o.lng, o.pan, o.tilt, o.zoom, o.panoId]);\n  return e.createElement(f, {\n    altitude: n,\n    disableAutoPan: a,\n    range: r,\n    removable: i,\n    zIndex: l,\n    map: p,\n    position: u,\n    onCreate: d,\n    ref: c\n  }, t);\n}),\n      G = e.createContext(void 0);\n\nfunction U(e, t, n) {\n  o(() => {\n    e && n && e.addListener(t, function () {\n      for (var _len2 = arguments.length, o = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        o[_key2] = arguments[_key2];\n      }\n\n      return void 0 === o ? n(e) : n(e, ...o);\n    });\n  }, [n, e, t]);\n}\n\nconst V = e.forwardRef(function (_ref20, M) {\n  let {\n    arrowOptions: t,\n    circleOptions: n,\n    ellipseOptions: a,\n    markerOptions: i,\n    polygonOptions: l,\n    polylineOptions: d,\n    rectangleOptions: c,\n    drawingMode: p,\n    guideTooltip: u,\n    onSelect: k,\n    onDrawstart: m,\n    onDraw: g,\n    onDrawend: h,\n    onDrawnext: w,\n    onCancle: f,\n    onRemove: C,\n    onStateChanged: y,\n    onCreate: b,\n    children: I\n  } = _ref20;\n  const L = v(\"Toolbox\"),\n        O = s(() => {\n    if (window.kakao.maps.drawing) return new kakao.maps.drawing.DrawingManager({\n      map: L,\n      drawingMode: p,\n      guideTooltip: u,\n      arrowOptions: t,\n      circleOptions: n,\n      ellipseOptions: a,\n      markerOptions: i,\n      polygonOptions: l,\n      polylineOptions: d,\n      rectangleOptions: c\n    });\n    console.warn(\"drawing 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n  }, []);\n  return r(M, () => O, [O]), o(() => {\n    O && b && b(O);\n  }, [O, b]), U(O, \"select\", k), U(O, \"drawstart\", m), U(O, \"draw\", g), U(O, \"drawend\", h), U(O, \"drawnext\", w), U(O, \"cancel\", f), U(O, \"remove\", C), U(O, \"state_changed\", y), O ? e.createElement(G.Provider, {\n    value: O\n  }, I) : null;\n}),\n      B = e.forwardRef(function (_ref21, t) {\n  let {\n    position: e\n  } = _ref21;\n  e = e || kakao.maps.ControlPosition.TOP;\n  const n = v(\"Toolbox\"),\n        a = i(G);\n  if (!a) throw new Error(\"Toolbox must exist inside DrawingManager Component!`\");\n  const l = s(() => new kakao.maps.drawing.Toolbox({\n    drawingManager: a\n  }), [a]);\n  return r(t, () => l, [l]), o(() => {\n    const o = l.getElement();\n    return n.addControl(o, e), () => {\n      n.removeControl(o);\n    };\n  }, [n, l, e]), null;\n}),\n      $ = e.forwardRef((_ref22, m) => {\n  let {\n    id: o = \"react-kakao-maps-sdk-staticmap-container\",\n    style: t,\n    className: i,\n    center: s,\n    marker: l,\n    level: c,\n    mapTypeId: u,\n    onCreate: k\n  } = _ref22;\n  const [g, h] = n(),\n        w = a(null);\n  return p(() => {\n    if (!window.kakao) return void console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n    const e = w.current;\n    e && kakao.maps.load(() => {\n      const o = Array.isArray(l) ? l.map(e => d({}, e, {\n        position: new kakao.maps.LatLng(e.position.lat, e.position.lng)\n      })) : \"object\" == typeof l && l.position ? d({}, l, {\n        position: new kakao.maps.LatLng(l.position.lat, l.position.lng)\n      }) : l,\n            t = new kakao.maps.StaticMap(e, {\n        center: new kakao.maps.LatLng(s.lat, s.lng),\n        level: c,\n        mapTypeId: u,\n        marker: o\n      });\n      h(t);\n    });\n  }, [JSON.stringify(l)]), r(m, () => g, [g]), p(() => {\n    g && g.setCenter(new kakao.maps.LatLng(s.lat, s.lng));\n  }, [g, s.lat, s.lng]), p(() => {\n    g && c && g.setLevel(c);\n  }, [g, c]), p(() => {\n    g && u && g.setMapTypeId(u);\n  }, [g, u]), p(() => {\n    g && k && k(g);\n  }, [g, k]), e.createElement(\"div\", {\n    id: o,\n    style: t,\n    className: i,\n    ref: w\n  });\n}),\n      q = e => {\n  const [o, a] = n({\n    loading: !0,\n    error: void 0\n  }),\n        r = s(() => new m(e), [JSON.stringify(e)]);\n  return t(() => {\n    r.load().then(() => a({\n      loading: !1,\n      error: void 0\n    })).catch(e => a({\n      loading: !1,\n      error: e\n    }));\n  }, [r]), o;\n};\n\nexport { D as AbstractOverlay, z as Circle, L as CustomOverlayMap, j as CustomOverlayRoadview, V as DrawingManager, A as Ellipse, m as Loader, w as Map, M as MapInfoWindow, I as MapMarker, O as MapTypeControl, S as MapTypeId, y as MarkerClusterer, P as Polygon, E as Polyline, R as Rectangle, W as Roadview, F as RoadviewInfoWindow, _ as RoadviewMarker, $ as StaticMap, B as Toolbox, x as ZoomControl, q as useInjectKakaoMapApi, v as useMap, N as useRoadview };","map":{"version":3,"mappings":"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","names":["useIsomorphicLayoutEffect","window","document","useLayoutEffect","useEffect","useKakaoEvent","target","type","callback","wrapCallback","arg","undefined","kakao","maps","event","addListener","removeListener","LoaderStatus","Loader","constructor","appkey","id","libraries","nonce","retries","url","this","callbacks","done","loading","errors","onerrorEvent","instance","equalOptions","options","Error","stringify","JSON","static","Promise","resolve","status","FAILURE","INITIALIZED","LOADING","loadcheckcallbacks","push","e","readyState","load","reject","loadCallback","err","error","SUCCESS","failed","length","fn","execute","resetIfRetryingFailed","reset","deleteScript","console","warn","setScript","getElementById","createUrl","script","createElement","src","onerror","loadErrorCallback","bind","onload","defer","async","head","appendChild","source","lineno","colno","delay","log","setTimeout","join","remove","forEach","cb","a","b","i","KakaoMapContext","React","createContext","Map","forwardRef","ref","as","children","center","isPanto","padding","disableDoubleClick","disableDoubleClickZoom","draggable","zoomable","keyboardShortcuts","level","maxLevel","minLevel","mapTypeId","projectionId","scrollwheel","tileAnimation","onBoundsChanged","onCenterChanged","onClick","onDoubleClick","onDrag","onDragEnd","onDragStart","onIdle","onMaptypeidChanged","onMouseMove","onRightClick","onTileLoaded","onZoomChanged","onZoomStart","onCreate","props","_objectWithoutPropertiesLoose","Container","isLoaded","setIsLoaded","useState","map","setMap","container","useRef","then","MapContainer","current","initalMapCenter","LatLng","lat","lng","Coords","x","y","kakaoMap","innerHTML","useImperativeHandle","prevCenter","getCenter","toLatLng","centerPosition","equals","panTo","setCenter","setDraggable","setZoomable","setKeyboardShortcuts","setLevel","setMapTypeId","setProjectionId","setMaxLevel","setMinLevel","Provider","value","useMap","componentName","useContext","InfoWindow","position","marker","altitude","disableAutoPan","range","removable","zIndex","infoWindow","useMemo","kakaoInfoWindow","content","style","display","open","close","setPosition","setAltitude","setRange","setZIndex","parentElement","ReactDom","createPortal","KakaoMapMarkerClustererContext","MarkerClusterer","averageCenter","calculator","clickable","disableClickZoom","gridSize","hoverable","minClusterSize","styles","texts","onClusterclick","onClusterdblclick","onClustered","onClusterout","onClusterover","onClusterrightclick","markerCluster","setGridSize","redraw","setMinClusterSize","setAverageCenter","setTexts","setCalculator","setStyles","Marker","image","infoWindowOptions","onMouseOut","onMouseOver","opacity","title","addMarker","removeMarker","setImage","setClickable","setOpacity","setTitle","MapMarker","markerImage","MarkerImage","Size","size","width","height","alt","_image$options","coords","offset","_image$options3","Point","_image$options4","_image$options5","shape","_image$options6","spriteOrigin","_image$options8","_image$options9","spriteSize","_image$options10","_image$options11","_image$options12","markerPosition","MapInfoWindow","infoPosition","CustomOverlayMap","xAnchor","yAnchor","overlayPosition","overlay","KakaoCustomOverlay","CustomOverlay","ReactDOM","MapTypeControl","ControlPosition","TOPRIGHT","mapTypeControl","addControl","removeControl","ZoomControl","RIGHT","MapTypeId","addOverlayMapTypeId","removeOverlayMapTypeId","Circle","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","onMouseover","onMouseout","onMousemove","onMousedown","circleCenter","circle","setRadius","setOptions","Polyline","path","endArrow","polyLinePath","every","v","Array","p","polyline","setPath","Polygon","polygonPath","polygon","Rectangle","bounds","rectangleBounds","LatLngBounds","sw","ne","rectangle","setBounds","Ellipse","rx","ry","ellipseCenter","ellipse","AbstractOverlay","draw","onAdd","onRemove","reactAbstractOverlay","ReactAbstractOveraly","super","_excluded","KakaoRoadviewContext","Roadview","pan","panoId","panoX","panoY","tilt","zoom","onInit","onPanoidChange","onPositionChanged","onViewpointChange","onErrorGetNearestPanoId","isLoading","setIsLoading","roadview","setRoadview","RoadviewContainer","kakaoRoadview","getPosition","getLat","getLng","newPostion","RoadviewClient","getNearestPanoId","setPanoId","getPanoId","prevViewpoint","getViewpoint","setViewpoint","useRoadview","CustomOverlayRoadview","Viewpoint","RoadviewMarker","_image$options2","RoadviewInfoWindow","DrawingManagerContext","useDrawingManagerEvent","DrawingManager","arrowOptions","circleOptions","ellipseOptions","markerOptions","polygonOptions","polylineOptions","rectangleOptions","drawingMode","guideTooltip","onSelect","onDrawstart","onDraw","onDrawend","onDrawnext","onCancle","onStateChanged","drawingManager","drawing","Toolbox","TOP","drawingmanager","toolbox","element","getElement","StaticMap","className","mapContainer","_marker","isArray","mk","_extends","kakaoStaticMap","useInjectKakaoMapApi","state","setState","loader","catch"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/hooks/useIsomorphicLayoutEffect.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/hooks/useKakaoEvent.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/util/kakaoMapApiLoader.ts","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Map.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/hooks/useMap.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/InfoWindow.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/MarkerClusterer.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Marker.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/MapMarker.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/MapInfoWindow.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/CustomOverlayMap.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/MapTypeControl.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/ZoomControl.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/MapTypeId.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Circle.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Polyline.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Polygon.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Rectangle.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Ellipse.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/AbstractOverlay.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Roadview.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/hooks/useRoadview.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/CustomOverlayRoadview.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/RoadviewMarker.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/RoadviewInfoWindow.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/DrawingManager.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/Toolbox.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/components/StaticMap.tsx","/Users/hwi/Downloads/material-dashboard-react-main/node_modules/react-kakao-maps-sdk/src/hooks/useInjectKakaoMapApi.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from \"react\"\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" && typeof document !== \"undefined\"\n    ? useLayoutEffect\n    : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\"\n\nconst useKakaoEvent = <T extends kakao.maps.event.EventTarget>(\n  /**\n   * 이벤트 타겟\n   */\n  target: T | undefined,\n  /**\n   * event 타입\n   */\n  type: string,\n  /**\n   * 호출될 callback\n   */\n  callback: ((target: T, ...args: any[]) => void) | undefined\n) => {\n  useIsomorphicLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    kakao.maps.event.addListener(target, type, wrapCallback)\n\n    return () => {\n      kakao.maps.event.removeListener(target, type, wrapCallback)\n    }\n  }, [target, type, callback])\n}\n\nexport default useKakaoEvent\n","export type Libraries = (\"services\" | \"clusterer\" | \"drawing\")[]\n\nexport interface LoaderOptions {\n  /**\n   * script 객체 생성시 사용자 정의 id\n   */\n  id?: string\n  /**\n   * 발급 받은 Kakao 지도 Javscript API 키.\n   *\n   * @see [준비하기](https://apis.map.kakao.com/web/guide/#ready)\n   */\n  appkey: string\n  /**\n   * 사용하는 라이브러리 목록\n   *\n   * Kakao 지도 Javascript API 는 지도와 함께 사용할 수 있는 라이브러리 를 지원하고 있습니다.\n   * 라이브러리는 javascript API와 관련되어 있지만 조금 특화된 기능을 묶어둔 것을 말합니다. 이 기능은 추가로 불러와서 사용할 수 있도록 되어있습니다.\n   * 현재 사용할 수 있는 라이브러리는 다음과 같습니다.\n   *\n   * clusterer: 마커를 클러스터링 할 수 있는 클러스터러 라이브러리 입니다.\n   * services: 장소 검색 과 주소-좌표 변환 을 할 수 있는 services 라이브러리 입니다.\n   * drawing: 지도 위에 마커와 그래픽스 객체를 쉽게 그릴 수 있게 그리기 모드를 지원하는 drawing 라이브러리 입니다.\n   * 라이브러리는 계속해서 추가될 예정입니다.\n   */\n  libraries?: Libraries\n  /**\n   * 사용자 정의 Kakao 지도 javascript 경로 지정\n   *\n   * @default \"//dapi.kakao.com/v2/maps/sdk.js\"\n   */\n  url?: string\n  /**\n   * 보안을 위한 nonce 값 설정\n   */\n  nonce?: string\n  /**\n   * 스크립트 로드 재시도 횟수\n   */\n  retries?: number\n}\n\nexport enum LoaderStatus {\n  INITIALIZED,\n  LOADING,\n  SUCCESS,\n  FAILURE,\n}\n\nconst DEFAULT_ID = \"__reactKakaoMapsSdkloaderId\"\n\n/**\n * Kakao Map Api Loader\n *\n * `new Loader(options).load()` 함수를 이용하여 Api를 비동기적으로 삽입할 수 있습니다.\n *\n * 해당 Loader를 이용시 `react-kakao-maps-sdk` 내부에서 injection 되는 이벤트를 감지하여 kakao map api 로딩 이후에 렌더링을 진행합니다.\n */\nexport class Loader {\n  private static instance: Loader\n  private static loadcheckcallbacks: ((e?: ErrorEvent) => void)[] = []\n\n  public readonly id: string\n  public readonly appkey: string\n  public readonly url: string\n  public readonly libraries: Libraries\n  public readonly nonce: string | undefined\n  public readonly retries: number\n\n  private callbacks: ((e?: ErrorEvent) => void)[] = []\n  private done = false\n  private loading = false\n  private errors: ErrorEvent[] = []\n  private onerrorEvent: ErrorEvent | undefined\n\n  constructor({\n    appkey,\n    id = DEFAULT_ID,\n    libraries = [],\n    nonce,\n    retries = 3,\n    url = \"//dapi.kakao.com/v2/maps/sdk.js\",\n  }: LoaderOptions) {\n    this.id = id\n    this.appkey = appkey\n    this.libraries = libraries\n    this.nonce = nonce\n    this.retries = retries\n    this.url = url\n\n    if (Loader.instance) {\n      if (!Loader.equalOptions(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        )\n      }\n\n      return Loader.instance\n    }\n    Loader.instance = this\n  }\n\n  public get options() {\n    return {\n      appkey: this.appkey,\n      id: this.id,\n      libraries: this.libraries,\n      nonce: this.nonce,\n      retries: this.retries,\n      url: this.url,\n    }\n  }\n\n  public static isLoaded(): Promise<boolean> {\n    return new Promise((resolve) => {\n      if (!Loader.instance) {\n        if (window.kakao && window.kakao.maps) {\n          /**\n           * kakao 객체가 autoload=false 되어 있거나, 아직 로딩이 완료 되지 못한 상황인 경우 load 처리를 실행하거나 기다리도록 처리 필요.\n           */\n          // @ts-ignore\n          if (window.kakao.maps.readyState !== 0) {\n            return resolve(true)\n          }\n          return window.kakao.maps.load(() => {\n            resolve(true)\n          })\n        }\n        return Loader.loadcheckcallbacks.push((e) => {\n          resolve(!e)\n        })\n      }\n\n      if (\n        Loader.instance.status === LoaderStatus.FAILURE ||\n        Loader.instance.status === LoaderStatus.INITIALIZED\n      ) {\n        return resolve(false)\n      }\n\n      if (Loader.instance.status === LoaderStatus.LOADING) {\n        Loader.loadcheckcallbacks.push((e) => resolve(!e))\n      }\n\n      return resolve(true)\n    })\n  }\n\n  public load(): Promise<typeof kakao> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err?: ErrorEvent) => {\n        if (!err) {\n          resolve(window.kakao)\n        } else {\n          reject(err.error)\n        }\n      })\n    })\n  }\n\n  public get status(): LoaderStatus {\n    if (this.onerrorEvent) {\n      return LoaderStatus.FAILURE\n    }\n    if (this.done) {\n      return LoaderStatus.SUCCESS\n    }\n    if (this.loading) {\n      return LoaderStatus.LOADING\n    }\n    return LoaderStatus.INITIALIZED\n  }\n\n  private get failed(): boolean {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1\n  }\n\n  private loadCallback(fn: (e?: ErrorEvent) => void): void {\n    this.callbacks.push(fn)\n    this.execute()\n  }\n\n  private resetIfRetryingFailed(): void {\n    if (this.failed) {\n      this.reset()\n    }\n  }\n\n  private reset(): void {\n    this.deleteScript()\n    this.done = false\n    this.loading = false\n    this.errors = []\n    this.onerrorEvent = undefined\n  }\n\n  private execute() {\n    this.resetIfRetryingFailed()\n\n    if (this.done) {\n      this.callback()\n    } else {\n      if (window.kakao && window.kakao.maps) {\n        console.warn(\n          \"Kakao Maps이 이미 외부 요소에 의해 로딩되어 있습니다.\" +\n            \"설정한 옵션과 일치 하지 않을 수 있으며, 이에 따른 예상치 동작이 발생할 수 있습니다.\"\n        )\n        this.callback()\n        return\n      }\n\n      if (!this.loading) {\n        this.loading = true\n        this.setScript()\n      }\n    }\n  }\n\n  private setScript() {\n    if (document.getElementById(this.id)) {\n      this.callback()\n    }\n\n    const url = this.createUrl()\n    const script = document.createElement(\"script\")\n\n    script.id = this.id\n    script.type = \"text/javascript\"\n    script.src = url\n    script.onerror = this.loadErrorCallback.bind(this)\n    script.onload = this.callback.bind(this)\n    script.defer = true\n    script.async = true\n\n    if (this.nonce) {\n      script.nonce = this.nonce\n    }\n\n    document.head.appendChild(script)\n  }\n\n  private loadErrorCallback(\n    event: Event | string,\n    source?: string,\n    lineno?: number,\n    colno?: number,\n    error?: Error\n  ): void {\n    this.errors.push({\n      event,\n      source,\n      // @ts-ignore\n      lineno,\n      // @ts-ignore\n      colno,\n      error,\n    })\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length\n\n      console.log(`Failed to load Kakao Maps script, retrying in ${delay} ms.`)\n\n      setTimeout(() => {\n        this.deleteScript()\n        this.setScript()\n      }, delay)\n    } else {\n      this.onerrorEvent = this.errors[this.errors.length - 1]\n      this.callback()\n    }\n  }\n\n  public createUrl(): string {\n    let url = this.url\n    url += `?appkey=${this.appkey}`\n\n    if (this.libraries.length) {\n      url += `&libraries=${this.libraries.join(\",\")}`\n    }\n\n    url += `&autoload=false`\n\n    return url\n  }\n\n  private deleteScript() {\n    const script = document.getElementById(this.id)\n    if (script) {\n      script.remove()\n    }\n  }\n\n  private callback() {\n    kakao.maps.load(() => {\n      this.done = true\n      this.loading = false\n\n      this.callbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      this.callbacks = []\n\n      Loader.loadcheckcallbacks.forEach((cb) => {\n        cb(this.onerrorEvent)\n      })\n      Loader.loadcheckcallbacks = []\n    })\n  }\n\n  private static equalOptions(\n    a: typeof Loader.prototype.options,\n    b: typeof Loader.prototype.options\n  ): boolean {\n    if (a.appkey !== b.appkey) return false\n    if (a.id !== b.id) return false\n\n    if (a.libraries.length !== b.libraries.length) return false\n    for (let i = 0; i < a.libraries.length; ++i) {\n      if (a.libraries[i] !== b.libraries[i]) return false\n    }\n    if (a.nonce !== b.nonce) return false\n    if (a.retries !== b.retries) return false\n    if (a.url !== b.url) return false\n    return true\n  }\n}\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { PolymorphicComponentPropsWithOutRef } from \"../types\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoMapContext = React.createContext<kakao.maps.Map>(\n  undefined as unknown as kakao.maps.Map\n)\n\nexport type MapProps = {\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  /**\n   * 중심을 이동시킬때 Panto를 사용할지 정합니다.\n   * @default false\n   */\n  isPanto?: boolean\n\n  /**\n   * 중심 좌표를 지정한 좌표 또는 영역으로 부드럽게 이동한다. 필요하면 확대 또는 축소도 수행한다.\n   * 만약 이동할 거리가 지도 화면의 크기보다 클 경우 애니메이션 없이 이동한다.\n   * padding 만큼 제외하고 영역을 계산하며, padding 을 지정하지 않으면 기본값으로 32가 사용된다.\n   */\n  padding?: number\n\n  /**\n   * 확대 수준 (기본값: 3)\n   */\n  level?: number\n\n  /**\n   * 최대 확대 수준\n   */\n  maxLevel?: number\n\n  /**\n   * 최소 확대 수준\n   */\n  minLevel?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 마우스 드래그, 휠, 모바일 터치를 이용한 시점 변경(이동, 확대, 축소) 가능 여부\n   */\n  draggable?: boolean\n\n  /**\n   * 마우스 휠이나 멀티터치로 지도 확대, 축소 기능을 막습니다. 상황에 따라 지도 확대, 축소 기능을 제어할 수 있습니다.\n   */\n  zoomable?: boolean\n\n  /**\n   * 마우스 휠, 모바일 터치를 이용한 확대 및 축소 가능 여부\n   */\n  scrollwheel?: boolean\n\n  /**\n   * 더블클릭 이벤트 및 더블클릭 확대 가능 여부\n   */\n  disableDoubleClick?: boolean\n\n  /**\n   * 더블클릭 확대 가능 여부\n   */\n  disableDoubleClickZoom?: boolean\n\n  /**\n   * 투영법 지정 (기본값: kakao.maps.ProjectionId.WCONG)\n   */\n  projectionId?: string\n\n  /**\n   * 지도 타일 애니메이션 설정 여부 (기본값: true)\n   */\n  tileAnimation?: boolean\n\n  /**\n   * 키보드의 방향키와 +, – 키로 지도 이동,확대,축소 가능 여부 (기본값: false)\n   */\n  keyboardShortcuts?:\n    | boolean\n    | {\n        /**\n         * 지도 이동 속도\n         */\n        speed: number\n      }\n\n  /**\n   * map 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (map: kakao.maps.Map) => void\n\n  /**\n   * 중심 좌표가 변경되면 발생한다.\n   */\n  onCenterChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되기 직전 발생한다.\n   */\n  onZoomStart?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되면 발생한다.\n   */\n  onZoomChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 영역이 변경되면 발생한다.\n   */\n  onBoundsChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도를 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 더블클릭하면 발생한다.\n   */\n  onDoubleClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 마우스 오른쪽 버튼으로 클릭하면 발생한다.\n   */\n  onRightClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도에서 마우스 커서를 이동하면 발생한다.\n   */\n  onMouseMove?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 시작할 때 발생한다.\n   */\n  onDragStart?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 하는 동안 발생한다.\n   */\n  onDrag?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그가 끝날 때 발생한다.\n   */\n  onDragEnd?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 중심 좌표나 확대 수준이 변경되면 발생한다.\n   * 단, 애니메이션 도중에는 발생하지 않는다.\n   */\n  onIdle?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대수준이 변경되거나 지도가 이동했을때 타일 이미지 로드가 모두 완료되면 발생한다.\n   * 지도이동이 미세하기 일어나 타일 이미지 로드가 일어나지 않은경우 발생하지 않는다.\n   */\n  onTileLoaded?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 기본 타일(일반지도, 스카이뷰, 하이브리드)이 변경되면 발생한다.\n   */\n  onMaptypeidChanged?: (target: kakao.maps.Map) => void\n\n  children?: React.ReactNode | undefined\n}\n\ntype MapComponent = <T extends React.ElementType = \"div\">(\n  props: PolymorphicComponentPropsWithOutRef<T, MapProps>\n) => React.ReactElement | null\n\n/**\n * 기본적인 Map 객체를 생성하는 Comeponent 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 함께 인자로 전달 합니다.\n *\n * `ref`를 통해 `map` 객체에 직접 접근하여 사용 또는 onCreate 이벤트를 이용하여 접근이 가능합니다.\n *\n * > *주의 사항* `Map`, `RoadView` 컴포넌트에 한하여, ref 객체가 컴포넌트 마운트 시점에 바로 초기화가 안될 수 있습니다.\n * >\n * > 컴포넌트 마운트 시점에 `useEffect` 를 활용하여, 특정 로직을 수행하고 싶은 경우 `ref` 객체를 사용하는 것보다\n * > `onCreate` 이벤트와 `useState`를 함께 활용하여 제어하는 것을 추천 드립니다.\n */\nconst Map: MapComponent = React.forwardRef(\n  <T extends React.ElementType = \"div\">(\n    {\n      as,\n      children,\n      center,\n      isPanto = false,\n      padding = 32,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      draggable,\n      zoomable,\n      keyboardShortcuts,\n      level,\n      maxLevel,\n      minLevel,\n      mapTypeId,\n      projectionId,\n      scrollwheel,\n      tileAnimation,\n      onBoundsChanged,\n      onCenterChanged,\n      onClick,\n      onDoubleClick,\n      onDrag,\n      onDragEnd,\n      onDragStart,\n      onIdle,\n      onMaptypeidChanged,\n      onMouseMove,\n      onRightClick,\n      onTileLoaded,\n      onZoomChanged,\n      onZoomStart,\n      onCreate,\n      ...props\n    }: PolymorphicComponentPropsWithOutRef<T, MapProps>,\n    ref: React.ForwardedRef<kakao.maps.Map>\n  ) => {\n    const Container = as || \"div\"\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [map, setMap] = useState<kakao.maps.Map>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n\n      const MapContainer = container.current\n\n      if (!MapContainer) {\n        return\n      }\n\n      const initalMapCenter =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      const kakaoMap = new kakao.maps.Map(MapContainer, {\n        center: initalMapCenter,\n        disableDoubleClick: disableDoubleClick,\n        disableDoubleClickZoom: disableDoubleClickZoom,\n        draggable: draggable,\n        keyboardShortcuts: keyboardShortcuts,\n        level: level,\n        mapTypeId: mapTypeId,\n        projectionId: projectionId,\n        scrollwheel: scrollwheel,\n        tileAnimation: tileAnimation,\n      })\n\n      setMap(kakaoMap)\n\n      return () => {\n        MapContainer.innerHTML = \"\"\n      }\n    }, [\n      isLoaded,\n      disableDoubleClick,\n      disableDoubleClickZoom,\n      mapTypeId,\n      tileAnimation,\n    ])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !onCreate) return\n      onCreate(map)\n    }, [map, onCreate])\n\n    // center position 변경시 map center 변경\n    useIsomorphicLayoutEffect(() => {\n      if (!map) return\n\n      let prevCenter = map.getCenter()\n      if (prevCenter instanceof kakao.maps.Coords) {\n        prevCenter = prevCenter.toLatLng()\n      }\n\n      const centerPosition =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n\n      if (\n        (centerPosition instanceof kakao.maps.LatLng &&\n          centerPosition.equals(prevCenter)) ||\n        (centerPosition instanceof kakao.maps.Coords &&\n          centerPosition.toLatLng().equals(prevCenter))\n      ) {\n        return\n      }\n\n      if (isPanto) {\n        map.panTo(centerPosition, padding)\n      } else {\n        map.setCenter(centerPosition)\n      }\n      // @ts-ignore\n    }, [map, center.lat, center.lng, center.x, center.y])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof draggable === \"undefined\") return\n      map.setDraggable(draggable)\n    }, [map, draggable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || typeof zoomable === \"undefined\") return\n      map.setZoomable(zoomable)\n    }, [map, zoomable])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !keyboardShortcuts || typeof keyboardShortcuts !== \"boolean\")\n        return\n      map.setKeyboardShortcuts(keyboardShortcuts)\n    }, [map, keyboardShortcuts])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !level) return\n      map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !mapTypeId) return\n      map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !projectionId) return\n      map.setProjectionId(projectionId)\n    }, [map, projectionId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !maxLevel) return\n      map.setMaxLevel(maxLevel)\n    }, [map, maxLevel])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!map || !minLevel) return\n      map.setMinLevel(minLevel)\n    }, [map, minLevel])\n\n    useKakaoEvent(map, \"bounds_changed\", onBoundsChanged)\n    useKakaoEvent(map, \"center_changed\", onCenterChanged)\n    useKakaoEvent(map, \"click\", onClick)\n    useKakaoEvent(map, \"dblclick\", onDoubleClick)\n    useKakaoEvent(map, \"drag\", onDrag)\n    useKakaoEvent(map, \"dragstart\", onDragStart)\n    useKakaoEvent(map, \"dragend\", onDragEnd)\n    useKakaoEvent(map, \"idle\", onIdle)\n    useKakaoEvent(map, \"maptypeid_changed\", onMaptypeidChanged)\n    useKakaoEvent(map, \"mousemove\", onMouseMove)\n    useKakaoEvent(map, \"rightclick\", onRightClick)\n    useKakaoEvent(map, \"tilesloaded\", onTileLoaded)\n    useKakaoEvent(map, \"zoom_changed\", onZoomChanged)\n    useKakaoEvent(map, \"zoom_start\", onZoomStart)\n\n    return (\n      <>\n        <Container {...props} ref={container} />\n        {map && (\n          <KakaoMapContext.Provider value={map}>\n            {children}\n          </KakaoMapContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Map\n","import { useContext } from \"react\"\nimport { KakaoMapContext } from \"../components/Map\"\n\n/**\n * kakao map 객체를 가져오는 hook 입니다.\n * Map 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useMap = (componentName?: string) => {\n  const kakaoMap = useContext(KakaoMapContext)\n  if (!kakaoMap) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useMap\"\n      } must exist inside Map Component!`\n    )\n  }\n\n  return kakaoMap\n}\n\nexport default useMap\n","import React, {\n  useLayoutEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDom from \"react-dom\"\n\ninterface InfoWindowProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n  marker?: kakao.maps.Marker\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부\n   * @default false\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\nconst InfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<InfoWindowProps>\n>(\n  (\n    {\n      map,\n      position,\n      marker,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const container = useRef(document.createElement(\"div\"))\n\n    const infoWindow = useMemo(() => {\n      const kakaoInfoWindow = new kakao.maps.InfoWindow({\n        altitude: altitude,\n        disableAutoPan: disableAutoPan,\n        range: range,\n        removable: removable,\n        zIndex: zIndex,\n        content: container.current,\n        position: position,\n      })\n      container.current.style.display = \"none\"\n      return kakaoInfoWindow\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [disableAutoPan, removable])\n\n    useImperativeHandle(ref, () => infoWindow, [infoWindow])\n\n    useLayoutEffect(() => {\n      infoWindow.open(map, marker)\n      return () => {\n        infoWindow.close()\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(infoWindow)\n    }, [infoWindow, onCreate])\n\n    useLayoutEffect(() => {\n      if (!infoWindow) return\n      infoWindow.setPosition(position)\n    }, [infoWindow, position])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !altitude) return\n      infoWindow.setAltitude(altitude)\n    }, [infoWindow, altitude])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !range) return\n      infoWindow.setRange(range)\n    }, [infoWindow, range])\n\n    useLayoutEffect(() => {\n      if (!infoWindow || !zIndex) return\n      infoWindow.setZIndex(zIndex)\n    }, [infoWindow, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDom.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default InfoWindow\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport const KakaoMapMarkerClustererContext =\n  React.createContext<kakao.maps.MarkerClusterer>(\n    undefined as unknown as kakao.maps.MarkerClusterer\n  )\n\nexport interface MarkerClustererProps {\n  /**\n   * 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다\n   * @default 60\n   */\n  gridSize?: number\n  /**\n   * 마커들의 좌표 평균을 클러스터 좌표 설정 여부\n   * @default false\n   */\n  averageCenter?: boolean\n  /**\n   * 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다\n   * @default 0\n   */\n  minLevel?: number\n  /**\n   * 클러스터링 할 최소 마커 수\n   * @default 2\n   */\n  minClusterSize?: number\n  /**\n   * 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다\n   */\n  styles?: React.CSSProperties[] | object[]\n  /**\n   * 클러스터에 표시할 문자열 또는 문자열 생성 함수.\n   * @default \"클러스터에 포함된 숫자\"\n   */\n  texts?: string[] | ((size: number) => string)\n  /**\n   * 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수\n   * @default [10, 100, 1000, 10000]\n   */\n  calculator?: number[] | ((size: number) => number[])\n  /**\n   * 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다\n   * @default false\n   */\n  disableClickZoom?: boolean\n  /**\n   * 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다.\n   * @default true\n   */\n  clickable?: boolean\n  /**\n   * 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다.\n   * @default true\n   */\n  hoverable?: boolean\n\n  /**\n   * 클러스터 마커를 클릭 했을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 Cluster 객체가 넘어온다.\n   * 클러스터 마커 클릭 시 지도가 줌인 되는 경우 원하는 Cluster 객체를 얻지 못할 수도 있다.\n   * 때문에 MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정하여\n   * 클러스터 마커를 클릭했을 때 지도가 줌인되지 않도록 설정 후 사용한다.\n   */\n  onClusterclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 오버 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 오버한 Cluster 객체가 넘어온다.\n   */\n  onClusterover?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 아웃 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 아웃된 Cluster 객체가 넘어온다.\n   */\n  onClusterout?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 더블클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 더블클릭한 Cluster 객체가 넘어온다.\n   * MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정해야만 이벤트가 발생한다.\n   */\n  onClusterdblclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 오른쪽 클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 오른쪽 클릭한 Cluster 객체가 넘어온다.\n   */\n  onClusterrightclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터링이 완료됐을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 생성된 Cluster 객체 전체가 배열로 넘어온다.\n   */\n  onClustered?: (\n    target: kakao.maps.MarkerClusterer,\n    clusters: kakao.maps.Cluster[]\n  ) => void\n  /**\n   * MarkerClusterer 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (target: kakao.maps.MarkerClusterer) => void\n}\n\nconst MarkerClusterer = React.forwardRef<\n  kakao.maps.MarkerClusterer,\n  React.PropsWithChildren<MarkerClustererProps>\n>(\n  (\n    {\n      children,\n      averageCenter,\n      calculator,\n      clickable,\n      disableClickZoom,\n      gridSize,\n      hoverable,\n      minClusterSize,\n      minLevel,\n      styles,\n      texts,\n      onClusterclick,\n      onClusterdblclick,\n      onClustered,\n      onClusterout,\n      onClusterover,\n      onClusterrightclick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`MarkerClusterer`)\n    const markerCluster = useMemo(() => {\n      if (!window.kakao.maps.MarkerClusterer) {\n        console.warn(\n          \"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n      return new kakao.maps.MarkerClusterer({\n        averageCenter,\n        calculator,\n        clickable,\n        disableClickZoom,\n        gridSize,\n        hoverable,\n        minClusterSize,\n        minLevel,\n        styles,\n        texts,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => markerCluster!, [markerCluster])\n\n    useLayoutEffect(() => {\n      markerCluster?.setMap(map)\n    }, [map, markerCluster])\n\n    useLayoutEffect(() => {\n      if (markerCluster && onCreate) onCreate(markerCluster)\n    }, [markerCluster, onCreate])\n\n    useLayoutEffect(() => {\n      if (markerCluster && gridSize) {\n        markerCluster.setGridSize(gridSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, gridSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minClusterSize) {\n        markerCluster.setMinClusterSize(minClusterSize)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minClusterSize])\n\n    useLayoutEffect(() => {\n      if (markerCluster && typeof averageCenter !== \"undefined\") {\n        markerCluster.setAverageCenter(averageCenter)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, averageCenter])\n\n    useLayoutEffect(() => {\n      if (markerCluster && minLevel) {\n        markerCluster.setMinLevel(minLevel)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, minLevel])\n\n    useLayoutEffect(() => {\n      if (markerCluster && texts) {\n        markerCluster.setTexts(texts)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, texts])\n\n    useLayoutEffect(() => {\n      if (markerCluster && calculator) {\n        markerCluster.setCalculator(calculator)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, calculator])\n\n    useLayoutEffect(() => {\n      if (markerCluster && styles) {\n        markerCluster.setStyles(styles)\n        markerCluster.redraw()\n      }\n    }, [markerCluster, styles])\n\n    useKakaoEvent(markerCluster, \"clusterclick\", onClusterclick)\n    useKakaoEvent(markerCluster, \"clusterover\", onClusterover)\n    useKakaoEvent(markerCluster, \"clusterout\", onClusterout)\n    useKakaoEvent(markerCluster, \"clusterdblclick\", onClusterdblclick)\n    useKakaoEvent(markerCluster, \"clusterrightclick\", onClusterrightclick)\n    useKakaoEvent(markerCluster, \"clustered\", onClustered)\n\n    if (!markerCluster) {\n      return null\n    }\n\n    return (\n      <KakaoMapMarkerClustererContext.Provider value={markerCluster}>\n        {children}\n      </KakaoMapMarkerClustererContext.Provider>\n    )\n  }\n)\n\nexport default MarkerClusterer\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport InfoWindow from \"./InfoWindow\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\ninterface MarkerProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n\n  /**\n   * marker 생성 후 marker 객체를 전달하는 callback\n   */\n  onCreate?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * 마커의 이미지\n   */\n  image?: kakao.maps.MarkerImage\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n\n    /**\n     * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n     */\n    altitude?: number\n\n    /**\n     * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n     */\n    range?: number\n  }\n}\n\nconst Marker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MarkerProps>\n>(\n  (\n    {\n      map,\n      position,\n      children,\n      altitude,\n      clickable,\n      draggable,\n      image,\n      infoWindowOptions,\n      onCreate,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    // Marker 객체는 단 한번만 생성 되도록 함\n    const marker = useMemo(() => {\n      const kakaoMarker = new kakao.maps.Marker({\n        altitude,\n        clickable,\n        draggable,\n        image,\n        opacity,\n        range,\n        title,\n        zIndex,\n        position,\n      })\n\n      return kakaoMarker\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => marker, [marker])\n\n    useLayoutEffect(() => {\n      if (markerCluster) {\n        markerCluster.addMarker(marker)\n      } else {\n        marker.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(marker)\n        } else {\n          marker.setMap(null)\n        }\n      }\n    }, [map, markerCluster, marker])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(marker)\n    }, [marker, onCreate])\n\n    useKakaoEvent(marker, \"click\", onClick)\n    useKakaoEvent(marker, \"dragstart\", onDragStart)\n    useKakaoEvent(marker, \"dragend\", onDragEnd)\n    useKakaoEvent(marker, \"mouseout\", onMouseOut)\n    useKakaoEvent(marker, \"mouseover\", onMouseOver)\n\n    // position이 변경되면 객체를 갱신한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !position) return\n\n      marker.setPosition(position)\n    }, [map, marker, position])\n\n    // image 객체가 존재하면 이미지를 로드한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !image) return\n\n      marker.setImage(image)\n    }, [map, marker, image])\n\n    // altitude 값이 있으면 높이를 조정한다\n    useLayoutEffect(() => {\n      if (!map || !marker || !altitude) return\n\n      marker.setAltitude(altitude)\n    }, [map, marker, altitude])\n\n    // clickable 값이 있으면 클릭이 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof clickable === \"undefined\") return\n\n      marker.setClickable(clickable)\n    }, [map, marker, clickable])\n\n    // draggable 값이 있으면 드래그가 가능하도록 한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || typeof draggable === \"undefined\") return\n\n      marker.setDraggable(draggable)\n    }, [map, marker, draggable])\n\n    // opacity 값이 있으면 투명도를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !opacity) return\n\n      marker.setOpacity(opacity)\n    }, [map, marker, opacity])\n\n    // range 값이 있으면 마커의 가시반경을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !range) return\n\n      marker.setRange(range)\n    }, [map, marker, range])\n\n    // title 값이 있으면 마커의 제목을 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !title) return\n\n      marker.setTitle(title)\n    }, [map, marker, title])\n\n    // zIndex 값이 있으면 마커의 zindex를 조절한다.\n    useLayoutEffect(() => {\n      if (!map || !marker || !zIndex) return\n\n      marker.setZIndex(zIndex)\n    }, [map, marker, zIndex])\n\n    if (children)\n      return (\n        <InfoWindow\n          position={position}\n          map={map}\n          marker={marker}\n          altitude={infoWindowOptions?.altitude}\n          disableAutoPan={infoWindowOptions?.disableAutoPan}\n          range={infoWindowOptions?.range}\n          removable={infoWindowOptions?.removable}\n          zIndex={infoWindowOptions?.zIndex}\n        >\n          {children}\n        </InfoWindow>\n      )\n\n    return null\n  }\n)\n\nexport default Marker\n","import React, { useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport Marker from \"./Marker\"\n\nexport interface MapMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<MapMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      clickable,\n      draggable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`MapMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Coords(position.x, position.y).toLatLng()\n\n      // @ts-ignore\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [position.lat, position.lng, position.x, position.y])\n\n    return (\n      <Marker\n        map={map}\n        position={markerPosition}\n        image={markerImage}\n        clickable={clickable}\n        draggable={draggable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default MapMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<MapInfoWindowProps>\n>(\n  (\n    { position, children, disableAutoPan, removable, zIndex, onCreate },\n    ref\n  ) => {\n    const map = useMap(`MapInfoWindow`)\n    const infoPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    return (\n      <InfoWindow\n        disableAutoPan={disableAutoPan}\n        removable={removable}\n        zIndex={zIndex}\n        map={map}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default MapInfoWindow\n","import React, {\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useMap from \"../hooks/useMap\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\nexport interface CustomOverlayMapProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayMapProps>\n>(\n  (\n    { position, children, clickable, xAnchor, yAnchor, zIndex, onCreate },\n    ref\n  ) => {\n    const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n    const map = useMap(`CustomOverlayMap`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }, [position.lat, position.lng])\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!map) return\n\n      if (markerCluster) {\n        markerCluster.addMarker(overlay)\n      } else {\n        overlay.setMap(map)\n      }\n\n      return () => {\n        if (markerCluster) {\n          markerCluster.removeMarker(overlay)\n        } else {\n          overlay.setMap(null)\n        }\n      }\n    }, [map, markerCluster, overlay])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayMap\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeControlProps {\n  /**\n   * MapTypeControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl = React.forwardRef<\n  kakao.maps.MapTypeControl,\n  MapTypeControlProps\n>(({ position = kakao.maps.ControlPosition.TOPRIGHT }, ref) => {\n  const map = useMap(`MapTypeControl`)\n\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl()\n  }, [])\n\n  useImperativeHandle(ref, () => mapTypeControl, [mapTypeControl])\n\n  useLayoutEffect(() => {\n    map.addControl(mapTypeControl, position)\n\n    return () => {\n      map.removeControl(mapTypeControl)\n    }\n  }, [map, mapTypeControl, position])\n\n  return null\n})\n\nexport default MapTypeControl\n","import React, { useEffect, useImperativeHandle, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface ZoomControlProps {\n  /**\n   * ZoomControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 확대·축소 컨트롤을 생성한다.\n */\nconst ZoomControl = React.forwardRef<kakao.maps.ZoomControl, ZoomControlProps>(\n  ({ position = kakao.maps.ControlPosition.RIGHT }, ref) => {\n    const map = useMap(`ZoomControl`)\n\n    const ZoomControl = useMemo(() => {\n      return new kakao.maps.ZoomControl()\n    }, [])\n\n    useImperativeHandle(ref, () => ZoomControl, [ZoomControl])\n\n    useEffect(() => {\n      map.addControl(ZoomControl, position)\n\n      return () => {\n        map.removeControl(ZoomControl)\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, position])\n\n    return null\n  }\n)\n\nexport default ZoomControl\n","import React, { useEffect } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeIdProps {\n  /**\n   * MapTypeId를 정의 한다.\n   */\n  type: kakao.maps.MapTypeId\n}\n\n/**\n * 추가적으로 보이고 싶은 지도 타입을 추가 할 때 사용한다.\n */\nconst MapTypeId: React.FC<MapTypeIdProps> = ({ type }) => {\n  const map = useMap(`MapTypeId`)\n\n  useEffect(() => {\n    map.addOverlayMapTypeId(type)\n\n    return () => {\n      map.removeOverlayMapTypeId(type)\n    }\n  }, [map, type])\n\n  return null\n}\n\nexport default MapTypeId\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CircleProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 원의 반지름 크기를 지정합니다 (미터 단위).\n   */\n  radius: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Circle) => void\n}\n\n/**\n * Map 상에 원을 그립니다.\n */\nconst Circle = React.forwardRef<kakao.maps.Circle, CircleProps>(\n  (\n    {\n      center,\n      radius,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Circle`)\n\n    const circleCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const circle = useMemo(() => {\n      return new kakao.maps.Circle({\n        center: circleCenter,\n        radius,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => circle, [circle])\n\n    useLayoutEffect(() => {\n      circle.setMap(map)\n      return () => {\n        circle.setMap(null)\n      }\n    }, [map, circle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(circle)\n    }, [circle, onCreate])\n\n    useLayoutEffect(() => {\n      if (circle) circle.setPosition(circleCenter)\n    }, [circle, circleCenter])\n\n    useLayoutEffect(() => {\n      circle.setRadius(radius)\n    }, [circle, radius])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      circle.setZIndex(zIndex)\n    }, [circle, zIndex])\n\n    useLayoutEffect(() => {\n      circle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      circle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(circle, \"mouseover\", onMouseover)\n    useKakaoEvent(circle, \"mouseout\", onMouseout)\n    useKakaoEvent(circle, \"mousemove\", onMousemove)\n    useKakaoEvent(circle, \"mousedown\", onMousedown)\n    useKakaoEvent(circle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Circle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolylineProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * 화살표 여부\n   */\n  endArrow?: boolean\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polyline) => void\n}\n\n/**\n * Map 상에 폴리라인을 그립니다.\n */\nconst Polyline = React.forwardRef<kakao.maps.Polyline, PolylineProps>(\n  (\n    {\n      path,\n      endArrow,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polyline`)\n\n    const polyLinePath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polyline = useMemo(() => {\n      return new kakao.maps.Polyline({\n        path: polyLinePath,\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polyline, [polyline])\n\n    useLayoutEffect(() => {\n      polyline.setMap(map)\n      return () => polyline.setMap(null)\n    }, [map, polyline])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polyline)\n    }, [polyline, onCreate])\n\n    useLayoutEffect(() => {\n      polyline.setOptions({\n        endArrow,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polyline,\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polyline.setPath(polyLinePath)\n    }, [polyline, polyLinePath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polyline.setZIndex(zIndex)\n    }, [polyline, zIndex])\n\n    useKakaoEvent(polyline, \"mouseover\", onMouseover)\n    useKakaoEvent(polyline, \"mouseout\", onMouseout)\n    useKakaoEvent(polyline, \"mousemove\", onMousemove)\n    useKakaoEvent(polyline, \"mousedown\", onMousedown)\n    useKakaoEvent(polyline, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polyline\n","import React, { useLayoutEffect, useImperativeHandle, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolygonProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polygon) => void\n}\n\n/**\n * Map 상에 다각형을 그립니다.\n */\nconst Polygon = React.forwardRef<kakao.maps.Polygon, PolygonProps>(\n  (\n    {\n      path,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Polygon`)\n\n    const polygonPath = useMemo(() => {\n      if ((path as LatLng[]).every((v) => v instanceof Array)) {\n        return (path as LatLng[][]).map((v) => {\n          return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n        })\n      }\n      return (path as LatLng[]).map((v) => {\n        return new kakao.maps.LatLng(v.lat, v.lng)\n      })\n    }, [path])\n\n    const polygon = useMemo(() => {\n      return new kakao.maps.Polygon({\n        path: polygonPath,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => polygon, [polygon])\n\n    useLayoutEffect(() => {\n      polygon.setMap(map)\n      return () => polygon.setMap(null)\n    }, [map, polygon])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(polygon)\n    }, [polygon, onCreate])\n\n    useLayoutEffect(() => {\n      polygon.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      polygon,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      polygon.setPath(polygonPath)\n    }, [polygon, polygonPath])\n\n    useLayoutEffect(() => {\n      if (zIndex) polygon.setZIndex(zIndex)\n    }, [polygon, zIndex])\n\n    useKakaoEvent(polygon, \"mouseover\", onMouseover)\n    useKakaoEvent(polygon, \"mouseout\", onMouseout)\n    useKakaoEvent(polygon, \"mousemove\", onMousemove)\n    useKakaoEvent(polygon, \"mousedown\", onMousedown)\n    useKakaoEvent(polygon, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Polygon\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface RectangleProps {\n  bounds: {\n    sw: LatLng\n    ne: LatLng\n  }\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Rectangle) => void\n}\n\n/**\n * Map 상에 사각형을 그립니다.\n */\nconst Rectangle = React.forwardRef<kakao.maps.Rectangle, RectangleProps>(\n  (\n    {\n      bounds,\n      onClick,\n      onMousedown,\n      onMousemove,\n      onMouseout,\n      onMouseover,\n      onCreate,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      zIndex,\n    },\n    ref\n  ) => {\n    const map = useMap(`Rectangle`)\n\n    const rectangleBounds = useMemo(() => {\n      return new kakao.maps.LatLngBounds(\n        new kakao.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n        new kakao.maps.LatLng(bounds.ne.lat, bounds.ne.lng)\n      )\n    }, [bounds])\n\n    const rectangle = useMemo(() => {\n      return new kakao.maps.Rectangle({\n        bounds: rectangleBounds,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => rectangle, [rectangle])\n\n    useLayoutEffect(() => {\n      rectangle.setMap(map)\n      return () => rectangle.setMap(null)\n    }, [map, rectangle])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(rectangle)\n    }, [rectangle, onCreate])\n\n    useLayoutEffect(() => {\n      rectangle.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      rectangle,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useLayoutEffect(() => {\n      rectangle.setBounds(rectangleBounds)\n    }, [rectangle, rectangleBounds])\n\n    useLayoutEffect(() => {\n      if (zIndex) rectangle.setZIndex(zIndex)\n    }, [rectangle, zIndex])\n\n    useKakaoEvent(rectangle, \"mouseover\", onMouseover)\n    useKakaoEvent(rectangle, \"mouseout\", onMouseout)\n    useKakaoEvent(rectangle, \"mousemove\", onMousemove)\n    useKakaoEvent(rectangle, \"mousedown\", onMousedown)\n    useKakaoEvent(rectangle, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Rectangle\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface EllipseProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 미터 단위의 x축 반지름\n   */\n  rx: number\n\n  /**\n   * 미터 단위의 y축 반지름\n   */\n  ry: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n\n  /**\n   * 타원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 타원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 타원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Ellipse) => void\n}\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse = React.forwardRef<kakao.maps.Ellipse, EllipseProps>(\n  (\n    {\n      center,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n      onMouseover,\n      onMouseout,\n      onMousemove,\n      onMousedown,\n      onClick,\n      onCreate,\n    },\n    ref\n  ) => {\n    const map = useMap(`Ellipse`)\n\n    const ellipseCenter = useMemo(() => {\n      return new kakao.maps.LatLng(center.lat, center.lng)\n    }, [center.lat, center.lng])\n\n    const ellipse = useMemo(() => {\n      return new kakao.maps.Ellipse({\n        center: ellipseCenter,\n        rx,\n        ry,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n        zIndex,\n      })\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useImperativeHandle(ref, () => ellipse, [ellipse])\n\n    useLayoutEffect(() => {\n      ellipse.setMap(map)\n\n      return () => {\n        ellipse.setMap(null)\n      }\n    }, [map, ellipse])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(ellipse)\n    }, [ellipse, onCreate])\n\n    useLayoutEffect(() => {\n      if (ellipse) ellipse.setPosition(ellipseCenter)\n    }, [ellipse, ellipseCenter])\n\n    useLayoutEffect(() => {\n      ellipse.setRadius(rx, ry)\n    }, [ellipse, rx, ry])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      ellipse.setZIndex(zIndex)\n    }, [ellipse, zIndex])\n\n    useLayoutEffect(() => {\n      ellipse.setOptions({\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeOpacity,\n        strokeStyle,\n        strokeWeight,\n      })\n    }, [\n      ellipse,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    ])\n\n    useKakaoEvent(ellipse, \"mouseover\", onMouseover)\n    useKakaoEvent(ellipse, \"mouseout\", onMouseout)\n    useKakaoEvent(ellipse, \"mousemove\", onMousemove)\n    useKakaoEvent(ellipse, \"mousedown\", onMousedown)\n    useKakaoEvent(ellipse, \"click\", onClick)\n\n    return null\n  }\n)\n\nexport default Ellipse\n","import React, { useImperativeHandle, useLayoutEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface AbstractOverlayProps {\n  /**\n   * AbstractOverlay에서 필요한 `onAdd` 함수를 구현 합니다.\n   * 위치를 재조정할 필요가 있을 때 호출된다.\n   * 이 함수 내에서 엘리먼트의 위치를 잡아주어야 한다.\n   *\n   * 이때 arrow 함수가 아닌 일반 funtion으로 하여 this 바인딩이 되도록 하여 AbstractOverlay를 상속 받은 객체에 접근하여 필요 기능을 정의 합니다.\n   * ```tsx\n   * const panel = (this as kakao.maps.AbstractOverlay).getPanels().overlayLayer\n   * panel.appendChild(node.current)\n   * ```\n   */\n  draw: () => void\n  /**\n   * 지도에 올릴 때 호출된다.\n   * setMap(map) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 생성된 `DOM` 객체를 MapPanels에 자식 노드로 넣어주도록 한다.\n   *\n   * ```tsx\n   * var projection = this.getProjection()\n   * var point = projection.pointFromCoords(positionLatlng)\n   * var width = node.current.offsetWidth\n   * var height = node.current.offsetHeight\n   *\n   * console.log(point, width, height)\n   *\n   * node.current.style.left = point.x - width / 2 + \"px\"\n   * node.current.style.top = point.y - height / 2 + \"px\"\n   * ```\n   */\n  onAdd: () => void\n\n  /**\n   * 지도에서 제거할 때 호출된다.\n   * setMap(null) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 MapPanels에 자식 노드로 넣어준 엘리먼트를 제거하도록 한다.\n   *\n   * ```tsx\n   * this.node.parentNode.removeChild(this.node);\n   * ```\n   */\n  onRemove: () => void\n\n  /**\n   * 생성된 kakao.maps.AbstractOverlay 객체를 받을 수 있는 CallBack 함수 입니다.\n   */\n  onCreate?: (target: kakao.maps.AbstractOverlay) => void\n}\n\n/**\n * `API` 사용자가 직접 정의할 수 있는 오버레이.\n * AbstractOverlay를 상속 받아 사용할 객체를 생성하고 prototype을 연결해 준다.\n * 온전히 동작하는 오버레이를 만들고자 한다면 3가지 인터페이스 메소드( onAdd, draw, onRemove )를 구현해야 한다.\n *\n * 해당 Component 내부에서 `ReactAbstractOveraly` class를 만들어 `onAdd`, `draw`, `onRemove` 를 연결한 후 React Life Cycle에 맞춰 `setMap` 를 자동으로 호출 합니다.\n *\n * *경고* `draw`, `onAdd`, `onRemove` 의 경우 반드시 익명함수가 **아닌** 형태로 만들어서 전달해야 합니다.\n * `this.~` 를 통한 접근이 가능하니 해당 부분을 이용해서 구현 해주세요!\n *\n * ### Example Code\n *\n * ```jsx live\n * function () {\n *  const TooltipMarker = ({\n *    position,\n *  }) => {\n *    const node = useRef(document.createElement(\"div\"))\n *\n *    const positionLatlng = useMemo(() => {\n *      return new kakao.maps.LatLng(position.lat, position.lng)\n *    }, [position.lat, position.lng])\n *\n *    function onAdd() {\n *      const panel = this.getPanels()\n *        .overlayLayer\n *      panel.appendChild(node.current)\n *    }\n *\n *    function onRemove() {\n *      node.current.parentNode.removeChild(node.current)\n *    }\n *\n *    function draw() {\n *      var projection = this.getProjection()\n *      var point = projection.pointFromCoords(positionLatlng)\n *      var width = node.current.offsetWidth\n *      var height = node.current.offsetHeight\n *\n *      console.log(point, width, height)\n *\n *      node.current.style.left = point.x - width / 2 + \"px\"\n *      node.current.style.top = point.y - height / 2 + \"px\"\n *    }\n *\n *    useEffect(() => {\n *      node.current.style.position = \"absolute\"\n *      node.current.style.whiteSpace = \"nowrap\"\n *    }, [])\n *\n *    return (\n *      <>\n *        <AbstractOverlay onAdd={onAdd} onRemove={onRemove} draw={draw} />\n *        {ReactDOM.createPortal(\n *          <div\n *            style={{\n *              color: \"#000\",\n *              backgroundColor: \"#fff\",\n *              padding: \"5px\",\n *              borderRadius: \"15px\",\n *            }}\n *          >\n *            Hello Marker!\n *          </div>,\n *          node.current\n *        )}\n *      </>\n *    )\n *  }\n *\n *  return (\n *    <>\n *      <Map // 지도를 표시할 Container\n *        center={{\n *          // 지도의 중심좌표\n *          lat: 37.54699,\n *          lng: 127.09598,\n *        }}\n *        style={{\n *          // 지도의 크기\n *          width: \"100%\",\n *          height: \"450px\",\n *        }}\n *        level={3} // 지도의 확대 레벨\n *      >\n *        <TooltipMarker\n *          position={{\n *            lat: 37.54699,\n *            lng: 127.09598,\n *          }}\n *        />\n *      </Map>\n *    </>\n *  )\n *}\n * ```\n */\nconst AbstractOverlay = React.forwardRef<\n  kakao.maps.AbstractOverlay,\n  AbstractOverlayProps\n>(({ draw, onAdd, onRemove, onCreate }, ref) => {\n  const map = useMap()\n\n  const reactAbstractOverlay = useMemo(() => {\n    class ReactAbstractOveraly extends kakao.maps.AbstractOverlay {\n      constructor(draw: () => void, onAdd: () => void, onRemove: () => void) {\n        super()\n        this.draw = draw\n        this.onAdd = onAdd\n        this.onRemove = onRemove\n      }\n    }\n    const overlay = new ReactAbstractOveraly(draw, onAdd, onRemove)\n    return overlay\n  }, [draw, onAdd, onRemove])\n\n  useImperativeHandle(ref, () => reactAbstractOverlay, [reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    reactAbstractOverlay.setMap(map)\n\n    return () => {\n      reactAbstractOverlay.setMap(null)\n    }\n  }, [map, reactAbstractOverlay])\n\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(reactAbstractOverlay)\n  }, [reactAbstractOverlay, onCreate])\n\n  return null\n})\n\nexport default AbstractOverlay\n","import React, { useImperativeHandle, useRef, useState } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport { PolymorphicComponentProps, PolymorphicComponentPropsWithOutRef } from \"../types\"\nimport { Loader } from \"../util/kakaoMapApiLoader\"\n\nexport const KakaoRoadviewContext = React.createContext<kakao.maps.Roadview>(\n  undefined as unknown as kakao.maps.Roadview\n)\n\nexport interface RoadviewProps {\n  /**\n   * 중심으로 설정할 위치 입니다.\n   * 해당 lat와 lng에 해당하는 radius범위 안에서 가장가까운 Roadview을 선택합니다.\n   * 만약 없다면 lat, lng로 설정 됩니다.\n   */\n  position: {\n    lat: number\n    lng: number\n    radius: number\n  }\n\n  /**\n   * 로드뷰 시작 지역의 고유 아이디 값.\n   */\n  panoId?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값.\n   */\n  panoX?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값.\n   */\n  panoY?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수평 각. 0이 정북방향. (0_360)\n   */\n  pan?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수직 각.(-90_90)\n   */\n  tilt?: number\n\n  /**\n   * 로드뷰 줌 초기값.(-3_3)\n   */\n  zoom?: number\n\n  /**\n   * 로드뷰 생성후 해당 객체를 전달하는 callback.\n   */\n  onCreate?: (roadview: kakao.maps.Roadview) => void\n\n  /**\n   * 로드뷰가 초기화를 끝내면 발생한다.\n   */\n  onInit?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 파노라마 ID가 바뀌면 발생한다.\n   */\n  onPanoidChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 시점이 바뀌면 발생한다.\n   */\n  onViewpointChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 지도 좌표가 바뀌면 발생한다.\n   */\n  onPositionChanged?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * getNearestPanoId 동작 실패시 호출 합니다.\n   */\n  onErrorGetNearestPanoId?: (target: kakao.maps.Roadview) => void\n}\n\ntype RoadviewComponent = <T extends React.ElementType = \"div\">(\n  props: PolymorphicComponentPropsWithOutRef<T, RoadviewProps>\n) => React.ReactElement | null\n/**\n * Roadview를 Roadview를 생성하는 컴포넌트 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `Roadview` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Roadview: RoadviewComponent = React.forwardRef(\n  <T extends React.ElementType = \"div\">(\n    {\n      as,\n      children,\n      position,\n      pan,\n      panoId,\n      panoX,\n      panoY,\n      tilt,\n      zoom,\n      onCreate,\n      onInit,\n      onPanoidChange,\n      onPositionChanged,\n      onViewpointChange,\n      onErrorGetNearestPanoId,\n      ...props\n    }: PolymorphicComponentProps<T, React.PropsWithChildren<RoadviewProps>>,\n    ref: React.ForwardedRef<kakao.maps.Roadview>\n  ) => {\n    const Container = as || \"div\"\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [roadview, setRoadview] = useState<kakao.maps.Roadview>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      Loader.isLoaded().then(setIsLoaded)\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!isLoaded) return\n\n      const RoadviewContainer = container.current\n\n      if (!RoadviewContainer) return\n\n      const kakaoRoadview = new kakao.maps.Roadview(RoadviewContainer, {\n        pan: pan,\n        panoId: panoId,\n        panoX: panoX,\n        panoY: panoY,\n        tilt: tilt,\n        zoom: zoom,\n      })\n\n      setRoadview(kakaoRoadview)\n\n      return () => {\n        RoadviewContainer.innerHTML = \"\"\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLoaded, panoX, panoY, zoom])\n\n    useImperativeHandle(ref, () => roadview!, [roadview])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview || !onCreate) return\n      onCreate(roadview)\n    }, [roadview, onCreate])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        panoId ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n\n      new kakao.maps.RoadviewClient().getNearestPanoId(\n        newPostion,\n        position.radius,\n        (panoId) => {\n          if (panoId === null && onErrorGetNearestPanoId) {\n            onErrorGetNearestPanoId(roadview)\n          } else {\n            roadview.setPanoId(panoId, newPostion)\n          }\n        }\n      )\n    }, [\n      roadview,\n      panoId,\n      position.lat,\n      position.lng,\n      position.radius,\n      onErrorGetNearestPanoId,\n    ])\n\n    useIsomorphicLayoutEffect(() => {\n      if (\n        !roadview ||\n        !panoId ||\n        panoId === roadview.getPanoId() ||\n        (roadview.getPosition().getLat() === position.lat &&\n          roadview.getPosition().getLng() === position.lng)\n      )\n        return\n\n      const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n      roadview.setPanoId(panoId, newPostion)\n    }, [roadview, panoId, position.lat, position.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!roadview) return\n\n      const prevViewpoint = roadview.getViewpoint()\n\n      if (prevViewpoint.pan === pan && prevViewpoint.tilt === tilt) return\n\n      if (pan) prevViewpoint.pan = pan\n      if (tilt) prevViewpoint.tilt = tilt\n      roadview.setViewpoint(prevViewpoint)\n    }, [roadview, pan, tilt])\n\n    useKakaoEvent(roadview, \"init\", (target) => {\n      setIsLoading(false)\n      if (onInit) onInit(target)\n    })\n    useKakaoEvent(roadview, \"panoid_changed\", onPanoidChange)\n    useKakaoEvent(roadview, \"viewpoint_changed\", onViewpointChange)\n    useKakaoEvent(roadview, \"position_changed\", onPositionChanged)\n\n    return (\n      <>\n        <Container ref={container} {...props} />\n        {roadview && !isLoading && (\n          <KakaoRoadviewContext.Provider value={roadview}>\n            {children}\n          </KakaoRoadviewContext.Provider>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Roadview\n","import { useContext } from \"react\"\nimport { KakaoRoadviewContext } from \"../components/Roadview\"\n\n/**\n * kakao roadview 객체를 가져오는 hook 입니다.\n * Roadview 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useRoadview = (componentName?: string) => {\n  const kakaoRoadview = useContext(KakaoRoadviewContext)\n  if (!kakaoRoadview) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useRoadview\"\n      } must exist inside Roadview Component!`\n    )\n  }\n\n  return kakaoRoadview\n}\n\nexport default useRoadview\n","import React, {\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface CustomOverlayRoadviewProps {\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰상에서 커스텀 오버레이의 높이(위치)를 지정한다.\n   * 단위는 m(미터)이며 현재 로드뷰의 바닥 높이를 기준으로 떨어져있는 높이를 말한다.\n   */\n  altitude?: number\n\n  /**\n   * 커스텀 오버레이의 가시반경을 설정한다.\n   * 로드뷰의 위치와 커스텀 오버레이의 위치 사이의 거리가 가시반경 이내일 경우에만 로드뷰상에 노출된다.\n   * 단위는 m(미터)이며 기본값은 500m이다.\n   */\n  range?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview = React.forwardRef<\n  kakao.maps.CustomOverlay,\n  React.PropsWithChildren<CustomOverlayRoadviewProps>\n>(\n  (\n    {\n      position,\n      children,\n      clickable,\n      xAnchor,\n      yAnchor,\n      zIndex,\n      altitude,\n      range,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`CustomOverlayRoadview`)\n    const container = useRef(document.createElement(\"div\"))\n\n    const overlayPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    const overlay = useMemo(() => {\n      const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n        clickable: clickable,\n        xAnchor: xAnchor,\n        yAnchor: yAnchor,\n        zIndex: zIndex,\n        position: overlayPosition,\n        content: container.current,\n      })\n      container.current.style.display = \"none\"\n      return KakaoCustomOverlay\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clickable, xAnchor, yAnchor])\n\n    useImperativeHandle(ref, () => overlay, [overlay])\n\n    useLayoutEffect(() => {\n      if (!roadview) return\n\n      overlay.setMap(roadview)\n\n      return () => {\n        overlay.setMap(null)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [overlay, roadview])\n\n    useLayoutEffect(() => {\n      if (onCreate) onCreate(overlay)\n    }, [overlay, onCreate])\n\n    useLayoutEffect(() => {\n      overlay.setPosition(overlayPosition)\n    }, [overlay, overlayPosition])\n\n    useLayoutEffect(() => {\n      if (!zIndex) return\n      overlay.setZIndex(zIndex)\n    }, [overlay, zIndex])\n\n    useLayoutEffect(() => {\n      if (!altitude) return\n      overlay.setAltitude(altitude)\n    }, [overlay, altitude])\n\n    useLayoutEffect(() => {\n      if (!range) return\n      overlay.setRange(range)\n    }, [overlay, range])\n\n    return (\n      container.current.parentElement &&\n      ReactDOM.createPortal(children, container.current.parentElement)\n    )\n  }\n)\n\nexport default CustomOverlayRoadview\n","import React, { useMemo } from \"react\"\nimport useRoadview from \"../hooks/useRoadview\"\nimport Marker from \"./Marker\"\n\nexport interface RoadviewMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewMarker = React.forwardRef<\n  kakao.maps.Marker,\n  React.PropsWithChildren<RoadviewMarkerProps>\n>(\n  (\n    {\n      image,\n      position,\n      children,\n      altitude,\n      clickable,\n      infoWindowOptions,\n      onClick,\n      onDragEnd,\n      onDragStart,\n      onMouseOut,\n      onMouseOver,\n      onCreate,\n      opacity,\n      range,\n      title,\n      zIndex,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewMarker`)\n\n    const markerImage = useMemo(() => {\n      return (\n        image &&\n        new kakao.maps.MarkerImage(\n          image.src,\n          new kakao.maps.Size(image.size.width, image.size.height),\n          {\n            alt: image.options?.alt,\n            coords: image.options?.coords,\n            offset:\n              image.options?.offset &&\n              new kakao.maps.Point(\n                image.options?.offset.x,\n                image.options?.offset.y\n              ),\n            shape: image.options?.shape,\n            spriteOrigin:\n              image.options?.spriteOrigin &&\n              new kakao.maps.Point(\n                image.options?.spriteOrigin.x,\n                image.options?.spriteOrigin.y\n              ),\n            spriteSize:\n              image.options?.spriteSize &&\n              new kakao.maps.Size(\n                image.options?.spriteSize.width,\n                image.options?.spriteSize.height\n              ),\n          }\n        )\n      )\n    }, [image])\n\n    const markerPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      if (\"x\" in position) {\n        return new kakao.maps.Coords(position.x, position.y).toLatLng()\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.x,\n      // @ts-ignore\n      position.y,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position?.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <Marker\n        map={roadview}\n        position={markerPosition}\n        image={markerImage}\n        altitude={altitude}\n        clickable={clickable}\n        infoWindowOptions={infoWindowOptions}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        onCreate={onCreate}\n        opacity={opacity}\n        range={range}\n        title={title}\n        zIndex={zIndex}\n        ref={ref}\n      >\n        {children}\n      </Marker>\n    )\n  }\n)\n\nexport default RoadviewMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface RoadviewInfoWindowProps {\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewInfoWindow = React.forwardRef<\n  kakao.maps.InfoWindow,\n  React.PropsWithChildren<RoadviewInfoWindowProps>\n>(\n  (\n    {\n      position,\n      children,\n      altitude,\n      disableAutoPan,\n      range,\n      removable,\n      zIndex,\n      onCreate,\n    },\n    ref\n  ) => {\n    const roadview = useRoadview(`RoadviewInfoWindow`)\n    const infoPosition = useMemo(() => {\n      if (\"lat\" in position) {\n        return new kakao.maps.LatLng(position.lat, position.lng)\n      }\n      return new kakao.maps.Viewpoint(\n        position.pan,\n        position.tilt,\n        position.zoom,\n        position.panoId\n      )\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, [\n      // @ts-ignore\n      position.lat,\n      // @ts-ignore\n      position.lng,\n      // @ts-ignore\n      position.pan,\n      // @ts-ignore\n      position.tilt,\n      // @ts-ignore\n      position.zoom,\n      // @ts-ignore\n      position.panoId,\n    ])\n    /* eslint-enable react-hooks/exhaustive-deps */\n\n    return (\n      <InfoWindow\n        altitude={altitude}\n        disableAutoPan={disableAutoPan}\n        range={range}\n        removable={removable}\n        zIndex={zIndex}\n        map={roadview}\n        position={infoPosition}\n        onCreate={onCreate}\n        ref={ref}\n      >\n        {children}\n      </InfoWindow>\n    )\n  }\n)\n\nexport default RoadviewInfoWindow\n","import React, {\n  ReactNode,\n  Ref,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport const DrawingManagerContext =\n  React.createContext<kakao.maps.drawing.DrawingManager>(\n    undefined as unknown as kakao.maps.drawing.DrawingManager\n  )\n\nexport type DrawingManagerProps<\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n> = Partial<kakao.maps.drawing.OverlayOptions> &\n  Pick<kakao.maps.drawing.OverlayOptions, `${T}Options`> & {\n    /**\n     * 마우스 오버 시 가이드 툴팁 표시 여부. ‘draw’, ‘drag’, ‘edit’ 3가지를 지정할 수 있다 (기본값: 모두 표시 안함)\n     * 예를들어 [‘draw’]로 설정하면 객체를 그릴때 가이드 툴팁이 표시된다\n     */\n    guideTooltip?: Array<\"draw\" | \"drag\" | \"edit\">\n    /**\n     * 사용할 그리기 요소 지정한다 (기본값: 모든 그리기 요소)\n     */\n    drawingMode?: Array<T>\n\n    /**\n     * 그리기 요소를 선택하면 발생한다.\n     */\n    onSelect?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawstart?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 시작 후, 마우스를 이동하면 발생한다.\n     */\n    onDraw?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 시작하면 발생한다.\n     */\n    onDrawend?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 다음 단계 그리기를 하면 발생한다. (Polyline, Polygon, Arrow 한정)\n     */\n    onDrawnext?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기를 취소하면 발생한다.\n     */\n    onCancle?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소를 삭제하면 발생한다.\n     */\n    onRemove?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>,\n      event: kakao.maps.drawing.MouseEvent\n    ) => void\n\n    /**\n     * 그리기 요소들의 상태가 변경되면 발생한다.\n     * 각 요소의 생성/수정/이동/삭제 동작과 undo 또는 redo 함수 호출이 이에 해당한다.\n     */\n    onStateChanged?: (\n      drawingManager: kakao.maps.drawing.DrawingManager<T>\n    ) => void\n\n    /**\n     * 객체 생성후 해당 이벤트가 발생합니다.\n     */\n    onCreate?: (drawingManager: kakao.maps.drawing.DrawingManager<T>) => void\n\n    /**\n     * Toolbox에 대해서 추가할 때 사용합니다.\n     */\n    children?: ReactNode\n  }\n\nfunction useDrawingManagerEvent<T extends kakao.maps.drawing.OverlayType>(\n  target: kakao.maps.drawing.DrawingManager<T> | undefined,\n  type:\n    | \"drawstart\"\n    | \"draw\"\n    | \"drawend\"\n    | \"drawnext\"\n    | \"select\"\n    | \"cancel\"\n    | \"remove\"\n    | \"state_changed\",\n  callback:\n    | ((target: kakao.maps.drawing.DrawingManager<T>, ...args: any) => void)\n    | undefined\n) {\n  useLayoutEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    // @ts-ignore\n    target.addListener(type, wrapCallback)\n  }, [callback, target, type])\n}\n\n/**\n * 그리기 관리자 객체를 생성하는 컴포넌트 입니다.\n *\n * 초기 생성자에 필요한 Props는 최초 렌더링에만 반영을 하고 이후에는 값이 변경되더라도 적용되지 않습니다.\n *\n * > `on~` 시리즈를 제외한 props는 초기 렌더링 이후 작동 안함\n *\n * DrawingManager는 이전 Map, Marker, CustomOverlay와 달리 Props를 통해 제어를 하는 것이 아닌 직접 DrawingManager 객체를 이용하여 제어를 해야 합니다.\n *\n * 이를 위해 ref 객체를 통해 `DrawingManager` 객체를 접근 할 수 있으며, 이를 활용하여 여러 이벤트 처리 및 제어가 가능합니다.\n *\n * TypeScript 사용자를 위한 `Generic`이 적용되어 있으므로, `ref` 객체에 대한 typing 및 `drawingMode`에 대해 확실하게 정의해야 합니다.\n *\n * ```tsx\n * const Main = () => {\n *     const managerRef = useRef<kakao.maps.drawing.DrawingManager<\n *       kakao.maps.drawing.OverlayType.POLYLINE\n *     >>(null);\n *\n *     function selectOverlay(type: string) {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={(e) => {\n *           selectOverlay('POLYLINE')\n *         }}>선</button>\n *       </>\n *     )\n *   }\n * ```\n *\n * > JavaScript 코드 버전\n *\n * ```jsx live\n * function() {\n *   const Main = () => {\n *     const managerRef = useRef(null);\n *\n *     function selectOverlay() {\n *       const manager = managerRef.current;\n *       manager.cancel();\n *       manager.select(kakao.maps.drawing.OverlayType.POLYLINE);\n *     }\n *\n *     return (\n *       <>\n *         <Map\n *           center={{\n *             // 지도의 중심좌표\n *             lat: 33.450701,\n *             lng: 126.570667,\n *           }}\n *           style={{\n *             width: \"100%\",\n *             height: \"450px\",\n *           }}\n *           level={3} // 지도의 확대 레벨\n *         >\n *           <DrawingManager\n *             ref={managerRef}\n *             drawingMode={[\n *               kakao.maps.drawing.OverlayType.POLYLINE,\n *             ]}\n *             guideTooltip={['draw', 'drag', 'edit']}\n *             polylineOptions={{\n *               draggable: true,\n *               removable: true,\n *               editable: true\n *             }}\n *           />\n *         </Map>\n *         <button onClick={selectOverlay}>선</button>\n *       </>\n *     )\n *   }\n *   return (<Main />)\n * }\n * ```\n */\nconst DrawingManager = React.forwardRef(function <\n  T extends kakao.maps.drawing.OverlayType\n>(\n  {\n    arrowOptions,\n    circleOptions,\n    ellipseOptions,\n    markerOptions,\n    polygonOptions,\n    polylineOptions,\n    rectangleOptions,\n    drawingMode,\n    guideTooltip,\n    onSelect,\n    onDrawstart,\n    onDraw,\n    onDrawend,\n    onDrawnext,\n    onCancle,\n    onRemove,\n    onStateChanged,\n    onCreate,\n    children,\n  }: DrawingManagerProps<T>,\n  ref: Ref<kakao.maps.drawing.DrawingManager<T>>\n) {\n  const map = useMap(\"Toolbox\")\n\n  const drawingManager = useMemo(\n    () => {\n      if (!window.kakao.maps.drawing) {\n        console.warn(\n          \"drawing 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n        )\n        return\n      }\n\n      return new kakao.maps.drawing.DrawingManager({\n        // @ts-ignore\n        map,\n        drawingMode,\n        guideTooltip,\n        arrowOptions,\n        circleOptions,\n        ellipseOptions,\n        markerOptions,\n        polygonOptions,\n        polylineOptions,\n        rectangleOptions,\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n  useImperativeHandle(ref, () => drawingManager!, [drawingManager])\n\n  useLayoutEffect(() => {\n    drawingManager && onCreate && onCreate(drawingManager)\n  }, [drawingManager, onCreate])\n\n  useDrawingManagerEvent(drawingManager, \"select\", onSelect)\n  useDrawingManagerEvent(drawingManager, \"drawstart\", onDrawstart)\n  useDrawingManagerEvent(drawingManager, \"draw\", onDraw)\n  useDrawingManagerEvent(drawingManager, \"drawend\", onDrawend)\n  useDrawingManagerEvent(drawingManager, \"drawnext\", onDrawnext)\n  useDrawingManagerEvent(drawingManager, \"cancel\", onCancle)\n  useDrawingManagerEvent(drawingManager, \"remove\", onRemove)\n  useDrawingManagerEvent(drawingManager, \"state_changed\", onStateChanged)\n\n  if (!drawingManager) return null\n\n  return (\n    <DrawingManagerContext.Provider value={drawingManager}>\n      {children}\n    </DrawingManagerContext.Provider>\n  )\n}) as unknown as <\n  T extends kakao.maps.drawing.OverlayType = kakao.maps.drawing.OverlayType\n>(\n  _props: DrawingManagerProps<T> &\n    React.RefAttributes<kakao.maps.drawing.DrawingManager<T>>\n) => null\n\nexport default DrawingManager\n","import React, {\n  Ref,\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport { DrawingManagerContext } from \"./DrawingManager\"\n\nexport type ToolboxProps = {\n  /**\n   * Toolbox의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 그리기 툴박스를 생성합니다.\n *\n * 해당 컴포넌트는 반드시 `DrawingManager` 컴포넌트의 자식으로 존재해야 합니다.\n */\nconst Toolbox = React.forwardRef(function (\n  { position }: ToolboxProps,\n  ref: Ref<kakao.maps.drawing.Toolbox>\n) {\n  position = position || kakao.maps.ControlPosition.TOP\n\n  const map = useMap(\"Toolbox\")\n  const drawingmanager = useContext(DrawingManagerContext)\n\n  if (!drawingmanager) {\n    throw new Error(\"Toolbox must exist inside DrawingManager Component!`\")\n  }\n\n  const toolbox = useMemo(\n    () =>\n      new kakao.maps.drawing.Toolbox({\n        drawingManager: drawingmanager,\n      }),\n    [drawingmanager]\n  )\n  useImperativeHandle(ref, () => toolbox, [toolbox])\n\n  useLayoutEffect(() => {\n    const element = toolbox.getElement()\n    map.addControl(element, position!)\n    return () => {\n      map.removeControl(element)\n    }\n  }, [map, toolbox, position])\n\n  return null\n})\n\nexport default Toolbox\n","import React, { useRef, useState, useImperativeHandle } from \"react\"\nimport useIsomorphicLayoutEffect from \"../hooks/useIsomorphicLayoutEffect\"\n\nexport interface StaticMapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n\n  /**\n   * 확대 수준\n   * @default 3\n   */\n  level?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 이미지 지도에 표시할 마커 또는 마커 배열\n   */\n  marker:\n    | boolean\n    | {\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position?: {\n          lat: number\n          lng: number\n        }\n      }\n    | Array<{\n        /**\n         * 마커 tooltip에 표시될 내용\n         */\n        text?: string\n        /**\n         * 마커 포지션\n         */\n        position: {\n          lat: number\n          lng: number\n        }\n      }>\n  /**\n   * StaticMap 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.StaticMap) => void\n}\n\nconst StaticMap = React.forwardRef<kakao.maps.StaticMap, StaticMapProps>(\n  (\n    {\n      id = \"react-kakao-maps-sdk-staticmap-container\",\n      style,\n      className,\n      center,\n      marker,\n      level,\n      mapTypeId,\n      onCreate,\n    },\n    ref\n  ) => {\n    const [map, setMap] = useState<kakao.maps.StaticMap>()\n    const container = useRef<HTMLDivElement>(null)\n\n    useIsomorphicLayoutEffect(() => {\n      if (!window.kakao) {\n        console.warn(\n          \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n        )\n        return\n      }\n\n      const mapContainer = container.current\n      if (!mapContainer) return\n\n      kakao.maps.load(() => {\n        const _marker = (() => {\n          if (Array.isArray(marker)) {\n            return marker.map((mk) => {\n              return {\n                ...mk,\n                position: new kakao.maps.LatLng(\n                  mk.position.lat,\n                  mk.position.lng\n                ),\n              }\n            })\n          }\n          if (typeof marker === \"object\") {\n            if (!!marker.position) {\n              return {\n                ...marker,\n                position: new kakao.maps.LatLng(\n                  marker.position.lat,\n                  marker.position.lng\n                ),\n              }\n            }\n            return marker as { text: string }\n          }\n          return marker\n        })()\n        const kakaoStaticMap = new kakao.maps.StaticMap(mapContainer, {\n          center: new kakao.maps.LatLng(center.lat, center.lng),\n          level,\n          mapTypeId,\n          marker: _marker,\n        })\n\n        setMap(kakaoStaticMap)\n      })\n    }, [JSON.stringify(marker)])\n\n    useImperativeHandle(ref, () => map!, [map])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map) map.setCenter(new kakao.maps.LatLng(center.lat, center.lng))\n    }, [map, center.lat, center.lng])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && level) map.setLevel(level)\n    }, [map, level])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && mapTypeId) map.setMapTypeId(mapTypeId)\n    }, [map, mapTypeId])\n\n    useIsomorphicLayoutEffect(() => {\n      if (map && onCreate) onCreate(map)\n    }, [map, onCreate])\n\n    return (\n      <div id={id} style={style} className={className} ref={container}></div>\n    )\n  }\n)\n\nexport default StaticMap\n","import { useEffect, useMemo, useState } from \"react\"\nimport { Loader, LoaderOptions } from \"../util/kakaoMapApiLoader\"\n\n/**\n * Kakao Map Api를 injection 합니다.\n *\n * 해당 hook은 cleanup 시점에도 Kakao Map Api를 제거 하지 않고, 동일한 hook를 여러 위치에서 호출 하더라도 최초 한번만 injection 됩니다.\n */\nconst useInjectKakaoMapApi = (options: LoaderOptions) => {\n  const [state, setState] = useState<{\n    loading: boolean\n    error: ErrorEvent | undefined\n  }>({\n    loading: true,\n    error: undefined,\n  })\n\n  const loader = useMemo(\n    () => new Loader(options),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(options)]\n  )\n\n  useEffect(() => {\n    loader\n      .load()\n      .then(() =>\n        setState({\n          loading: false,\n          error: undefined,\n        })\n      )\n      .catch((error) =>\n        setState({\n          loading: false,\n          error: error,\n        })\n      )\n  }, [loader])\n\n  return state\n}\n\nexport default useInjectKakaoMapApi\n"]},"metadata":{},"sourceType":"module"}