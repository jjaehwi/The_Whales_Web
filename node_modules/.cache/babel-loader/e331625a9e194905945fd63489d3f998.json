{"ast":null,"code":"var _jsxFileName = \"/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/drone/gps.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// @mui material components\n// import Grid from \"@mui/material/Grid\";\n// import Card from \"@mui/material/Card\";\n// Material Dashboard 2 React components\n// import MDBox from \"components/MDBox\";\n// import MDTypography from \"components/MDTypography\";\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { useEffect, useState } from \"react\";\nimport MDBox from \"components/MDBox\"; // import DataTable from \"examples/Tables/DataTable\";\n// Data\n// import authorsTableData from \"layouts/drone/data/authorsTableData\";\n// import projectsTableData from \"layouts/drone/data/projectsTableData\";\n// import { NavLink } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GPS() {\n  _s();\n\n  const [state, setState] = useState({\n    center: {\n      lat: 33.450701,\n      lng: 126.570667\n    },\n    errMsg: null,\n    isLoading: true\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(position => {\n        setState(prev => ({ ...prev,\n          center: {\n            lat: position.coords.latitude,\n            // 위도\n            lng: position.coords.longitude // 경도\n\n          },\n          isLoading: false\n        }));\n      }, err => {\n        setState(prev => ({ ...prev,\n          errMsg: err.message,\n          isLoading: false\n        }));\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState(prev => ({ ...prev,\n        errMsg: \"geolocation을 사용할수 없어요..\",\n        isLoading: false\n      }));\n    }\n  }, []); // const { columns, rows } = authorsTableData();\n  // const { columns: pColumns, rows: pRows } = projectsTableData();\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uC704\\uB3C4 : \", state.center.lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [\" \\uACBD\\uB3C4 : \", state.center.lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GPS, \"Q8YNfsBvw87HMx9zQJ/PXIe7fvE=\");\n\n_c = GPS;\nexport default GPS;\n\nvar _c;\n\n$RefreshReg$(_c, \"GPS\");","map":{"version":3,"names":["DashboardLayout","DashboardNavbar","Footer","useEffect","useState","MDBox","GPS","state","setState","center","lat","lng","errMsg","isLoading","navigator","geolocation","getCurrentPosition","position","prev","coords","latitude","longitude","err","message"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/src/layouts/drone/gps.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// @mui material components\n// import Grid from \"@mui/material/Grid\";\n// import Card from \"@mui/material/Card\";\n\n// Material Dashboard 2 React components\n// import MDBox from \"components/MDBox\";\n// import MDTypography from \"components/MDTypography\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { useEffect, useState } from \"react\";\nimport MDBox from \"components/MDBox\";\n// import DataTable from \"examples/Tables/DataTable\";\n\n// Data\n// import authorsTableData from \"layouts/drone/data/authorsTableData\";\n// import projectsTableData from \"layouts/drone/data/projectsTableData\";\n// import { NavLink } from \"react-router-dom\";\n\nfunction GPS() {\n  const [state, setState] = useState({\n    center: {\n      lat: 33.450701,\n      lng: 126.570667,\n    },\n    errMsg: null,\n    isLoading: true,\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setState((prev) => ({\n            ...prev,\n            center: {\n              lat: position.coords.latitude, // 위도\n              lng: position.coords.longitude, // 경도\n            },\n            isLoading: false,\n          }));\n        },\n        (err) => {\n          setState((prev) => ({\n            ...prev,\n            errMsg: err.message,\n            isLoading: false,\n          }));\n        }\n      );\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState((prev) => ({\n        ...prev,\n        errMsg: \"geolocation을 사용할수 없어요..\",\n        isLoading: false,\n      }));\n    }\n  }, []);\n  // const { columns, rows } = authorsTableData();\n  // const { columns: pColumns, rows: pRows } = projectsTableData();\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <MDBox> 위도 : {state.center.lat}</MDBox>\n      <MDBox> 경도 : {state.center.lng}</MDBox>\n\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default GPS;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CACA;AAEA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;IACjCK,MAAM,EAAE;MACNC,GAAG,EAAE,SADC;MAENC,GAAG,EAAE;IAFC,CADyB;IAKjCC,MAAM,EAAE,IALyB;IAMjCC,SAAS,EAAE;EANsB,CAAD,CAAlC;EAQAV,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,CAACC,WAAd,EAA2B;MACzB;MACAD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;QACZT,QAAQ,CAAEU,IAAD,KAAW,EAClB,GAAGA,IADe;UAElBT,MAAM,EAAE;YACNC,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC,QADf;YACyB;YAC/BT,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBE,SAFf,CAE0B;;UAF1B,CAFU;UAMlBR,SAAS,EAAE;QANO,CAAX,CAAD,CAAR;MAQD,CAVH,EAWGS,GAAD,IAAS;QACPd,QAAQ,CAAEU,IAAD,KAAW,EAClB,GAAGA,IADe;UAElBN,MAAM,EAAEU,GAAG,CAACC,OAFM;UAGlBV,SAAS,EAAE;QAHO,CAAX,CAAD,CAAR;MAKD,CAjBH;IAmBD,CArBD,MAqBO;MACL;MACAL,QAAQ,CAAEU,IAAD,KAAW,EAClB,GAAGA,IADe;QAElBN,MAAM,EAAE,yBAFU;QAGlBC,SAAS,EAAE;MAHO,CAAX,CAAD,CAAR;IAKD;EACF,CA9BQ,EA8BN,EA9BM,CAAT,CATa,CAwCb;EACA;;EAEA,oBACE,QAAC,eAAD;IAAA,wBACE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAA,+BAAcN,KAAK,CAACE,MAAN,CAAaC,GAA3B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAA,+BAAcH,KAAK,CAACE,MAAN,CAAaE,GAA3B;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GApDQL,G;;KAAAA,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}