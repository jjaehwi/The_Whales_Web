{"ast":null,"code":"/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, function () {\n  'use strict';\n\n  var limit$2 = function limit$2(x, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return x < min ? min : x > max ? max : x;\n  };\n\n  var limit$1 = limit$2;\n\n  var clip_rgb$3 = function clip_rgb$3(rgb) {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n\n    for (var i = 0; i <= 3; i++) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n\n        rgb[i] = limit$1(rgb[i], 0, 255);\n      } else if (i === 3) {\n        rgb[i] = limit$1(rgb[i], 0, 1);\n      }\n    }\n\n    return rgb;\n  }; // ported from jQuery's $.type\n\n\n  var classToType = {};\n\n  for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n    var name = list$1[i$1];\n    classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n  }\n\n  var type$p = function type$p(obj) {\n    return classToType[Object.prototype.toString.call(obj)] || \"object\";\n  };\n\n  var type$o = type$p;\n\n  var unpack$B = function unpack$B(args, keyOrder) {\n    if (keyOrder === void 0) keyOrder = null; // if called with more than 3 arguments, we return the arguments\n\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n\n\n    if (type$o(args[0]) == 'object' && keyOrder) {\n      return keyOrder.split('').filter(function (k) {\n        return args[0][k] !== undefined;\n      }).map(function (k) {\n        return args[0][k];\n      });\n    } // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n\n\n    return args[0];\n  };\n\n  var type$n = type$p;\n\n  var last$4 = function last$4(args) {\n    if (args.length < 2) {\n      return null;\n    }\n\n    var l = args.length - 1;\n\n    if (type$n(args[l]) == 'string') {\n      return args[l].toLowerCase();\n    }\n\n    return null;\n  };\n\n  var PI$2 = Math.PI;\n  var utils = {\n    clip_rgb: clip_rgb$3,\n    limit: limit$2,\n    type: type$p,\n    unpack: unpack$B,\n    last: last$4,\n    PI: PI$2,\n    TWOPI: PI$2 * 2,\n    PITHIRD: PI$2 / 3,\n    DEG2RAD: PI$2 / 180,\n    RAD2DEG: 180 / PI$2\n  };\n  var input$h = {\n    format: {},\n    autodetect: []\n  };\n  var last$3 = utils.last;\n  var clip_rgb$2 = utils.clip_rgb;\n  var type$m = utils.type;\n  var _input = input$h;\n\n  var Color$D = function Color() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var me = this;\n\n    if (type$m(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    } // last argument could be the mode\n\n\n    var mode = last$3(args);\n    var autodetect = false;\n\n    if (!mode) {\n      autodetect = true;\n\n      if (!_input.sorted) {\n        _input.autodetect = _input.autodetect.sort(function (a, b) {\n          return b.p - a.p;\n        });\n        _input.sorted = true;\n      } // auto-detect format\n\n\n      for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n        var chk = list[i];\n        mode = chk.test.apply(chk, args);\n\n        if (mode) {\n          break;\n        }\n      }\n    }\n\n    if (_input.format[mode]) {\n      var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n\n      me._rgb = clip_rgb$2(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    } // add alpha channel\n\n\n    if (me._rgb.length === 3) {\n      me._rgb.push(1);\n    }\n  };\n\n  Color$D.prototype.toString = function toString() {\n    if (type$m(this.hex) == 'function') {\n      return this.hex();\n    }\n\n    return \"[\" + this._rgb.join(',') + \"]\";\n  };\n\n  var Color_1 = Color$D;\n\n  var chroma$k = function chroma$k() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(chroma$k.Color, [null].concat(args)))();\n  };\n\n  chroma$k.Color = Color_1;\n  chroma$k.version = '2.4.2';\n  var chroma_1 = chroma$k;\n  var unpack$A = utils.unpack;\n  var max$2 = Math.max;\n\n  var rgb2cmyk$1 = function rgb2cmyk$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$A(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var k = 1 - max$2(r, max$2(g, b));\n    var f = k < 1 ? 1 / (1 - k) : 0;\n    var c = (1 - r - k) * f;\n    var m = (1 - g - k) * f;\n    var y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  var rgb2cmyk_1 = rgb2cmyk$1;\n  var unpack$z = utils.unpack;\n\n  var cmyk2rgb = function cmyk2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$z(args, 'cmyk');\n    var c = args[0];\n    var m = args[1];\n    var y = args[2];\n    var k = args[3];\n    var alpha = args.length > 4 ? args[4] : 1;\n\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n\n    return [c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n    m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n    y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n    alpha];\n  };\n\n  var cmyk2rgb_1 = cmyk2rgb;\n  var chroma$j = chroma_1;\n  var Color$C = Color_1;\n  var input$g = input$h;\n  var unpack$y = utils.unpack;\n  var type$l = utils.type;\n  var rgb2cmyk = rgb2cmyk_1;\n\n  Color$C.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n  };\n\n  chroma$j.cmyk = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$C, [null].concat(args, ['cmyk'])))();\n  };\n\n  input$g.format.cmyk = cmyk2rgb_1;\n  input$g.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$y(args, 'cmyk');\n\n      if (type$l(args) === 'array' && args.length === 4) {\n        return 'cmyk';\n      }\n    }\n  });\n  var unpack$x = utils.unpack;\n  var last$2 = utils.last;\n\n  var rnd = function rnd(a) {\n    return Math.round(a * 100) / 100;\n  };\n  /*\n   * supported arguments:\n   * - hsl2css(h,s,l)\n   * - hsl2css(h,s,l,a)\n   * - hsl2css([h,s,l], mode)\n   * - hsl2css([h,s,l,a], mode)\n   * - hsl2css({h,s,l,a}, mode)\n   */\n\n\n  var hsl2css$1 = function hsl2css$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var hsla = unpack$x(args, 'hsla');\n    var mode = last$2(args) || 'lsa';\n    hsla[0] = rnd(hsla[0] || 0);\n    hsla[1] = rnd(hsla[1] * 100) + '%';\n    hsla[2] = rnd(hsla[2] * 100) + '%';\n\n    if (mode === 'hsla' || hsla.length > 3 && hsla[3] < 1) {\n      hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n      mode = 'hsla';\n    } else {\n      hsla.length = 3;\n    }\n\n    return mode + \"(\" + hsla.join(',') + \")\";\n  };\n\n  var hsl2css_1 = hsl2css$1;\n  var unpack$w = utils.unpack;\n  /*\n   * supported arguments:\n   * - rgb2hsl(r,g,b)\n   * - rgb2hsl(r,g,b,a)\n   * - rgb2hsl([r,g,b])\n   * - rgb2hsl([r,g,b,a])\n   * - rgb2hsl({r,g,b,a})\n   */\n\n  var rgb2hsl$3 = function rgb2hsl$3() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$w(args, 'rgba');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var l = (max + min) / 2;\n    var s, h;\n\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n\n    if (r == max) {\n      h = (g - b) / (max - min);\n    } else if (g == max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b == max) {\n      h = 4 + (r - g) / (max - min);\n    }\n\n    h *= 60;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    if (args.length > 3 && args[3] !== undefined) {\n      return [h, s, l, args[3]];\n    }\n\n    return [h, s, l];\n  };\n\n  var rgb2hsl_1 = rgb2hsl$3;\n  var unpack$v = utils.unpack;\n  var last$1 = utils.last;\n  var hsl2css = hsl2css_1;\n  var rgb2hsl$2 = rgb2hsl_1;\n  var round$6 = Math.round;\n  /*\n   * supported arguments:\n   * - rgb2css(r,g,b)\n   * - rgb2css(r,g,b,a)\n   * - rgb2css([r,g,b], mode)\n   * - rgb2css([r,g,b,a], mode)\n   * - rgb2css({r,g,b,a}, mode)\n   */\n\n  var rgb2css$1 = function rgb2css$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgba = unpack$v(args, 'rgba');\n    var mode = last$1(args) || 'rgb';\n\n    if (mode.substr(0, 3) == 'hsl') {\n      return hsl2css(rgb2hsl$2(rgba), mode);\n    }\n\n    rgba[0] = round$6(rgba[0]);\n    rgba[1] = round$6(rgba[1]);\n    rgba[2] = round$6(rgba[2]);\n\n    if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n      rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n      mode = 'rgba';\n    }\n\n    return mode + \"(\" + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + \")\";\n  };\n\n  var rgb2css_1 = rgb2css$1;\n  var unpack$u = utils.unpack;\n  var round$5 = Math.round;\n\n  var hsl2rgb$1 = function hsl2rgb$1() {\n    var assign;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$u(args, 'hsl');\n    var h = args[0];\n    var s = args[1];\n    var l = args[2];\n    var r, g, b;\n\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      var t3 = [0, 0, 0];\n      var c = [0, 0, 0];\n      var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var t1 = 2 * l - t2;\n      var h_ = h / 360;\n      t3[0] = h_ + 1 / 3;\n      t3[1] = h_;\n      t3[2] = h_ - 1 / 3;\n\n      for (var i = 0; i < 3; i++) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n\n      assign = [round$5(c[0] * 255), round$5(c[1] * 255), round$5(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2];\n    }\n\n    if (args.length > 3) {\n      // keep alpha channel\n      return [r, g, b, args[3]];\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var hsl2rgb_1 = hsl2rgb$1;\n  var hsl2rgb = hsl2rgb_1;\n  var input$f = input$h;\n  var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n  var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var round$4 = Math.round;\n\n  var css2rgb$1 = function css2rgb$1(css) {\n    css = css.toLowerCase().trim();\n    var m;\n\n    if (input$f.format.named) {\n      try {\n        return input$f.format.named(css);\n      } catch (e) {// eslint-disable-next-line\n      }\n    } // rgb(250,20,0)\n\n\n    if (m = css.match(RE_RGB)) {\n      var rgb = m.slice(1, 4);\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = +rgb[i];\n      }\n\n      rgb[3] = 1; // default alpha\n\n      return rgb;\n    } // rgba(250,20,0,0.4)\n\n\n    if (m = css.match(RE_RGBA)) {\n      var rgb$1 = m.slice(1, 5);\n\n      for (var i$1 = 0; i$1 < 4; i$1++) {\n        rgb$1[i$1] = +rgb$1[i$1];\n      }\n\n      return rgb$1;\n    } // rgb(100%,0%,0%)\n\n\n    if (m = css.match(RE_RGB_PCT)) {\n      var rgb$2 = m.slice(1, 4);\n\n      for (var i$2 = 0; i$2 < 3; i$2++) {\n        rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n      }\n\n      rgb$2[3] = 1; // default alpha\n\n      return rgb$2;\n    } // rgba(100%,0%,0%,0.4)\n\n\n    if (m = css.match(RE_RGBA_PCT)) {\n      var rgb$3 = m.slice(1, 5);\n\n      for (var i$3 = 0; i$3 < 3; i$3++) {\n        rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n      }\n\n      rgb$3[3] = +rgb$3[3];\n      return rgb$3;\n    } // hsl(0,100%,50%)\n\n\n    if (m = css.match(RE_HSL)) {\n      var hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      var rgb$4 = hsl2rgb(hsl);\n      rgb$4[3] = 1;\n      return rgb$4;\n    } // hsla(0,100%,50%,0.5)\n\n\n    if (m = css.match(RE_HSLA)) {\n      var hsl$1 = m.slice(1, 4);\n      hsl$1[1] *= 0.01;\n      hsl$1[2] *= 0.01;\n      var rgb$5 = hsl2rgb(hsl$1);\n      rgb$5[3] = +m[4]; // default alpha = 1\n\n      return rgb$5;\n    }\n  };\n\n  css2rgb$1.test = function (s) {\n    return RE_RGB.test(s) || RE_RGBA.test(s) || RE_RGB_PCT.test(s) || RE_RGBA_PCT.test(s) || RE_HSL.test(s) || RE_HSLA.test(s);\n  };\n\n  var css2rgb_1 = css2rgb$1;\n  var chroma$i = chroma_1;\n  var Color$B = Color_1;\n  var input$e = input$h;\n  var type$k = utils.type;\n  var rgb2css = rgb2css_1;\n  var css2rgb = css2rgb_1;\n\n  Color$B.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n  };\n\n  chroma$i.css = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$B, [null].concat(args, ['css'])))();\n  };\n\n  input$e.format.css = css2rgb;\n  input$e.autodetect.push({\n    p: 5,\n    test: function test(h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        rest[len] = arguments[len + 1];\n      }\n\n      if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n        return 'css';\n      }\n    }\n  });\n  var Color$A = Color_1;\n  var chroma$h = chroma_1;\n  var input$d = input$h;\n  var unpack$t = utils.unpack;\n\n  input$d.format.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgb = unpack$t(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n  };\n\n  chroma$h.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$A, [null].concat(args, ['gl'])))();\n  };\n\n  Color$A.prototype.gl = function () {\n    var rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  var unpack$s = utils.unpack;\n\n  var rgb2hcg$1 = function rgb2hcg$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$s(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var c = delta * 100 / 255;\n\n    var _g = min / (255 - delta) * 100;\n\n    var h;\n\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, c, _g];\n  };\n\n  var rgb2hcg_1 = rgb2hcg$1;\n  var unpack$r = utils.unpack;\n  var floor$3 = Math.floor;\n  /*\n   * this is basically just HSV with some minor tweaks\n   *\n   * hue.. [0..360]\n   * chroma .. [0..1]\n   * grayness .. [0..1]\n   */\n\n  var hcg2rgb = function hcg2rgb() {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$r(args, 'hcg');\n    var h = args[0];\n    var c = args[1];\n    var _g = args[2];\n    var r, g, b;\n    _g = _g * 255;\n\n    var _c = c * 255;\n\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor$3(h);\n      var f = h - i;\n      var p = _g * (1 - c);\n      var q = p + _c * (1 - f);\n      var t = p + _c * f;\n      var v = p + _c;\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hcg2rgb_1 = hcg2rgb;\n  var unpack$q = utils.unpack;\n  var type$j = utils.type;\n  var chroma$g = chroma_1;\n  var Color$z = Color_1;\n  var input$c = input$h;\n  var rgb2hcg = rgb2hcg_1;\n\n  Color$z.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n  };\n\n  chroma$g.hcg = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$z, [null].concat(args, ['hcg'])))();\n  };\n\n  input$c.format.hcg = hcg2rgb_1;\n  input$c.autodetect.push({\n    p: 1,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$q(args, 'hcg');\n\n      if (type$j(args) === 'array' && args.length === 3) {\n        return 'hcg';\n      }\n    }\n  });\n  var unpack$p = utils.unpack;\n  var last = utils.last;\n  var round$3 = Math.round;\n\n  var rgb2hex$2 = function rgb2hex$2() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$p(args, 'rgba');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n    var mode = last(args) || 'auto';\n\n    if (a === undefined) {\n      a = 1;\n    }\n\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n\n    r = round$3(r);\n    g = round$3(g);\n    b = round$3(b);\n    var u = r << 16 | g << 8 | b;\n    var str = \"000000\" + u.toString(16); //#.toUpperCase();\n\n    str = str.substr(str.length - 6);\n    var hxa = '0' + round$3(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n\n    switch (mode.toLowerCase()) {\n      case 'rgba':\n        return \"#\" + str + hxa;\n\n      case 'argb':\n        return \"#\" + hxa + str;\n\n      default:\n        return \"#\" + str;\n    }\n  };\n\n  var rgb2hex_1 = rgb2hex$2;\n  var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n  var hex2rgb$1 = function hex2rgb$1(hex) {\n    if (hex.match(RE_HEX)) {\n      // remove optional leading #\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      } // expand short-notation to full six-digit\n\n\n      if (hex.length === 3) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      var u = parseInt(hex, 16);\n      var r = u >> 16;\n      var g = u >> 8 & 0xFF;\n      var b = u & 0xFF;\n      return [r, g, b, 1];\n    } // match rgba hex format, eg #FF000077\n\n\n    if (hex.match(RE_HEXA)) {\n      if (hex.length === 5 || hex.length === 9) {\n        // remove optional leading #\n        hex = hex.substr(1);\n      } // expand short-notation to full eight-digit\n\n\n      if (hex.length === 4) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n      }\n\n      var u$1 = parseInt(hex, 16);\n      var r$1 = u$1 >> 24 & 0xFF;\n      var g$1 = u$1 >> 16 & 0xFF;\n      var b$1 = u$1 >> 8 & 0xFF;\n      var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n      return [r$1, g$1, b$1, a];\n    } // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n\n    throw new Error(\"unknown hex color: \" + hex);\n  };\n\n  var hex2rgb_1 = hex2rgb$1;\n  var chroma$f = chroma_1;\n  var Color$y = Color_1;\n  var type$i = utils.type;\n  var input$b = input$h;\n  var rgb2hex$1 = rgb2hex_1;\n\n  Color$y.prototype.hex = function (mode) {\n    return rgb2hex$1(this._rgb, mode);\n  };\n\n  chroma$f.hex = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$y, [null].concat(args, ['hex'])))();\n  };\n\n  input$b.format.hex = hex2rgb_1;\n  input$b.autodetect.push({\n    p: 4,\n    test: function test(h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        rest[len] = arguments[len + 1];\n      }\n\n      if (!rest.length && type$i(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {\n        return 'hex';\n      }\n    }\n  });\n  var unpack$o = utils.unpack;\n  var TWOPI$2 = utils.TWOPI;\n  var min$2 = Math.min;\n  var sqrt$4 = Math.sqrt;\n  var acos = Math.acos;\n\n  var rgb2hsi$1 = function rgb2hsi$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n\n\n    var ref = unpack$o(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var h;\n    var min_ = min$2(r, g, b);\n    var i = (r + g + b) / 3;\n    var s = i > 0 ? 1 - min_ / i : 0;\n\n    if (s === 0) {\n      h = NaN;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= sqrt$4((r - g) * (r - g) + (r - b) * (g - b));\n      h = acos(h);\n\n      if (b > g) {\n        h = TWOPI$2 - h;\n      }\n\n      h /= TWOPI$2;\n    }\n\n    return [h * 360, s, i];\n  };\n\n  var rgb2hsi_1 = rgb2hsi$1;\n  var unpack$n = utils.unpack;\n  var limit = utils.limit;\n  var TWOPI$1 = utils.TWOPI;\n  var PITHIRD = utils.PITHIRD;\n  var cos$4 = Math.cos;\n  /*\n   * hue [0..360]\n   * saturation [0..1]\n   * intensity [0..1]\n   */\n\n  var hsi2rgb = function hsi2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n\n\n    args = unpack$n(args, 'hsi');\n    var h = args[0];\n    var s = args[1];\n    var i = args[2];\n    var r, g, b;\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    if (isNaN(s)) {\n      s = 0;\n    } // normalize hue\n\n\n    if (h > 360) {\n      h -= 360;\n    }\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    h /= 360;\n\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      r = 1 - (g + b);\n    }\n\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsi2rgb_1 = hsi2rgb;\n  var unpack$m = utils.unpack;\n  var type$h = utils.type;\n  var chroma$e = chroma_1;\n  var Color$x = Color_1;\n  var input$a = input$h;\n  var rgb2hsi = rgb2hsi_1;\n\n  Color$x.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n  };\n\n  chroma$e.hsi = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$x, [null].concat(args, ['hsi'])))();\n  };\n\n  input$a.format.hsi = hsi2rgb_1;\n  input$a.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$m(args, 'hsi');\n\n      if (type$h(args) === 'array' && args.length === 3) {\n        return 'hsi';\n      }\n    }\n  });\n  var unpack$l = utils.unpack;\n  var type$g = utils.type;\n  var chroma$d = chroma_1;\n  var Color$w = Color_1;\n  var input$9 = input$h;\n  var rgb2hsl$1 = rgb2hsl_1;\n\n  Color$w.prototype.hsl = function () {\n    return rgb2hsl$1(this._rgb);\n  };\n\n  chroma$d.hsl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$w, [null].concat(args, ['hsl'])))();\n  };\n\n  input$9.format.hsl = hsl2rgb_1;\n  input$9.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$l(args, 'hsl');\n\n      if (type$g(args) === 'array' && args.length === 3) {\n        return 'hsl';\n      }\n    }\n  });\n  var unpack$k = utils.unpack;\n  var min$1 = Math.min;\n  var max$1 = Math.max;\n  /*\n   * supported arguments:\n   * - rgb2hsv(r,g,b)\n   * - rgb2hsv([r,g,b])\n   * - rgb2hsv({r,g,b})\n   */\n\n  var rgb2hsl = function rgb2hsl() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$k(args, 'rgb');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var min_ = min$1(r, g, b);\n    var max_ = max$1(r, g, b);\n    var delta = max_ - min_;\n    var h, s, v;\n    v = max_ / 255.0;\n\n    if (max_ === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max_;\n\n      if (r === max_) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max_) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max_) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, s, v];\n  };\n\n  var rgb2hsv$1 = rgb2hsl;\n  var unpack$j = utils.unpack;\n  var floor$2 = Math.floor;\n\n  var hsv2rgb = function hsv2rgb() {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$j(args, 'hsv');\n    var h = args[0];\n    var s = args[1];\n    var v = args[2];\n    var r, g, b;\n    v *= 255;\n\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor$2(h);\n      var f = h - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsv2rgb_1 = hsv2rgb;\n  var unpack$i = utils.unpack;\n  var type$f = utils.type;\n  var chroma$c = chroma_1;\n  var Color$v = Color_1;\n  var input$8 = input$h;\n  var rgb2hsv = rgb2hsv$1;\n\n  Color$v.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n\n  chroma$c.hsv = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$v, [null].concat(args, ['hsv'])))();\n  };\n\n  input$8.format.hsv = hsv2rgb_1;\n  input$8.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$i(args, 'hsv');\n\n      if (type$f(args) === 'array' && args.length === 3) {\n        return 'hsv';\n      }\n    }\n  });\n  var labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n    // D65 standard referent\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    // 4 / 29\n    t1: 0.206896552,\n    // 6 / 29\n    t2: 0.12841855,\n    // 3 * t1 * t1\n    t3: 0.008856452 // t1 * t1 * t1\n\n  };\n  var LAB_CONSTANTS$3 = labConstants;\n  var unpack$h = utils.unpack;\n  var pow$a = Math.pow;\n\n  var rgb2lab$2 = function rgb2lab$2() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$h(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2xyz(r, g, b);\n    var x = ref$1[0];\n    var y = ref$1[1];\n    var z = ref$1[2];\n    var l = 116 * y - 16;\n    return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n  };\n\n  var rgb_xyz = function rgb_xyz(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    }\n\n    return pow$a((r + 0.055) / 1.055, 2.4);\n  };\n\n  var xyz_lab = function xyz_lab(t) {\n    if (t > LAB_CONSTANTS$3.t3) {\n      return pow$a(t, 1 / 3);\n    }\n\n    return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n  };\n\n  var rgb2xyz = function rgb2xyz(r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n    return [x, y, z];\n  };\n\n  var rgb2lab_1 = rgb2lab$2;\n  var LAB_CONSTANTS$2 = labConstants;\n  var unpack$g = utils.unpack;\n  var pow$9 = Math.pow;\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n\n  var lab2rgb$1 = function lab2rgb$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$g(args, 'lab');\n    var l = args[0];\n    var a = args[1];\n    var b = args[2];\n    var x, y, z, r, g, b_;\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n  };\n\n  var xyz_rgb = function xyz_rgb(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055);\n  };\n\n  var lab_xyz = function lab_xyz(t) {\n    return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0);\n  };\n\n  var lab2rgb_1 = lab2rgb$1;\n  var unpack$f = utils.unpack;\n  var type$e = utils.type;\n  var chroma$b = chroma_1;\n  var Color$u = Color_1;\n  var input$7 = input$h;\n  var rgb2lab$1 = rgb2lab_1;\n\n  Color$u.prototype.lab = function () {\n    return rgb2lab$1(this._rgb);\n  };\n\n  chroma$b.lab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$u, [null].concat(args, ['lab'])))();\n  };\n\n  input$7.format.lab = lab2rgb_1;\n  input$7.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$f(args, 'lab');\n\n      if (type$e(args) === 'array' && args.length === 3) {\n        return 'lab';\n      }\n    }\n  });\n  var unpack$e = utils.unpack;\n  var RAD2DEG = utils.RAD2DEG;\n  var sqrt$3 = Math.sqrt;\n  var atan2$2 = Math.atan2;\n  var round$2 = Math.round;\n\n  var lab2lch$2 = function lab2lch$2() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$e(args, 'lab');\n    var l = ref[0];\n    var a = ref[1];\n    var b = ref[2];\n    var c = sqrt$3(a * a + b * b);\n    var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n\n    if (round$2(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n\n    return [l, c, h];\n  };\n\n  var lab2lch_1 = lab2lch$2;\n  var unpack$d = utils.unpack;\n  var rgb2lab = rgb2lab_1;\n  var lab2lch$1 = lab2lch_1;\n\n  var rgb2lch$1 = function rgb2lch$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$d(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2lab(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch$1(l, a, b_);\n  };\n\n  var rgb2lch_1 = rgb2lch$1;\n  var unpack$c = utils.unpack;\n  var DEG2RAD = utils.DEG2RAD;\n  var sin$3 = Math.sin;\n  var cos$3 = Math.cos;\n\n  var lch2lab$2 = function lch2lab$2() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n     A saturation multiplier was added by Gregor Aisch\n    */\n\n\n    var ref = unpack$c(args, 'lch');\n    var l = ref[0];\n    var c = ref[1];\n    var h = ref[2];\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    h = h * DEG2RAD;\n    return [l, cos$3(h) * c, sin$3(h) * c];\n  };\n\n  var lch2lab_1 = lch2lab$2;\n  var unpack$b = utils.unpack;\n  var lch2lab$1 = lch2lab_1;\n  var lab2rgb = lab2rgb_1;\n\n  var lch2rgb$1 = function lch2rgb$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$b(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab$1(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = lab2rgb(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var lch2rgb_1 = lch2rgb$1;\n  var unpack$a = utils.unpack;\n  var lch2rgb = lch2rgb_1;\n\n  var hcl2rgb = function hcl2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var hcl = unpack$a(args, 'hcl').reverse();\n    return lch2rgb.apply(void 0, hcl);\n  };\n\n  var hcl2rgb_1 = hcl2rgb;\n  var unpack$9 = utils.unpack;\n  var type$d = utils.type;\n  var chroma$a = chroma_1;\n  var Color$t = Color_1;\n  var input$6 = input$h;\n  var rgb2lch = rgb2lch_1;\n\n  Color$t.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n  };\n\n  Color$t.prototype.hcl = function () {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  chroma$a.lch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['lch'])))();\n  };\n\n  chroma$a.hcl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['hcl'])))();\n  };\n\n  input$6.format.lch = lch2rgb_1;\n  input$6.format.hcl = hcl2rgb_1;\n  ['lch', 'hcl'].forEach(function (m) {\n    return input$6.autodetect.push({\n      p: 2,\n      test: function test() {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) {\n          args[len] = arguments[len];\n        }\n\n        args = unpack$9(args, m);\n\n        if (type$d(args) === 'array' && args.length === 3) {\n          return m;\n        }\n      }\n    });\n  });\n  /**\n  \tX11 color names\n   \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n  var w3cx11$1 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n  var w3cx11_1 = w3cx11$1;\n  var Color$s = Color_1;\n  var input$5 = input$h;\n  var type$c = utils.type;\n  var w3cx11 = w3cx11_1;\n  var hex2rgb = hex2rgb_1;\n  var rgb2hex = rgb2hex_1;\n\n  Color$s.prototype.name = function () {\n    var hex = rgb2hex(this._rgb, 'rgb');\n\n    for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n      var n = list[i];\n\n      if (w3cx11[n] === hex) {\n        return n.toLowerCase();\n      }\n    }\n\n    return hex;\n  };\n\n  input$5.format.named = function (name) {\n    name = name.toLowerCase();\n\n    if (w3cx11[name]) {\n      return hex2rgb(w3cx11[name]);\n    }\n\n    throw new Error('unknown color name: ' + name);\n  };\n\n  input$5.autodetect.push({\n    p: 5,\n    test: function test(h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        rest[len] = arguments[len + 1];\n      }\n\n      if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n        return 'named';\n      }\n    }\n  });\n  var unpack$8 = utils.unpack;\n\n  var rgb2num$1 = function rgb2num$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$8(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  var rgb2num_1 = rgb2num$1;\n  var type$b = utils.type;\n\n  var num2rgb = function num2rgb(num) {\n    if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      var r = num >> 16;\n      var g = num >> 8 & 0xFF;\n      var b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    throw new Error(\"unknown num color: \" + num);\n  };\n\n  var num2rgb_1 = num2rgb;\n  var chroma$9 = chroma_1;\n  var Color$r = Color_1;\n  var input$4 = input$h;\n  var type$a = utils.type;\n  var rgb2num = rgb2num_1;\n\n  Color$r.prototype.num = function () {\n    return rgb2num(this._rgb);\n  };\n\n  chroma$9.num = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$r, [null].concat(args, ['num'])))();\n  };\n\n  input$4.format.num = num2rgb_1;\n  input$4.autodetect.push({\n    p: 5,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n  var chroma$8 = chroma_1;\n  var Color$q = Color_1;\n  var input$3 = input$h;\n  var unpack$7 = utils.unpack;\n  var type$9 = utils.type;\n  var round$1 = Math.round;\n\n  Color$q.prototype.rgb = function (rnd) {\n    if (rnd === void 0) rnd = true;\n\n    if (rnd === false) {\n      return this._rgb.slice(0, 3);\n    }\n\n    return this._rgb.slice(0, 3).map(round$1);\n  };\n\n  Color$q.prototype.rgba = function (rnd) {\n    if (rnd === void 0) rnd = true;\n    return this._rgb.slice(0, 4).map(function (v, i) {\n      return i < 3 ? rnd === false ? v : round$1(v) : v;\n    });\n  };\n\n  chroma$8.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$q, [null].concat(args, ['rgb'])))();\n  };\n\n  input$3.format.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgba = unpack$7(args, 'rgba');\n\n    if (rgba[3] === undefined) {\n      rgba[3] = 1;\n    }\n\n    return rgba;\n  };\n\n  input$3.autodetect.push({\n    p: 3,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$7(args, 'rgba');\n\n      if (type$9(args) === 'array' && (args.length === 3 || args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n        return 'rgb';\n      }\n    }\n  });\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   */\n\n  var log$1 = Math.log;\n\n  var temperature2rgb$1 = function temperature2rgb$1(kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n\n    if (temp < 66) {\n      r = 255;\n      g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log$1(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log$1(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log$1(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log$1(g);\n      b = 255;\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var temperature2rgb_1 = temperature2rgb$1;\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   **/\n\n  var temperature2rgb = temperature2rgb_1;\n  var unpack$6 = utils.unpack;\n  var round = Math.round;\n\n  var rgb2temperature$1 = function rgb2temperature$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgb = unpack$6(args, 'rgb');\n    var r = rgb[0],\n        b = rgb[2];\n    var minTemp = 1000;\n    var maxTemp = 40000;\n    var eps = 0.4;\n    var temp;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      var rgb$1 = temperature2rgb(temp);\n\n      if (rgb$1[2] / rgb$1[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return round(temp);\n  };\n\n  var rgb2temperature_1 = rgb2temperature$1;\n  var chroma$7 = chroma_1;\n  var Color$p = Color_1;\n  var input$2 = input$h;\n  var rgb2temperature = rgb2temperature_1;\n\n  Color$p.prototype.temp = Color$p.prototype.kelvin = Color$p.prototype.temperature = function () {\n    return rgb2temperature(this._rgb);\n  };\n\n  chroma$7.temp = chroma$7.kelvin = chroma$7.temperature = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$p, [null].concat(args, ['temp'])))();\n  };\n\n  input$2.format.temp = input$2.format.kelvin = input$2.format.temperature = temperature2rgb_1;\n  var unpack$5 = utils.unpack;\n  var cbrt = Math.cbrt;\n  var pow$8 = Math.pow;\n  var sign$1 = Math.sign;\n\n  var rgb2oklab$2 = function rgb2oklab$2() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    } // OKLab color space implementation taken from\n    // https://bottosson.github.io/posts/oklab/\n\n\n    var ref = unpack$5(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n    var lr = ref$1[0];\n    var lg = ref$1[1];\n    var lb = ref$1[2];\n    var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n    var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n    var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n    return [0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s, 1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s, 0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s];\n  };\n\n  var rgb2oklab_1 = rgb2oklab$2;\n\n  function rgb2lrgb(c) {\n    var abs = Math.abs(c);\n\n    if (abs < 0.04045) {\n      return c / 12.92;\n    }\n\n    return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n  }\n\n  var unpack$4 = utils.unpack;\n  var pow$7 = Math.pow;\n  var sign = Math.sign;\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n\n  var oklab2rgb$1 = function oklab2rgb$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$4(args, 'lab');\n    var L = args[0];\n    var a = args[1];\n    var b = args[2];\n    var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n    var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n    var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n    return [255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s), 255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s), 255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s), args.length > 3 ? args[3] : 1];\n  };\n\n  var oklab2rgb_1 = oklab2rgb$1;\n\n  function lrgb2rgb(c) {\n    var abs = Math.abs(c);\n\n    if (abs > 0.0031308) {\n      return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n    }\n\n    return c * 12.92;\n  }\n\n  var unpack$3 = utils.unpack;\n  var type$8 = utils.type;\n  var chroma$6 = chroma_1;\n  var Color$o = Color_1;\n  var input$1 = input$h;\n  var rgb2oklab$1 = rgb2oklab_1;\n\n  Color$o.prototype.oklab = function () {\n    return rgb2oklab$1(this._rgb);\n  };\n\n  chroma$6.oklab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$o, [null].concat(args, ['oklab'])))();\n  };\n\n  input$1.format.oklab = oklab2rgb_1;\n  input$1.autodetect.push({\n    p: 3,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$3(args, 'oklab');\n\n      if (type$8(args) === 'array' && args.length === 3) {\n        return 'oklab';\n      }\n    }\n  });\n  var unpack$2 = utils.unpack;\n  var rgb2oklab = rgb2oklab_1;\n  var lab2lch = lab2lch_1;\n\n  var rgb2oklch$1 = function rgb2oklch$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$2(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2oklab(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch(l, a, b_);\n  };\n\n  var rgb2oklch_1 = rgb2oklch$1;\n  var unpack$1 = utils.unpack;\n  var lch2lab = lch2lab_1;\n  var oklab2rgb = oklab2rgb_1;\n\n  var oklch2rgb = function oklch2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$1(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = oklab2rgb(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var oklch2rgb_1 = oklch2rgb;\n  var unpack = utils.unpack;\n  var type$7 = utils.type;\n  var chroma$5 = chroma_1;\n  var Color$n = Color_1;\n  var input = input$h;\n  var rgb2oklch = rgb2oklch_1;\n\n  Color$n.prototype.oklch = function () {\n    return rgb2oklch(this._rgb);\n  };\n\n  chroma$5.oklch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color$n, [null].concat(args, ['oklch'])))();\n  };\n\n  input.format.oklch = oklch2rgb_1;\n  input.autodetect.push({\n    p: 3,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack(args, 'oklch');\n\n      if (type$7(args) === 'array' && args.length === 3) {\n        return 'oklch';\n      }\n    }\n  });\n  var Color$m = Color_1;\n  var type$6 = utils.type;\n\n  Color$m.prototype.alpha = function (a, mutate) {\n    if (mutate === void 0) mutate = false;\n\n    if (a !== undefined && type$6(a) === 'number') {\n      if (mutate) {\n        this._rgb[3] = a;\n        return this;\n      }\n\n      return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n\n    return this._rgb[3];\n  };\n\n  var Color$l = Color_1;\n\n  Color$l.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n\n  var Color$k = Color_1;\n  var LAB_CONSTANTS$1 = labConstants;\n\n  Color$k.prototype.darken = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lab = me.lab();\n    lab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    return new Color$k(lab, 'lab').alpha(me.alpha(), true);\n  };\n\n  Color$k.prototype.brighten = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.darken(-amount);\n  };\n\n  Color$k.prototype.darker = Color$k.prototype.darken;\n  Color$k.prototype.brighter = Color$k.prototype.brighten;\n  var Color$j = Color_1;\n\n  Color$j.prototype.get = function (mc) {\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n\n      if (i > -1) {\n        return src[i];\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var Color$i = Color_1;\n  var type$5 = utils.type;\n  var pow$6 = Math.pow;\n  var EPS = 1e-7;\n  var MAX_ITER = 20;\n\n  Color$i.prototype.luminance = function (lum) {\n    if (lum !== undefined && type$5(lum) === 'number') {\n      if (lum === 0) {\n        // return pure black\n        return new Color$i([0, 0, 0, this._rgb[3]], 'rgb');\n      }\n\n      if (lum === 1) {\n        // return pure white\n        return new Color$i([255, 255, 255, this._rgb[3]], 'rgb');\n      } // compute new color using...\n\n\n      var cur_lum = this.luminance();\n      var mode = 'rgb';\n      var max_iter = MAX_ITER;\n\n      var test = function test(low, high) {\n        var mid = low.interpolate(high, 0.5, mode);\n        var lm = mid.luminance();\n\n        if (Math.abs(lum - lm) < EPS || !max_iter--) {\n          // close enough\n          return mid;\n        }\n\n        return lm > lum ? test(low, mid) : test(mid, high);\n      };\n\n      var rgb = (cur_lum > lum ? test(new Color$i([0, 0, 0]), this) : test(this, new Color$i([255, 255, 255]))).rgb();\n      return new Color$i(rgb.concat([this._rgb[3]]));\n    }\n\n    return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\n  };\n\n  var rgb2luminance = function rgb2luminance(r, g, b) {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  var luminance_x = function luminance_x(x) {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow$6((x + 0.055) / 1.055, 2.4);\n  };\n\n  var interpolator$1 = {};\n  var Color$h = Color_1;\n  var type$4 = utils.type;\n  var interpolator = interpolator$1;\n\n  var mix$1 = function mix$1(col1, col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 3;\n\n    while (len-- > 0) {\n      rest[len] = arguments[len + 3];\n    }\n\n    var mode = rest[0] || 'lrgb';\n\n    if (!interpolator[mode] && !rest.length) {\n      // fall back to the first supported mode\n      mode = Object.keys(interpolator)[0];\n    }\n\n    if (!interpolator[mode]) {\n      throw new Error(\"interpolation mode \" + mode + \" is not defined\");\n    }\n\n    if (type$4(col1) !== 'object') {\n      col1 = new Color$h(col1);\n    }\n\n    if (type$4(col2) !== 'object') {\n      col2 = new Color$h(col2);\n    }\n\n    return interpolator[mode](col1, col2, f).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  var Color$g = Color_1;\n  var mix = mix$1;\n\n  Color$g.prototype.mix = Color$g.prototype.interpolate = function (col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 2;\n\n    while (len-- > 0) {\n      rest[len] = arguments[len + 2];\n    }\n\n    return mix.apply(void 0, [this, col2, f].concat(rest));\n  };\n\n  var Color$f = Color_1;\n\n  Color$f.prototype.premultiply = function (mutate) {\n    if (mutate === void 0) mutate = false;\n    var rgb = this._rgb;\n    var a = rgb[3];\n\n    if (mutate) {\n      this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n      return this;\n    } else {\n      return new Color$f([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n  };\n\n  var Color$e = Color_1;\n  var LAB_CONSTANTS = labConstants;\n\n  Color$e.prototype.saturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n\n    return new Color$e(lch, 'lch').alpha(me.alpha(), true);\n  };\n\n  Color$e.prototype.desaturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.saturate(-amount);\n  };\n\n  var Color$d = Color_1;\n  var type$3 = utils.type;\n\n  Color$d.prototype.set = function (mc, value, mutate) {\n    if (mutate === void 0) mutate = false;\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n\n      if (i > -1) {\n        if (type$3(value) == 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n\n            case '-':\n              src[i] += +value;\n              break;\n\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n\n            default:\n              src[i] = +value;\n          }\n        } else if (type$3(value) === 'number') {\n          src[i] = value;\n        } else {\n          throw new Error(\"unsupported value for Color.set\");\n        }\n\n        var out = new Color$d(src, mode);\n\n        if (mutate) {\n          this._rgb = out._rgb;\n          return this;\n        }\n\n        return out;\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var Color$c = Color_1;\n\n  var rgb = function rgb(col1, col2, f) {\n    var xyz0 = col1._rgb;\n    var xyz1 = col2._rgb;\n    return new Color$c(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'rgb');\n  }; // register interpolator\n\n\n  interpolator$1.rgb = rgb;\n  var Color$b = Color_1;\n  var sqrt$2 = Math.sqrt;\n  var pow$5 = Math.pow;\n\n  var lrgb = function lrgb(col1, col2, f) {\n    var ref = col1._rgb;\n    var x1 = ref[0];\n    var y1 = ref[1];\n    var z1 = ref[2];\n    var ref$1 = col2._rgb;\n    var x2 = ref$1[0];\n    var y2 = ref$1[1];\n    var z2 = ref$1[2];\n    return new Color$b(sqrt$2(pow$5(x1, 2) * (1 - f) + pow$5(x2, 2) * f), sqrt$2(pow$5(y1, 2) * (1 - f) + pow$5(y2, 2) * f), sqrt$2(pow$5(z1, 2) * (1 - f) + pow$5(z2, 2) * f), 'rgb');\n  }; // register interpolator\n\n\n  interpolator$1.lrgb = lrgb;\n  var Color$a = Color_1;\n\n  var lab = function lab(col1, col2, f) {\n    var xyz0 = col1.lab();\n    var xyz1 = col2.lab();\n    return new Color$a(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'lab');\n  }; // register interpolator\n\n\n  interpolator$1.lab = lab;\n  var Color$9 = Color_1;\n\n  var _hsx = function _hsx(col1, col2, f, m) {\n    var assign, assign$1;\n    var xyz0, xyz1;\n\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    } else if (m === 'oklch') {\n      xyz0 = col1.oklch().reverse();\n      xyz1 = col2.oklch().reverse();\n    }\n\n    var hue0, hue1, sat0, sat1, lbv0, lbv1;\n\n    if (m.substr(0, 1) === 'h' || m === 'oklch') {\n      assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2];\n      assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2];\n    }\n\n    var sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      // both colors have hue\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n\n      if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n\n      if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n\n    if (sat === undefined) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n  };\n\n  var interpolate_hsx$5 = _hsx;\n\n  var lch = function lch(col1, col2, f) {\n    return interpolate_hsx$5(col1, col2, f, 'lch');\n  }; // register interpolator\n\n\n  interpolator$1.lch = lch;\n  interpolator$1.hcl = lch;\n  var Color$8 = Color_1;\n\n  var num = function num(col1, col2, f) {\n    var c1 = col1.num();\n    var c2 = col2.num();\n    return new Color$8(c1 + f * (c2 - c1), 'num');\n  }; // register interpolator\n\n\n  interpolator$1.num = num;\n  var interpolate_hsx$4 = _hsx;\n\n  var hcg = function hcg(col1, col2, f) {\n    return interpolate_hsx$4(col1, col2, f, 'hcg');\n  }; // register interpolator\n\n\n  interpolator$1.hcg = hcg;\n  var interpolate_hsx$3 = _hsx;\n\n  var hsi = function hsi(col1, col2, f) {\n    return interpolate_hsx$3(col1, col2, f, 'hsi');\n  }; // register interpolator\n\n\n  interpolator$1.hsi = hsi;\n  var interpolate_hsx$2 = _hsx;\n\n  var hsl = function hsl(col1, col2, f) {\n    return interpolate_hsx$2(col1, col2, f, 'hsl');\n  }; // register interpolator\n\n\n  interpolator$1.hsl = hsl;\n  var interpolate_hsx$1 = _hsx;\n\n  var hsv = function hsv(col1, col2, f) {\n    return interpolate_hsx$1(col1, col2, f, 'hsv');\n  }; // register interpolator\n\n\n  interpolator$1.hsv = hsv;\n  var Color$7 = Color_1;\n\n  var oklab = function oklab(col1, col2, f) {\n    var xyz0 = col1.oklab();\n    var xyz1 = col2.oklab();\n    return new Color$7(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'oklab');\n  }; // register interpolator\n\n\n  interpolator$1.oklab = oklab;\n  var interpolate_hsx = _hsx;\n\n  var oklch = function oklch(col1, col2, f) {\n    return interpolate_hsx(col1, col2, f, 'oklch');\n  }; // register interpolator\n\n\n  interpolator$1.oklch = oklch;\n  var Color$6 = Color_1;\n  var clip_rgb$1 = utils.clip_rgb;\n  var pow$4 = Math.pow;\n  var sqrt$1 = Math.sqrt;\n  var PI$1 = Math.PI;\n  var cos$2 = Math.cos;\n  var sin$2 = Math.sin;\n  var atan2$1 = Math.atan2;\n\n  var average = function average(colors, mode, weights) {\n    if (mode === void 0) mode = 'lrgb';\n    if (weights === void 0) weights = null;\n    var l = colors.length;\n\n    if (!weights) {\n      weights = Array.from(new Array(l)).map(function () {\n        return 1;\n      });\n    } // normalize weights\n\n\n    var k = l / weights.reduce(function (a, b) {\n      return a + b;\n    });\n    weights.forEach(function (w, i) {\n      weights[i] *= k;\n    }); // convert colors to Color objects\n\n    colors = colors.map(function (c) {\n      return new Color$6(c);\n    });\n\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors, weights);\n    }\n\n    var first = colors.shift();\n    var xyz = first.get(mode);\n    var cnt = [];\n    var dx = 0;\n    var dy = 0; // initial color\n\n    for (var i = 0; i < xyz.length; i++) {\n      xyz[i] = (xyz[i] || 0) * weights[0];\n      cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        var A = xyz[i] / 180 * PI$1;\n        dx += cos$2(A) * weights[0];\n        dy += sin$2(A) * weights[0];\n      }\n    }\n\n    var alpha = first.alpha() * weights[0];\n    colors.forEach(function (c, ci) {\n      var xyz2 = c.get(mode);\n      alpha += c.alpha() * weights[ci + 1];\n\n      for (var i = 0; i < xyz.length; i++) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += weights[ci + 1];\n\n          if (mode.charAt(i) === 'h') {\n            var A = xyz2[i] / 180 * PI$1;\n            dx += cos$2(A) * weights[ci + 1];\n            dy += sin$2(A) * weights[ci + 1];\n          } else {\n            xyz[i] += xyz2[i] * weights[ci + 1];\n          }\n        }\n      }\n    });\n\n    for (var i$1 = 0; i$1 < xyz.length; i$1++) {\n      if (mode.charAt(i$1) === 'h') {\n        var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n\n        while (A$1 < 0) {\n          A$1 += 360;\n        }\n\n        while (A$1 >= 360) {\n          A$1 -= 360;\n        }\n\n        xyz[i$1] = A$1;\n      } else {\n        xyz[i$1] = xyz[i$1] / cnt[i$1];\n      }\n    }\n\n    alpha /= l;\n    return new Color$6(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n  };\n\n  var _average_lrgb = function _average_lrgb(colors, weights) {\n    var l = colors.length;\n    var xyz = [0, 0, 0, 0];\n\n    for (var i = 0; i < colors.length; i++) {\n      var col = colors[i];\n      var f = weights[i] / l;\n      var rgb = col._rgb;\n      xyz[0] += pow$4(rgb[0], 2) * f;\n      xyz[1] += pow$4(rgb[1], 2) * f;\n      xyz[2] += pow$4(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n\n    xyz[0] = sqrt$1(xyz[0]);\n    xyz[1] = sqrt$1(xyz[1]);\n    xyz[2] = sqrt$1(xyz[2]);\n\n    if (xyz[3] > 0.9999999) {\n      xyz[3] = 1;\n    }\n\n    return new Color$6(clip_rgb$1(xyz));\n  }; // minimal multi-purpose interface\n  // @requires utils color analyze\n\n\n  var chroma$4 = chroma_1;\n  var type$2 = utils.type;\n  var pow$3 = Math.pow;\n\n  var scale$2 = function scale$2(colors) {\n    // constructor\n    var _mode = 'rgb';\n\n    var _nacol = chroma$4('#ccc');\n\n    var _spread = 0; // const _fixed = false;\n\n    var _domain = [0, 1];\n    var _pos = [];\n    var _padding = [0, 0];\n    var _classes = false;\n    var _colors = [];\n    var _out = false;\n    var _min = 0;\n    var _max = 1;\n    var _correctLightness = false;\n    var _colorCache = {};\n    var _useCache = true;\n    var _gamma = 1; // private methods\n\n    var setColors = function setColors(colors) {\n      colors = colors || ['#fff', '#000'];\n\n      if (colors && type$2(colors) === 'string' && chroma$4.brewer && chroma$4.brewer[colors.toLowerCase()]) {\n        colors = chroma$4.brewer[colors.toLowerCase()];\n      }\n\n      if (type$2(colors) === 'array') {\n        // handle single color\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        } // make a copy of the colors\n\n\n        colors = colors.slice(0); // convert to chroma classes\n\n        for (var c = 0; c < colors.length; c++) {\n          colors[c] = chroma$4(colors[c]);\n        } // auto-fill color position\n\n\n        _pos.length = 0;\n\n        for (var c$1 = 0; c$1 < colors.length; c$1++) {\n          _pos.push(c$1 / (colors.length - 1));\n        }\n      }\n\n      resetCache();\n      return _colors = colors;\n    };\n\n    var getClass = function getClass(value) {\n      if (_classes != null) {\n        var n = _classes.length - 1;\n        var i = 0;\n\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n\n        return i - 1;\n      }\n\n      return 0;\n    };\n\n    var tMapLightness = function tMapLightness(t) {\n      return t;\n    };\n\n    var tMapDomain = function tMapDomain(t) {\n      return t;\n    }; // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n\n    var getColor = function getColor(val, bypassMap) {\n      var col, t;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          // find the class\n          var c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          // just interpolate between min/max\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      } // domain map\n\n\n      t = tMapDomain(t);\n\n      if (!bypassMap) {\n        t = tMapLightness(t); // lightness correction\n      }\n\n      if (_gamma !== 1) {\n        t = pow$3(t, _gamma);\n      }\n\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n      t = Math.min(1, Math.max(0, t));\n      var k = Math.floor(t * 10000);\n\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type$2(_colors) === 'array') {\n          //for i in [0.._pos.length-1]\n          for (var i = 0; i < _pos.length; i++) {\n            var p = _pos[i];\n\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma$4.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type$2(_colors) === 'function') {\n          col = _colors(t);\n        }\n\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n\n      return col;\n    };\n\n    var resetCache = function resetCache() {\n      return _colorCache = {};\n    };\n\n    setColors(colors); // public interface\n\n    var f = function f(v) {\n      var c = chroma$4(getColor(v));\n\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n\n    f.classes = function (classes) {\n      if (classes != null) {\n        if (type$2(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          var d = chroma$4.analyze(_domain);\n\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma$4.limits(d, 'e', classes);\n          }\n        }\n\n        return f;\n      }\n\n      return _classes;\n    };\n\n    f.domain = function (domain) {\n      if (!arguments.length) {\n        return _domain;\n      }\n\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      var k = _colors.length;\n\n      if (domain.length === k && _min !== _max) {\n        // update positions\n        for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n          var d = list[i];\n\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (var c = 0; c < k; c++) {\n          _pos.push(c / (k - 1));\n        }\n\n        if (domain.length > 2) {\n          // set domain map\n          var tOut = domain.map(function (d, i) {\n            return i / (domain.length - 1);\n          });\n          var tBreaks = domain.map(function (d) {\n            return (d - _min) / (_max - _min);\n          });\n\n          if (!tBreaks.every(function (val, i) {\n            return tOut[i] === val;\n          })) {\n            tMapDomain = function tMapDomain(t) {\n              if (t <= 0 || t >= 1) {\n                return t;\n              }\n\n              var i = 0;\n\n              while (t >= tBreaks[i + 1]) {\n                i++;\n              }\n\n              var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n              var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n              return out;\n            };\n          }\n        }\n      }\n\n      _domain = [_min, _max];\n      return f;\n    };\n\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n\n    f.range = function (colors, _pos) {\n      setColors(colors);\n      return f;\n    };\n\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n\n      _spread = val;\n      return f;\n    };\n\n    f.correctLightness = function (v) {\n      if (v == null) {\n        v = true;\n      }\n\n      _correctLightness = v;\n      resetCache();\n\n      if (_correctLightness) {\n        tMapLightness = function tMapLightness(t) {\n          var L0 = getColor(0, true).lab()[0];\n          var L1 = getColor(1, true).lab()[0];\n          var pol = L0 > L1;\n          var L_actual = getColor(t, true).lab()[0];\n          var L_ideal = L0 + (L1 - L0) * t;\n          var L_diff = L_actual - L_ideal;\n          var t0 = 0;\n          var t1 = 1;\n          var max_iter = 20;\n\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {\n                L_diff *= -1;\n              }\n\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n\n          return t;\n        };\n      } else {\n        tMapLightness = function tMapLightness(t) {\n          return t;\n        };\n      }\n\n      return f;\n    };\n\n    f.padding = function (p) {\n      if (p != null) {\n        if (type$2(p) === 'number') {\n          p = [p, p];\n        }\n\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n\n    f.colors = function (numColors, out) {\n      // If no arguments are given, return the original colors that were provided\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n\n      var result = [];\n\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        var dm = _domain[0];\n        var dd = _domain[1] - dm;\n        result = __range__(0, numColors, false).map(function (i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        // returns all colors based on the defined classes\n        colors = [];\n        var samples = [];\n\n        if (_classes && _classes.length > 2) {\n          for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n\n        result = samples.map(function (v) {\n          return f(v);\n        });\n      }\n\n      if (chroma$4[out]) {\n        result = result.map(function (c) {\n          return c[out]();\n        });\n      }\n\n      return result;\n    };\n\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma$4(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n\n    return f;\n  };\n\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n\n    return range;\n  } //\n  // interpolates between a set of colors uzing a bezier spline\n  //\n  // @requires utils lab\n\n\n  var Color$5 = Color_1;\n  var scale$1 = scale$2; // nth row of the pascal triangle\n\n  var binom_row = function binom_row(n) {\n    var row = [1, 1];\n\n    for (var i = 1; i < n; i++) {\n      var newrow = [1];\n\n      for (var j = 1; j <= row.length; j++) {\n        newrow[j] = (row[j] || 0) + row[j - 1];\n      }\n\n      row = newrow;\n    }\n\n    return row;\n  };\n\n  var bezier = function bezier(colors) {\n    var assign, assign$1, assign$2;\n    var I, lab0, lab1, lab2;\n    colors = colors.map(function (c) {\n      return new Color$5(c);\n    });\n\n    if (colors.length === 2) {\n      // linear interpolation\n      assign = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign[0], lab1 = assign[1];\n\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return lab0[i] + t * (lab1[i] - lab0[i]);\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length === 3) {\n      // quadratic bezier interpolation\n      assign$1 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2];\n\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i];\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length === 4) {\n      // cubic bezier interpolation\n      var lab3;\n      assign$2 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3];\n\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i];\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length >= 5) {\n      // general case (degree n bezier)\n      var labs, row, n;\n      labs = colors.map(function (c) {\n        return c.lab();\n      });\n      n = colors.length - 1;\n      row = binom_row(n);\n\n      I = function I(t) {\n        var u = 1 - t;\n        var lab = [0, 1, 2].map(function (i) {\n          return labs.reduce(function (sum, el, j) {\n            return sum + row[j] * Math.pow(u, n - j) * Math.pow(t, j) * el[i];\n          }, 0);\n        });\n        return new Color$5(lab, 'lab');\n      };\n    } else {\n      throw new RangeError(\"No point in running bezier with only one color.\");\n    }\n\n    return I;\n  };\n\n  var bezier_1 = function bezier_1(colors) {\n    var f = bezier(colors);\n\n    f.scale = function () {\n      return scale$1(f);\n    };\n\n    return f;\n  };\n  /*\n   * interpolates between a set of colors uzing a bezier spline\n   * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n   */\n\n\n  var chroma$3 = chroma_1;\n\n  var blend = function blend(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw new Error('unknown blend mode ' + mode);\n    }\n\n    return blend[mode](bottom, top);\n  };\n\n  var blend_f = function blend_f(f) {\n    return function (bottom, top) {\n      var c0 = chroma$3(top).rgb();\n      var c1 = chroma$3(bottom).rgb();\n      return chroma$3.rgb(f(c0, c1));\n    };\n  };\n\n  var each = function each(f) {\n    return function (c0, c1) {\n      var out = [];\n      out[0] = f(c0[0], c1[0]);\n      out[1] = f(c0[1], c1[1]);\n      out[2] = f(c0[2], c1[2]);\n      return out;\n    };\n  };\n\n  var normal = function normal(a) {\n    return a;\n  };\n\n  var multiply = function multiply(a, b) {\n    return a * b / 255;\n  };\n\n  var darken = function darken(a, b) {\n    return a > b ? b : a;\n  };\n\n  var lighten = function lighten(a, b) {\n    return a > b ? a : b;\n  };\n\n  var screen = function screen(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  var overlay = function overlay(a, b) {\n    return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n  };\n\n  var burn = function burn(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  var dodge = function dodge(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  }; // # add = (a,b) ->\n  // #     if (a + b > 255) then 255 else a + b\n\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn)); // blend.add = blend_f(each(add));\n\n  var blend_1 = blend; // cubehelix interpolation\n  // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n  // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n  var type$1 = utils.type;\n  var clip_rgb = utils.clip_rgb;\n  var TWOPI = utils.TWOPI;\n  var pow$2 = Math.pow;\n  var sin$1 = Math.sin;\n  var cos$1 = Math.cos;\n  var chroma$2 = chroma_1;\n\n  var cubehelix = function cubehelix(start, rotations, hue, gamma, lightness) {\n    if (start === void 0) start = 300;\n    if (rotations === void 0) rotations = -1.5;\n    if (hue === void 0) hue = 1;\n    if (gamma === void 0) gamma = 1;\n    if (lightness === void 0) lightness = [0, 1];\n    var dh = 0,\n        dl;\n\n    if (type$1(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n\n    var f = function f(fract) {\n      var a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      var l = pow$2(lightness[0] + dl * fract, gamma);\n      var h = dh !== 0 ? hue[0] + fract * dh : hue;\n      var amp = h * l * (1 - l) / 2;\n      var cos_a = cos$1(a);\n      var sin_a = sin$1(a);\n      var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      var b = l + amp * (+1.97294 * cos_a);\n      return chroma$2(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n\n    f.start = function (s) {\n      if (s == null) {\n        return start;\n      }\n\n      start = s;\n      return f;\n    };\n\n    f.rotations = function (r) {\n      if (r == null) {\n        return rotations;\n      }\n\n      rotations = r;\n      return f;\n    };\n\n    f.gamma = function (g) {\n      if (g == null) {\n        return gamma;\n      }\n\n      gamma = g;\n      return f;\n    };\n\n    f.hue = function (h) {\n      if (h == null) {\n        return hue;\n      }\n\n      hue = h;\n\n      if (type$1(hue) === 'array') {\n        dh = hue[1] - hue[0];\n\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n\n      return f;\n    };\n\n    f.lightness = function (h) {\n      if (h == null) {\n        return lightness;\n      }\n\n      if (type$1(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n\n      return f;\n    };\n\n    f.scale = function () {\n      return chroma$2.scale(f);\n    };\n\n    f.hue(hue);\n    return f;\n  };\n\n  var Color$4 = Color_1;\n  var digits = '0123456789abcdef';\n  var floor$1 = Math.floor;\n  var random = Math.random;\n\n  var random_1 = function random_1() {\n    var code = '#';\n\n    for (var i = 0; i < 6; i++) {\n      code += digits.charAt(floor$1(random() * 16));\n    }\n\n    return new Color$4(code, 'hex');\n  };\n\n  var type = type$p;\n  var log = Math.log;\n  var pow$1 = Math.pow;\n  var floor = Math.floor;\n  var abs$1 = Math.abs;\n\n  var analyze = function analyze(data, key) {\n    if (key === void 0) key = null;\n    var r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n\n    if (type(data) === 'object') {\n      data = Object.values(data);\n    }\n\n    data.forEach(function (val) {\n      if (key && type(val) === 'object') {\n        val = val[key];\n      }\n\n      if (val !== undefined && val !== null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n\n        if (val < r.min) {\n          r.min = val;\n        }\n\n        if (val > r.max) {\n          r.max = val;\n        }\n\n        r.count += 1;\n      }\n    });\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {\n      return limits(r, mode, num);\n    };\n\n    return r;\n  };\n\n  var limits = function limits(data, mode, num) {\n    if (mode === void 0) mode = 'equal';\n    if (num === void 0) num = 7;\n\n    if (type(data) == 'array') {\n      data = analyze(data);\n    }\n\n    var min = data.min;\n    var max = data.max;\n    var values = data.values.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (num === 1) {\n      return [min, max];\n    }\n\n    var limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n      // continuous\n      limits.push(min);\n      limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n      // equal interval\n      limits.push(min);\n\n      for (var i = 1; i < num; i++) {\n        limits.push(min + i / num * (max - min));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      // log scale\n      if (min <= 0) {\n        throw new Error('Logarithmic scales are only possible for values > 0');\n      }\n\n      var min_log = Math.LOG10E * log(min);\n      var max_log = Math.LOG10E * log(max);\n      limits.push(min);\n\n      for (var i$1 = 1; i$1 < num; i$1++) {\n        limits.push(pow$1(10, min_log + i$1 / num * (max_log - min_log)));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      // quantile scale\n      limits.push(min);\n\n      for (var i$2 = 1; i$2 < num; i$2++) {\n        var p = (values.length - 1) * i$2 / num;\n        var pb = floor(p);\n\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          // p > pb\n          var pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      // k-means clustering\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n      var cluster;\n      var n = values.length;\n      var assignments = new Array(n);\n      var clusterSizes = new Array(num);\n      var repeat = true;\n      var nb_iters = 0;\n      var centroids = null; // get seed values\n\n      centroids = [];\n      centroids.push(min);\n\n      for (var i$3 = 1; i$3 < num; i$3++) {\n        centroids.push(min + i$3 / num * (max - min));\n      }\n\n      centroids.push(max);\n\n      while (repeat) {\n        // assignment step\n        for (var j = 0; j < num; j++) {\n          clusterSizes[j] = 0;\n        }\n\n        for (var i$4 = 0; i$4 < n; i$4++) {\n          var value = values[i$4];\n          var mindist = Number.MAX_VALUE;\n          var best = void 0;\n\n          for (var j$1 = 0; j$1 < num; j$1++) {\n            var dist = abs$1(centroids[j$1] - value);\n\n            if (dist < mindist) {\n              mindist = dist;\n              best = j$1;\n            }\n\n            clusterSizes[best]++;\n            assignments[i$4] = best;\n          }\n        } // update centroids step\n\n\n        var newCentroids = new Array(num);\n\n        for (var j$2 = 0; j$2 < num; j$2++) {\n          newCentroids[j$2] = null;\n        }\n\n        for (var i$5 = 0; i$5 < n; i$5++) {\n          cluster = assignments[i$5];\n\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i$5];\n          } else {\n            newCentroids[cluster] += values[i$5];\n          }\n        }\n\n        for (var j$3 = 0; j$3 < num; j$3++) {\n          newCentroids[j$3] *= 1 / clusterSizes[j$3];\n        } // check convergence\n\n\n        repeat = false;\n\n        for (var j$4 = 0; j$4 < num; j$4++) {\n          if (newCentroids[j$4] !== centroids[j$4]) {\n            repeat = true;\n            break;\n          }\n        }\n\n        centroids = newCentroids;\n        nb_iters++;\n\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      } // finished k-means clustering\n      // the next part is borrowed from gabrielflor.it\n\n\n      var kClusters = {};\n\n      for (var j$5 = 0; j$5 < num; j$5++) {\n        kClusters[j$5] = [];\n      }\n\n      for (var i$6 = 0; i$6 < n; i$6++) {\n        cluster = assignments[i$6];\n        kClusters[cluster].push(values[i$6]);\n      }\n\n      var tmpKMeansBreaks = [];\n\n      for (var j$6 = 0; j$6 < num; j$6++) {\n        tmpKMeansBreaks.push(kClusters[j$6][0]);\n        tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\n      }\n\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n\n      for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\n        var v = tmpKMeansBreaks[i$7];\n\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n\n    return limits;\n  };\n\n  var analyze_1 = {\n    analyze: analyze,\n    limits: limits\n  };\n  var Color$3 = Color_1;\n\n  var contrast = function contrast(a, b) {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color$3(a);\n    b = new Color$3(b);\n    var l1 = a.luminance();\n    var l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n  };\n\n  var Color$2 = Color_1;\n  var sqrt = Math.sqrt;\n  var pow = Math.pow;\n  var min = Math.min;\n  var max = Math.max;\n  var atan2 = Math.atan2;\n  var abs = Math.abs;\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var exp = Math.exp;\n  var PI = Math.PI;\n\n  var deltaE = function deltaE(a, b, Kl, Kc, Kh) {\n    if (Kl === void 0) Kl = 1;\n    if (Kc === void 0) Kc = 1;\n    if (Kh === void 0) Kh = 1; // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n\n    var rad2deg = function rad2deg(rad) {\n      return 360 * rad / (2 * PI);\n    };\n\n    var deg2rad = function deg2rad(deg) {\n      return 2 * PI * deg / 360;\n    };\n\n    a = new Color$2(a);\n    b = new Color$2(b);\n    var ref = Array.from(a.lab());\n    var L1 = ref[0];\n    var a1 = ref[1];\n    var b1 = ref[2];\n    var ref$1 = Array.from(b.lab());\n    var L2 = ref$1[0];\n    var a2 = ref$1[1];\n    var b2 = ref$1[2];\n    var avgL = (L1 + L2) / 2;\n    var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    var avgC = (C1 + C2) / 2;\n    var G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    var a1p = a1 * (1 + G);\n    var a2p = a2 * (1 + G);\n    var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    var avgCp = (C1p + C2p) / 2;\n    var arctan1 = rad2deg(atan2(b1, a1p));\n    var arctan2 = rad2deg(atan2(b2, a2p));\n    var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    var T = 1 - 0.17 * cos(deg2rad(avgHp - 30)) + 0.24 * cos(deg2rad(2 * avgHp)) + 0.32 * cos(deg2rad(3 * avgHp + 6)) - 0.2 * cos(deg2rad(4 * avgHp - 63));\n    var deltaHp = h2p - h1p;\n    deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    var deltaL = L2 - L1;\n    var deltaCp = C2p - C1p;\n    var sl = 1 + 0.015 * pow(avgL - 50, 2) / sqrt(20 + pow(avgL - 50, 2));\n    var sc = 1 + 0.045 * avgCp;\n    var sh = 1 + 0.015 * avgCp * T;\n    var deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    var Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    var Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    var result = sqrt(pow(deltaL / (Kl * sl), 2) + pow(deltaCp / (Kc * sc), 2) + pow(deltaHp / (Kh * sh), 2) + Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh)));\n    return max(0, min(100, result));\n  };\n\n  var Color$1 = Color_1; // simple Euclidean distance\n\n  var distance = function distance(a, b, mode) {\n    if (mode === void 0) mode = 'lab'; // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n\n    a = new Color$1(a);\n    b = new Color$1(b);\n    var l1 = a.get(mode);\n    var l2 = b.get(mode);\n    var sum_sq = 0;\n\n    for (var i in l1) {\n      var d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n\n    return Math.sqrt(sum_sq);\n  };\n\n  var Color = Color_1;\n\n  var valid = function valid() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    try {\n      new (Function.prototype.bind.apply(Color, [null].concat(args)))();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }; // some pre-defined color scales:\n\n\n  var chroma$1 = chroma_1;\n  var scale = scale$2;\n  var scales = {\n    cool: function cool() {\n      return scale([chroma$1.hsl(180, 1, .9), chroma$1.hsl(250, .7, .4)]);\n    },\n    hot: function hot() {\n      return scale(['#000', '#f00', '#ff0', '#fff']).mode('rgb');\n    }\n  };\n  /**\n      ColorBrewer colors for chroma.js\n       Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n      Pennsylvania State University.\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n       Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  */\n\n  var colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  }; // add lowercase aliases for case-insensitive matches\n\n  for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n    var key = list[i];\n    colorbrewer[key.toLowerCase()] = colorbrewer[key];\n  }\n\n  var colorbrewer_1 = colorbrewer;\n  var chroma = chroma_1; // feel free to comment out anything to rollup\n  // a smaller chroma.js built\n  // io --> convert colors\n  // operators --> modify existing Colors\n  // interpolators\n  // generators -- > create new colors\n\n  chroma.average = average;\n  chroma.bezier = bezier_1;\n  chroma.blend = blend_1;\n  chroma.cubehelix = cubehelix;\n  chroma.mix = chroma.interpolate = mix$1;\n  chroma.random = random_1;\n  chroma.scale = scale$2; // other utility methods\n\n  chroma.analyze = analyze_1.analyze;\n  chroma.contrast = contrast;\n  chroma.deltaE = deltaE;\n  chroma.distance = distance;\n  chroma.limits = analyze_1.limits;\n  chroma.valid = valid; // scale\n\n  chroma.scales = scales; // colors\n\n  chroma.colors = w3cx11_1;\n  chroma.brewer = colorbrewer_1;\n  var chroma_js = chroma;\n  return chroma_js;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","chroma","limit$2","x","min","max","limit$1","clip_rgb$3","rgb","_clipped","_unclipped","slice","i","classToType","i$1","list$1","length","name","toLowerCase","type$p","obj","Object","prototype","toString","call","type$o","unpack$B","args","keyOrder","Array","split","filter","k","undefined","map","type$n","last$4","l","PI$2","Math","PI","utils","clip_rgb","limit","type","unpack","last","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$h","format","autodetect","last$3","clip_rgb$2","type$m","_input","Color$D","Color","len","arguments","me","constructor","mode","sorted","sort","a","b","p","list","chk","test","apply","_rgb","Error","push","hex","join","Color_1","chroma$k","Function","bind","concat","version","chroma_1","unpack$A","max$2","rgb2cmyk$1","ref","r","g","f","c","m","y","rgb2cmyk_1","unpack$z","cmyk2rgb","alpha","cmyk2rgb_1","chroma$j","Color$C","input$g","unpack$y","type$l","rgb2cmyk","cmyk","unpack$x","last$2","rnd","round","hsl2css$1","hsla","hsl2css_1","unpack$w","rgb2hsl$3","s","h","Number","NaN","rgb2hsl_1","unpack$v","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css$1","rgba","substr","rgb2css_1","unpack$u","round$5","hsl2rgb$1","assign","t3","t2","t1","h_","hsl2rgb_1","hsl2rgb","input$f","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","trim","named","e","match","rgb$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","chroma$i","Color$B","input$e","type$k","rgb2css","css2rgb","rest","Color$A","chroma$h","input$d","unpack$t","gl","unpack$s","rgb2hcg$1","delta","_g","rgb2hcg_1","unpack$r","floor$3","floor","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","hcg2rgb_1","unpack$q","type$j","chroma$g","Color$z","input$c","rgb2hcg","hcg","unpack$p","round$3","rgb2hex$2","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb$1","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","chroma$f","Color$y","type$i","input$b","rgb2hex$1","indexOf","unpack$o","TWOPI$2","min$2","sqrt$4","sqrt","acos","rgb2hsi$1","min_","rgb2hsi_1","unpack$n","TWOPI$1","cos$4","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$m","type$h","chroma$e","Color$x","input$a","rgb2hsi","hsi","unpack$l","type$g","chroma$d","Color$w","input$9","rgb2hsl$1","unpack$k","min$1","max$1","rgb2hsl","max_","rgb2hsv$1","unpack$j","floor$2","hsv2rgb","hsv2rgb_1","unpack$i","type$f","chroma$c","Color$v","input$8","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$h","pow$a","pow","rgb2lab$2","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","LAB_CONSTANTS$2","unpack$g","pow$9","lab2rgb$1","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$f","type$e","chroma$b","Color$u","input$7","rgb2lab$1","lab","unpack$e","sqrt$3","atan2$2","atan2","round$2","lab2lch$2","lab2lch_1","unpack$d","rgb2lab","lab2lch$1","rgb2lch$1","rgb2lch_1","unpack$c","sin$3","sin","cos$3","lch2lab$2","lch2lab_1","unpack$b","lch2lab$1","lab2rgb","lch2rgb$1","L","lch2rgb_1","unpack$a","lch2rgb","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$9","type$d","chroma$a","Color$t","input$6","rgb2lch","lch","forEach","w3cx11$1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","Color$s","input$5","type$c","w3cx11","hex2rgb","rgb2hex","keys","n","unpack$8","rgb2num$1","rgb2num_1","type$b","num2rgb","num","num2rgb_1","chroma$9","Color$r","input$4","type$a","rgb2num","chroma$8","Color$q","input$3","unpack$7","type$9","round$1","log$1","log","temperature2rgb$1","kelvin","temp","temperature2rgb_1","temperature2rgb","unpack$6","rgb2temperature$1","minTemp","maxTemp","eps","rgb2temperature_1","chroma$7","Color$p","input$2","rgb2temperature","temperature","unpack$5","cbrt","pow$8","sign$1","sign","rgb2oklab$2","rgb2lrgb","lr","lg","lb","rgb2oklab_1","abs","unpack$4","pow$7","oklab2rgb$1","lrgb2rgb","oklab2rgb_1","unpack$3","type$8","chroma$6","Color$o","input$1","rgb2oklab$1","oklab","unpack$2","rgb2oklab","lab2lch","rgb2oklch$1","rgb2oklch_1","unpack$1","lch2lab","oklab2rgb","oklch2rgb","oklch2rgb_1","type$7","chroma$5","Color$n","input","rgb2oklch","oklch","Color$m","type$6","mutate","Color$l","clipped","Color$k","LAB_CONSTANTS$1","darken","amount","brighten","darker","brighter","Color$j","get","mc","channel","src","Color$i","type$5","pow$6","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator$1","Color$h","type$4","interpolator","mix$1","col1","col2","Color$g","mix","Color$f","premultiply","Color$e","LAB_CONSTANTS","saturate","desaturate","Color$d","type$3","set","value","charAt","out","Color$c","xyz0","xyz1","Color$b","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$a","Color$9","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","interpolate_hsx$5","Color$8","c1","c2","interpolate_hsx$4","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","Color$7","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","Color$5","scale$1","binom_row","row","newrow","j","bezier","I","lab0","lab1","lab2","lab3","labs","sum","el","RangeError","bezier_1","scale","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","lighten","screen","overlay","burn","dodge","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","Color$4","digits","floor$1","random","random_1","code","pow$1","abs$1","data","key","MAX_VALUE","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","contrast","l1","l2","Color$2","exp","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","C1","C2","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rc","Rt","Color$1","distance","sum_sq","valid","chroma$1","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewer_1","chroma_js"],"sources":["/Users/hwi/Downloads/material-dashboard-react-main/node_modules/chroma-js/chroma.js"],"sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}